{
	"id": 0,
	"name": "@apollo/client",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1875,
			"name": "Context",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 26,
					"character": 32
				}
			],
			"target": 1317
		},
		{
			"id": 1387,
			"name": "PureQueryOptions",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 131,
					"character": 30
				}
			],
			"target": 372
		},
		{
			"id": 1268,
			"name": "isReference",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/index.ts",
					"line": 81,
					"character": 2
				}
			],
			"target": 1119
		},
		{
			"id": 1070,
			"name": "makeVar",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/index.ts",
					"line": 50,
					"character": 2
				}
			],
			"target": 900
		},
		{
			"id": 1824,
			"name": "resetApolloContext",
			"kind": 16777216,
			"kindString": "Reference",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/index.ts",
					"line": 7,
					"character": 2
				}
			],
			"target": 1822
		},
		{
			"id": 509,
			"name": "Cache",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 574,
					"name": "BatchOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 578,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 82,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 579,
							"name": "removeOptimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 90,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 580,
							"name": "onWatchUpdated",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 95,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 581,
									"name": "onWatchUpdated",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 582,
											"name": "watch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 547,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "WatchOptions"
											}
										},
										{
											"id": 583,
											"name": "diff",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 587,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "DiffResult"
											}
										},
										{
											"id": 584,
											"name": "lastDiff",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 587,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "DiffResult"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 575,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 576,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 577,
											"name": "cache",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 585,
												"name": "TCache"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 586,
										"name": "TUpdateResult"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								578,
								579
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								580,
								575
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/Cache.ts",
							"line": 67,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 585,
							"name": "TCache",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 662,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ApolloCache"
							}
						},
						{
							"id": 586,
							"name": "TUpdateResult",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 536,
					"name": "DiffOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 541,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 521,
								"name": "ReadOptions.canonizeResults"
							}
						},
						{
							"id": 544,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. Defaults to \"ROOT_QUERY\", which is the ID of the\nroot query object. This property makes writeQuery capable of writing data\nto any object in the cache."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 524,
								"name": "ReadOptions.id"
							}
						},
						{
							"id": 539,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 519,
								"name": "ReadOptions.optimistic"
							}
						},
						{
							"id": 538,
							"name": "previousResult",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 518,
								"name": "ReadOptions.previousResult"
							}
						},
						{
							"id": 542,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 545,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 546,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 522,
								"name": "ReadOptions.query"
							}
						},
						{
							"id": 540,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 520,
								"name": "ReadOptions.returnPartialData"
							}
						},
						{
							"id": 537,
							"name": "rootId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 517,
								"name": "ReadOptions.rootId"
							}
						},
						{
							"id": 543,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 546,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 523,
								"name": "ReadOptions.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								541,
								544,
								539,
								538,
								542,
								540,
								537,
								543
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/Cache.ts",
							"line": 28,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 545,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 546,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 516,
							"typeArguments": [
								{
									"type": "reference",
									"id": 546,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 545,
									"name": "TData"
								}
							],
							"name": "ReadOptions"
						}
					]
				},
				{
					"id": 562,
					"name": "EvictOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 565,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 50,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							}
						},
						{
							"id": 566,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 564,
							"name": "fieldName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 563,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								565,
								566,
								564,
								563
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/Cache.ts",
							"line": 47,
							"character": 19
						}
					]
				},
				{
					"id": 655,
					"name": "Fragment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 657,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A GraphQL document created using the `gql` template string tag from\n`graphql-tag` with one or more fragments which will be used to determine\nthe shape of data to read. If you provide more than one fragment in this\ndocument then you must also specify `fragmentName` to select a single."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 661,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 660,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							}
						},
						{
							"id": 658,
							"name": "fragmentName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the fragment in your GraphQL document to be used. If you do\nnot provide a `fragmentName` and there is only one fragment in your\n`fragment` document then that fragment will be used."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 656,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. This id should take the same form as the\nvalue returned by your `dataIdFromObject` function. If a value with your\nid does not exist in the store, `null` will be returned."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 659,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that your GraphQL fragments depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 660,
								"name": "TVariables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								657,
								658,
								656,
								659
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 28,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 660,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 661,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 603,
							"name": "ReadFragmentOptions"
						},
						{
							"type": "reference",
							"id": 622,
							"name": "WriteFragmentOptions"
						},
						{
							"type": "reference",
							"id": 821,
							"name": "ReadFragmentOptions"
						},
						{
							"type": "reference",
							"id": 845,
							"name": "WriteFragmentOptions"
						}
					]
				},
				{
					"id": 569,
					"name": "ModifyOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 573,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 571,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Modifiers"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Modifier"
									}
								]
							}
						},
						{
							"id": 570,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 61,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 572,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								573,
								571,
								570,
								572
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/Cache.ts",
							"line": 60,
							"character": 19
						}
					]
				},
				{
					"id": 603,
					"name": "ReadFragmentOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 606,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 96,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 608,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A GraphQL document created using the `gql` template string tag from\n`graphql-tag` with one or more fragments which will be used to determine\nthe shape of data to read. If you provide more than one fragment in this\ndocument then you must also specify `fragmentName` to select a single."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 611,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 612,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 657,
								"name": "Fragment.fragment"
							}
						},
						{
							"id": 609,
							"name": "fragmentName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the fragment in your GraphQL document to be used. If you do\nnot provide a `fragmentName` and there is only one fragment in your\n`fragment` document then that fragment will be used."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 658,
								"name": "Fragment.fragmentName"
							}
						},
						{
							"id": 607,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. This id should take the same form as the\nvalue returned by your `dataIdFromObject` function. If a value with your\nid does not exist in the store, `null` will be returned."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 656,
								"name": "Fragment.id"
							}
						},
						{
							"id": 605,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to read from optimistic or non-optimistic cache data. If\nthis named option is provided, the optimistic parameter of the\nreadQuery method can be omitted. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 90,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 604,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to return incomplete data rather than null.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 610,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that your GraphQL fragments depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 612,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 659,
								"name": "Fragment.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								606,
								608,
								609,
								607,
								605,
								604,
								610
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 78,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 611,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 612,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 655,
							"typeArguments": [
								{
									"type": "reference",
									"id": 612,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 611,
									"name": "TData"
								}
							],
							"name": "Fragment"
						}
					]
				},
				{
					"id": 516,
					"name": "ReadOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 521,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 524,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. Defaults to \"ROOT_QUERY\", which is the ID of the\nroot query object. This property makes writeQuery capable of writing data\nto any object in the cache."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 802,
								"name": "Query.id"
							}
						},
						{
							"id": 519,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 518,
							"name": "previousResult",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 522,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 526,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 525,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 800,
								"name": "Query.query"
							}
						},
						{
							"id": 520,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 517,
							"name": "rootId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 523,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 525,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 801,
								"name": "Query.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								521,
								524,
								519,
								518,
								522,
								520,
								517,
								523
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/Cache.ts",
							"line": 11,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 525,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 526,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 799,
							"typeArguments": [
								{
									"type": "reference",
									"id": 525,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 526,
									"name": "TData"
								}
							],
							"name": "Query"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 536,
							"name": "DiffOptions"
						},
						{
							"type": "reference",
							"id": 547,
							"name": "WatchOptions"
						}
					]
				},
				{
					"id": 594,
					"name": "ReadQueryOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 597,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 600,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. Defaults to \"ROOT_QUERY\", which is the ID of the\nroot query object. This property makes writeQuery capable of writing data\nto any object in the cache."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 802,
								"name": "Query.id"
							}
						},
						{
							"id": 596,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to read from optimistic or non-optimistic cache data. If\nthis named option is provided, the optimistic parameter of the\nreadQuery method can be omitted. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 598,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 601,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 602,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 800,
								"name": "Query.query"
							}
						},
						{
							"id": 595,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to return incomplete data rather than null.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 599,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 602,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 801,
								"name": "Query.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								597,
								600,
								596,
								598,
								595,
								599
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 57,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 601,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 602,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 799,
							"typeArguments": [
								{
									"type": "reference",
									"id": 602,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 601,
									"name": "TData"
								}
							],
							"name": "Query"
						}
					]
				},
				{
					"id": 567,
					"name": "ResetOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 568,
							"name": "discardWatches",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 57,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								568
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/Cache.ts",
							"line": 56,
							"character": 19
						}
					]
				},
				{
					"id": 643,
					"name": "UpdateFragmentOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 649,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to notify query watchers (default: true)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.broadcast"
							}
						},
						{
							"id": 646,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 96,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.canonizeResults"
							}
						},
						{
							"id": 651,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A GraphQL document created using the `gql` template string tag from\n`graphql-tag` with one or more fragments which will be used to determine\nthe shape of data to read. If you provide more than one fragment in this\ndocument then you must also specify `fragmentName` to select a single."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 653,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 654,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.fragment"
							}
						},
						{
							"id": 652,
							"name": "fragmentName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the fragment in your GraphQL document to be used. If you do\nnot provide a `fragmentName` and there is only one fragment in your\n`fragment` document then that fragment will be used."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.fragmentName"
							}
						},
						{
							"id": 648,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. This id should take the same form as the\nvalue returned by your `dataIdFromObject` function. If a value with your\nid does not exist in the store, `null` will be returned."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.id"
							}
						},
						{
							"id": 650,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to read from optimistic or non-optimistic cache data. If\nthis named option is provided, the optimistic parameter of the\nreadQuery method can be omitted. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 90,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.optimistic"
							}
						},
						{
							"id": 647,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, ignore existing field data rather than merging it with\nincoming data (default: false)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.overwrite"
							}
						},
						{
							"id": 645,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to return incomplete data rather than null.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.returnPartialData"
							}
						},
						{
							"id": 644,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that your GraphQL fragments depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 654,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								649,
								646,
								651,
								652,
								648,
								650,
								647,
								645,
								644
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 127,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 653,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 654,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"id": 603,
											"typeArguments": [
												{
													"type": "reference",
													"id": 653,
													"name": "TData"
												},
												{
													"type": "reference",
													"id": 654,
													"name": "TVariables"
												}
											],
											"name": "ReadFragmentOptions"
										},
										{
											"type": "reference",
											"id": 622,
											"typeArguments": [
												{
													"type": "reference",
													"id": 653,
													"name": "TData"
												},
												{
													"type": "reference",
													"id": 654,
													"name": "TVariables"
												}
											],
											"name": "WriteFragmentOptions"
										}
									]
								},
								{
									"type": "literal",
									"value": "data"
								}
							],
							"name": "Omit"
						}
					]
				},
				{
					"id": 632,
					"name": "UpdateQueryOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 639,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to notify query watchers (default: true)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.broadcast"
							}
						},
						{
							"id": 636,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.canonizeResults"
							}
						},
						{
							"id": 638,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. Defaults to \"ROOT_QUERY\", which is the ID of the\nroot query object. This property makes writeQuery capable of writing data\nto any object in the cache."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.id"
							}
						},
						{
							"id": 640,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to read from optimistic or non-optimistic cache data. If\nthis named option is provided, the optimistic parameter of the\nreadQuery method can be omitted. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.optimistic"
							}
						},
						{
							"id": 637,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, ignore existing field data rather than merging it with\nincoming data (default: false)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.overwrite"
							}
						},
						{
							"id": 634,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 641,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 642,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.query"
							}
						},
						{
							"id": 635,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to return incomplete data rather than null.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.returnPartialData"
							}
						},
						{
							"id": 633,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 642,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								639,
								636,
								638,
								640,
								637,
								634,
								635,
								633
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 121,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 641,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 642,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"id": 594,
											"typeArguments": [
												{
													"type": "reference",
													"id": 641,
													"name": "TData"
												},
												{
													"type": "reference",
													"id": 642,
													"name": "TVariables"
												}
											],
											"name": "ReadQueryOptions"
										},
										{
											"type": "reference",
											"id": 613,
											"typeArguments": [
												{
													"type": "reference",
													"id": 641,
													"name": "TData"
												},
												{
													"type": "reference",
													"id": 642,
													"name": "TVariables"
												}
											],
											"name": "WriteQueryOptions"
										}
									]
								},
								{
									"type": "literal",
									"value": "data"
								}
							],
							"name": "Omit"
						}
					]
				},
				{
					"id": 547,
					"name": "WatchOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 550,
							"name": "callback",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 43,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 510,
								"typeArguments": [
									{
										"type": "reference",
										"id": 560,
										"name": "TData"
									}
								],
								"name": "WatchCallback"
							}
						},
						{
							"id": 556,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 521,
								"name": "ReadOptions.canonizeResults"
							}
						},
						{
							"id": 559,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. Defaults to \"ROOT_QUERY\", which is the ID of the\nroot query object. This property makes writeQuery capable of writing data\nto any object in the cache."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 524,
								"name": "ReadOptions.id"
							}
						},
						{
							"id": 549,
							"name": "immediate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 551,
							"name": "lastDiff",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 44,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 587,
								"typeArguments": [
									{
										"type": "reference",
										"id": 560,
										"name": "TData"
									}
								],
								"name": "DiffResult"
							}
						},
						{
							"id": 554,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 519,
								"name": "ReadOptions.optimistic"
							}
						},
						{
							"id": 553,
							"name": "previousResult",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 518,
								"name": "ReadOptions.previousResult"
							}
						},
						{
							"id": 557,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 560,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 561,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 522,
								"name": "ReadOptions.query"
							}
						},
						{
							"id": 555,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 520,
								"name": "ReadOptions.returnPartialData"
							}
						},
						{
							"id": 552,
							"name": "rootId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 517,
								"name": "ReadOptions.rootId"
							}
						},
						{
							"id": 558,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 561,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 523,
								"name": "ReadOptions.variables"
							}
						},
						{
							"id": 548,
							"name": "watcher",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 41,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								550,
								556,
								559,
								549,
								551,
								554,
								553,
								557,
								555,
								552,
								558,
								548
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/Cache.ts",
							"line": 37,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 560,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 561,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 516,
							"typeArguments": [
								{
									"type": "reference",
									"id": 561,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 560,
									"name": "TData"
								}
							],
							"name": "ReadOptions"
						}
					]
				},
				{
					"id": 622,
					"name": "WriteFragmentOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 628,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to notify query watchers (default: true)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 833,
								"name": "WriteOptions.broadcast"
							}
						},
						{
							"id": 627,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The data you will be writing to the store."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 103,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 630,
								"name": "TData"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 832,
								"name": "WriteOptions.data"
							}
						},
						{
							"id": 624,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A GraphQL document created using the `gql` template string tag from\n`graphql-tag` with one or more fragments which will be used to determine\nthe shape of data to read. If you provide more than one fragment in this\ndocument then you must also specify `fragmentName` to select a single."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 630,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 631,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 657,
								"name": "Fragment.fragment"
							}
						},
						{
							"id": 625,
							"name": "fragmentName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the fragment in your GraphQL document to be used. If you do\nnot provide a `fragmentName` and there is only one fragment in your\n`fragment` document then that fragment will be used."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 658,
								"name": "Fragment.fragmentName"
							}
						},
						{
							"id": 623,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. This id should take the same form as the\nvalue returned by your `dataIdFromObject` function. If a value with your\nid does not exist in the store, `null` will be returned."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 656,
								"name": "Fragment.id"
							}
						},
						{
							"id": 629,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, ignore existing field data rather than merging it with\nincoming data (default: false)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 834,
								"name": "WriteOptions.overwrite"
							}
						},
						{
							"id": 626,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that your GraphQL fragments depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 631,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 659,
								"name": "Fragment.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								628,
								627,
								624,
								625,
								623,
								629,
								626
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 118,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 630,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 631,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 655,
							"typeArguments": [
								{
									"type": "reference",
									"id": 631,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 630,
									"name": "TData"
								}
							],
							"name": "Fragment"
						},
						{
							"type": "reference",
							"id": 831,
							"typeArguments": [
								{
									"type": "reference",
									"id": 630,
									"name": "TData"
								}
							],
							"name": "WriteOptions"
						}
					]
				},
				{
					"id": 527,
					"name": "WriteOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 533,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to notify query watchers (default: true)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.broadcast"
							}
						},
						{
							"id": 528,
							"name": "dataId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 532,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, ignore existing field data rather than merging it with\nincoming data (default: false)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.overwrite"
							}
						},
						{
							"id": 531,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 534,
												"name": "TResult"
											},
											{
												"type": "reference",
												"id": 535,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.query"
							}
						},
						{
							"id": 529,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 534,
								"name": "TResult"
							}
						},
						{
							"id": 530,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 535,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								533,
								528,
								532,
								531,
								529,
								530
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/Cache.ts",
							"line": 20,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 534,
							"name": "TResult",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 535,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 799,
									"typeArguments": [
										{
											"type": "reference",
											"id": 535,
											"name": "TVariables"
										},
										{
											"type": "reference",
											"id": 534,
											"name": "TResult"
										}
									],
									"name": "DataProxy.Query"
								},
								{
									"type": "literal",
									"value": "id"
								}
							],
							"name": "Omit"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 831,
									"typeArguments": [
										{
											"type": "reference",
											"id": 534,
											"name": "TResult"
										}
									],
									"name": "DataProxy.WriteOptions"
								},
								{
									"type": "literal",
									"value": "data"
								}
							],
							"name": "Omit"
						}
					]
				},
				{
					"id": 613,
					"name": "WriteQueryOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 618,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to notify query watchers (default: true)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 833,
								"name": "WriteOptions.broadcast"
							}
						},
						{
							"id": 617,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The data you will be writing to the store."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 103,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 620,
								"name": "TData"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 832,
								"name": "WriteOptions.data"
							}
						},
						{
							"id": 616,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. Defaults to \"ROOT_QUERY\", which is the ID of the\nroot query object. This property makes writeQuery capable of writing data\nto any object in the cache."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 802,
								"name": "Query.id"
							}
						},
						{
							"id": 619,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, ignore existing field data rather than merging it with\nincoming data (default: false)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 834,
								"name": "WriteOptions.overwrite"
							}
						},
						{
							"id": 614,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 620,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 621,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 800,
								"name": "Query.query"
							}
						},
						{
							"id": 615,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 621,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 801,
								"name": "Query.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								618,
								617,
								616,
								619,
								614,
								615
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 115,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 620,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 621,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 799,
							"typeArguments": [
								{
									"type": "reference",
									"id": 621,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 620,
									"name": "TData"
								}
							],
							"name": "Query"
						},
						{
							"type": "reference",
							"id": 831,
							"typeArguments": [
								{
									"type": "reference",
									"id": 620,
									"name": "TData"
								}
							],
							"name": "WriteOptions"
						}
					]
				},
				{
					"id": 587,
					"name": "DiffResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 133,
							"character": 14
						}
					],
					"typeParameter": [
						{
							"id": 593,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 588,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 590,
									"name": "complete",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/cache/core/types/DataProxy.ts",
											"line": 135,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 592,
									"name": "fromOptimisticTransaction",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/cache/core/types/DataProxy.ts",
											"line": 137,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 591,
									"name": "missing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/cache/core/types/DataProxy.ts",
											"line": 136,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1040,
											"name": "MissingFieldError"
										}
									}
								},
								{
									"id": 589,
									"name": "result",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/cache/core/types/DataProxy.ts",
											"line": 134,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 593,
										"name": "T"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										590,
										592,
										591,
										589
									]
								}
							],
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 133,
									"character": 30
								}
							]
						}
					}
				},
				{
					"id": 510,
					"name": "WatchCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/core/types/Cache.ts",
							"line": 6,
							"character": 14
						}
					],
					"typeParameter": [
						{
							"id": 515,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 511,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/core/types/Cache.ts",
									"line": 6,
									"character": 43
								}
							],
							"signatures": [
								{
									"id": 512,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 513,
											"name": "diff",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 587,
												"typeArguments": [
													{
														"type": "reference",
														"id": 515,
														"name": "TData"
													}
												],
												"name": "Cache.DiffResult"
											}
										},
										{
											"id": 514,
											"name": "lastDiff",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 587,
												"typeArguments": [
													{
														"type": "reference",
														"id": 515,
														"name": "TData"
													}
												],
												"name": "Cache.DiffResult"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						574,
						536,
						562,
						655,
						569,
						603,
						516,
						594,
						567,
						643,
						632,
						547,
						622,
						527,
						613
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						587,
						510
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/core/types/Cache.ts",
					"line": 5,
					"character": 17
				}
			]
		},
		{
			"id": 798,
			"name": "DataProxy",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 805,
					"name": "Fragment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 807,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A GraphQL document created using the `gql` template string tag from\n`graphql-tag` with one or more fragments which will be used to determine\nthe shape of data to read. If you provide more than one fragment in this\ndocument then you must also specify `fragmentName` to select a single."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 661,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 660,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							}
						},
						{
							"id": 808,
							"name": "fragmentName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the fragment in your GraphQL document to be used. If you do\nnot provide a `fragmentName` and there is only one fragment in your\n`fragment` document then that fragment will be used."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 806,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. This id should take the same form as the\nvalue returned by your `dataIdFromObject` function. If a value with your\nid does not exist in the store, `null` will be returned."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 809,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that your GraphQL fragments depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 660,
								"name": "TVariables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								807,
								808,
								806,
								809
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 28,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 810,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 811,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					]
				},
				{
					"id": 799,
					"name": "Query",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 802,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. Defaults to \"ROOT_QUERY\", which is the ID of the\nroot query object. This property makes writeQuery capable of writing data\nto any object in the cache."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 800,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 804,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 803,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							}
						},
						{
							"id": 801,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 803,
								"name": "TVariables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								802,
								800,
								801
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 7,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 803,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 804,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 516,
							"name": "ReadOptions"
						},
						{
							"type": "reference",
							"id": 594,
							"name": "ReadQueryOptions"
						},
						{
							"type": "reference",
							"id": 613,
							"name": "WriteQueryOptions"
						},
						{
							"type": "reference",
							"id": 812,
							"name": "ReadQueryOptions"
						},
						{
							"type": "reference",
							"id": 836,
							"name": "WriteQueryOptions"
						}
					]
				},
				{
					"id": 821,
					"name": "ReadFragmentOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 824,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 96,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 826,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A GraphQL document created using the `gql` template string tag from\n`graphql-tag` with one or more fragments which will be used to determine\nthe shape of data to read. If you provide more than one fragment in this\ndocument then you must also specify `fragmentName` to select a single."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 611,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 612,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 657,
								"name": "Fragment.fragment"
							}
						},
						{
							"id": 827,
							"name": "fragmentName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the fragment in your GraphQL document to be used. If you do\nnot provide a `fragmentName` and there is only one fragment in your\n`fragment` document then that fragment will be used."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 658,
								"name": "Fragment.fragmentName"
							}
						},
						{
							"id": 825,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. This id should take the same form as the\nvalue returned by your `dataIdFromObject` function. If a value with your\nid does not exist in the store, `null` will be returned."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 656,
								"name": "Fragment.id"
							}
						},
						{
							"id": 823,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to read from optimistic or non-optimistic cache data. If\nthis named option is provided, the optimistic parameter of the\nreadQuery method can be omitted. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 90,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 822,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to return incomplete data rather than null.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 828,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that your GraphQL fragments depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 612,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 659,
								"name": "Fragment.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								824,
								826,
								827,
								825,
								823,
								822,
								828
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 78,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 829,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 830,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 655,
							"typeArguments": [
								{
									"type": "reference",
									"id": 612,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 611,
									"name": "TData"
								}
							],
							"name": "Fragment"
						}
					]
				},
				{
					"id": 812,
					"name": "ReadQueryOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 815,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 818,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. Defaults to \"ROOT_QUERY\", which is the ID of the\nroot query object. This property makes writeQuery capable of writing data\nto any object in the cache."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 802,
								"name": "Query.id"
							}
						},
						{
							"id": 814,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to read from optimistic or non-optimistic cache data. If\nthis named option is provided, the optimistic parameter of the\nreadQuery method can be omitted. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 816,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 601,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 602,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 800,
								"name": "Query.query"
							}
						},
						{
							"id": 813,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to return incomplete data rather than null.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 817,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 602,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 801,
								"name": "Query.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								815,
								818,
								814,
								816,
								813,
								817
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 57,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 819,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 820,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 799,
							"typeArguments": [
								{
									"type": "reference",
									"id": 602,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 601,
									"name": "TData"
								}
							],
							"name": "Query"
						}
					]
				},
				{
					"id": 866,
					"name": "UpdateFragmentOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 872,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to notify query watchers (default: true)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.broadcast"
							}
						},
						{
							"id": 869,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 96,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.canonizeResults"
							}
						},
						{
							"id": 874,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A GraphQL document created using the `gql` template string tag from\n`graphql-tag` with one or more fragments which will be used to determine\nthe shape of data to read. If you provide more than one fragment in this\ndocument then you must also specify `fragmentName` to select a single."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 653,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 654,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.fragment"
							}
						},
						{
							"id": 875,
							"name": "fragmentName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the fragment in your GraphQL document to be used. If you do\nnot provide a `fragmentName` and there is only one fragment in your\n`fragment` document then that fragment will be used."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.fragmentName"
							}
						},
						{
							"id": 871,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. This id should take the same form as the\nvalue returned by your `dataIdFromObject` function. If a value with your\nid does not exist in the store, `null` will be returned."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.id"
							}
						},
						{
							"id": 873,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to read from optimistic or non-optimistic cache data. If\nthis named option is provided, the optimistic parameter of the\nreadQuery method can be omitted. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 90,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.optimistic"
							}
						},
						{
							"id": 870,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, ignore existing field data rather than merging it with\nincoming data (default: false)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.overwrite"
							}
						},
						{
							"id": 868,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to return incomplete data rather than null.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.returnPartialData"
							}
						},
						{
							"id": 867,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that your GraphQL fragments depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 654,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								872,
								869,
								874,
								875,
								871,
								873,
								870,
								868,
								867
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 127,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 876,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 877,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"id": 603,
											"typeArguments": [
												{
													"type": "reference",
													"id": 653,
													"name": "TData"
												},
												{
													"type": "reference",
													"id": 654,
													"name": "TVariables"
												}
											],
											"name": "ReadFragmentOptions"
										},
										{
											"type": "reference",
											"id": 622,
											"typeArguments": [
												{
													"type": "reference",
													"id": 653,
													"name": "TData"
												},
												{
													"type": "reference",
													"id": 654,
													"name": "TVariables"
												}
											],
											"name": "WriteFragmentOptions"
										}
									]
								},
								{
									"type": "literal",
									"value": "data"
								}
							],
							"name": "Omit"
						}
					]
				},
				{
					"id": 855,
					"name": "UpdateQueryOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 862,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to notify query watchers (default: true)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.broadcast"
							}
						},
						{
							"id": 859,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.canonizeResults"
							}
						},
						{
							"id": 861,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. Defaults to \"ROOT_QUERY\", which is the ID of the\nroot query object. This property makes writeQuery capable of writing data\nto any object in the cache."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.id"
							}
						},
						{
							"id": 863,
							"name": "optimistic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to read from optimistic or non-optimistic cache data. If\nthis named option is provided, the optimistic parameter of the\nreadQuery method can be omitted. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.optimistic"
							}
						},
						{
							"id": 860,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, ignore existing field data rather than merging it with\nincoming data (default: false)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.overwrite"
							}
						},
						{
							"id": 857,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 641,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 642,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.query"
							}
						},
						{
							"id": 858,
							"name": "returnPartialData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to return incomplete data rather than null.\nDefaults to false."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.returnPartialData"
							}
						},
						{
							"id": 856,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 642,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								862,
								859,
								861,
								863,
								860,
								857,
								858,
								856
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 121,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 864,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 865,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"id": 594,
											"typeArguments": [
												{
													"type": "reference",
													"id": 641,
													"name": "TData"
												},
												{
													"type": "reference",
													"id": 642,
													"name": "TVariables"
												}
											],
											"name": "ReadQueryOptions"
										},
										{
											"type": "reference",
											"id": 613,
											"typeArguments": [
												{
													"type": "reference",
													"id": 641,
													"name": "TData"
												},
												{
													"type": "reference",
													"id": 642,
													"name": "TVariables"
												}
											],
											"name": "WriteQueryOptions"
										}
									]
								},
								{
									"type": "literal",
									"value": "data"
								}
							],
							"name": "Omit"
						}
					]
				},
				{
					"id": 845,
					"name": "WriteFragmentOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 851,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to notify query watchers (default: true)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 833,
								"name": "WriteOptions.broadcast"
							}
						},
						{
							"id": 850,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The data you will be writing to the store."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 103,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 630,
								"name": "TData"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 832,
								"name": "WriteOptions.data"
							}
						},
						{
							"id": 847,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A GraphQL document created using the `gql` template string tag from\n`graphql-tag` with one or more fragments which will be used to determine\nthe shape of data to read. If you provide more than one fragment in this\ndocument then you must also specify `fragmentName` to select a single."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 630,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 631,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 657,
								"name": "Fragment.fragment"
							}
						},
						{
							"id": 848,
							"name": "fragmentName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the fragment in your GraphQL document to be used. If you do\nnot provide a `fragmentName` and there is only one fragment in your\n`fragment` document then that fragment will be used."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 658,
								"name": "Fragment.fragmentName"
							}
						},
						{
							"id": 846,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. This id should take the same form as the\nvalue returned by your `dataIdFromObject` function. If a value with your\nid does not exist in the store, `null` will be returned."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 656,
								"name": "Fragment.id"
							}
						},
						{
							"id": 852,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, ignore existing field data rather than merging it with\nincoming data (default: false)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 834,
								"name": "WriteOptions.overwrite"
							}
						},
						{
							"id": 849,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that your GraphQL fragments depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 631,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 659,
								"name": "Fragment.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								851,
								850,
								847,
								848,
								846,
								852,
								849
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 118,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 853,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 854,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 655,
							"typeArguments": [
								{
									"type": "reference",
									"id": 631,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 630,
									"name": "TData"
								}
							],
							"name": "Fragment"
						},
						{
							"type": "reference",
							"id": 831,
							"typeArguments": [
								{
									"type": "reference",
									"id": 630,
									"name": "TData"
								}
							],
							"name": "WriteOptions"
						}
					]
				},
				{
					"id": 831,
					"name": "WriteOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 833,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to notify query watchers (default: true)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 832,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The data you will be writing to the store."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 103,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 835,
								"name": "TData"
							}
						},
						{
							"id": 834,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, ignore existing field data rather than merging it with\nincoming data (default: false)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								833,
								832,
								834
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 99,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 835,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 613,
							"name": "WriteQueryOptions"
						},
						{
							"type": "reference",
							"id": 622,
							"name": "WriteFragmentOptions"
						},
						{
							"type": "reference",
							"id": 836,
							"name": "WriteQueryOptions"
						},
						{
							"type": "reference",
							"id": 845,
							"name": "WriteFragmentOptions"
						}
					]
				},
				{
					"id": 836,
					"name": "WriteQueryOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 841,
							"name": "broadcast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to notify query watchers (default: true)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 833,
								"name": "WriteOptions.broadcast"
							}
						},
						{
							"id": 840,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The data you will be writing to the store."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 103,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 620,
								"name": "TData"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 832,
								"name": "WriteOptions.data"
							}
						},
						{
							"id": 839,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The root id to be used. Defaults to \"ROOT_QUERY\", which is the ID of the\nroot query object. This property makes writeQuery capable of writing data\nto any object in the cache."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 802,
								"name": "Query.id"
							}
						},
						{
							"id": 842,
							"name": "overwrite",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, ignore existing field data rather than merging it with\nincoming data (default: false)."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 834,
								"name": "WriteOptions.overwrite"
							}
						},
						{
							"id": 837,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The GraphQL query shape to be used constructed using the `gql` template\nstring tag from `graphql-tag`. The query will be used to determine the\nshape of the data to be read."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 620,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 621,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 800,
								"name": "Query.query"
							}
						},
						{
							"id": 838,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Any variables that the GraphQL query may depend on."
							},
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"id": 621,
								"name": "TVariables"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 801,
								"name": "Query.variables"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								841,
								840,
								839,
								842,
								837,
								838
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 115,
							"character": 19
						}
					],
					"typeParameter": [
						{
							"id": 843,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 844,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 799,
							"typeArguments": [
								{
									"type": "reference",
									"id": 621,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 620,
									"name": "TData"
								}
							],
							"name": "Query"
						},
						{
							"type": "reference",
							"id": 831,
							"typeArguments": [
								{
									"type": "reference",
									"id": 620,
									"name": "TData"
								}
							],
							"name": "WriteOptions"
						}
					]
				},
				{
					"id": 878,
					"name": "DiffResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/core/types/DataProxy.ts",
							"line": 133,
							"character": 14
						}
					],
					"typeParameter": [
						{
							"id": 884,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 879,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 881,
									"name": "complete",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/cache/core/types/DataProxy.ts",
											"line": 135,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 883,
									"name": "fromOptimisticTransaction",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/cache/core/types/DataProxy.ts",
											"line": 137,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 882,
									"name": "missing",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/cache/core/types/DataProxy.ts",
											"line": 136,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1040,
											"name": "MissingFieldError"
										}
									}
								},
								{
									"id": 880,
									"name": "result",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/cache/core/types/DataProxy.ts",
											"line": 134,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 593,
										"name": "T"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										881,
										883,
										882,
										880
									]
								}
							],
							"sources": [
								{
									"fileName": "src/cache/core/types/DataProxy.ts",
									"line": 133,
									"character": 30
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						805,
						799,
						821,
						812,
						866,
						855,
						845,
						831,
						836
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						878
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/core/types/DataProxy.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 1283,
			"name": "gql",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 1284,
					"name": "default",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql-tag/lib/index.d.ts",
							"line": 4,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "gql"
					}
				},
				{
					"id": 1285,
					"name": "gql",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql-tag/lib/index.d.ts",
							"line": 12,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "gql"
					}
				},
				{
					"id": 1292,
					"name": "disableExperimentalFragmentVariables",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql-tag/lib/index.d.ts",
							"line": 12,
							"character": 246
						}
					],
					"signatures": [
						{
							"id": 1293,
							"name": "disableExperimentalFragmentVariables",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1288,
					"name": "disableFragmentWarnings",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql-tag/lib/index.d.ts",
							"line": 12,
							"character": 84
						}
					],
					"signatures": [
						{
							"id": 1289,
							"name": "disableFragmentWarnings",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1290,
					"name": "enableExperimentalFragmentVariables",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql-tag/lib/index.d.ts",
							"line": 12,
							"character": 153
						}
					],
					"signatures": [
						{
							"id": 1291,
							"name": "enableExperimentalFragmentVariables",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1286,
					"name": "resetCaches",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql-tag/lib/index.d.ts",
							"line": 12,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 1287,
							"name": "resetCaches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1284,
						1285
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1292,
						1288,
						1290,
						1286
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/graphql-tag/lib/index.d.ts",
					"line": 3,
					"character": 25
				}
			]
		},
		{
			"id": 1828,
			"name": "DocumentType",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 1830,
					"name": "Mutation",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/parser/index.ts",
							"line": 12,
							"character": 2
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 1829,
					"name": "Query",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/parser/index.ts",
							"line": 11,
							"character": 2
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 1831,
					"name": "Subscription",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/parser/index.ts",
							"line": 13,
							"character": 2
						}
					],
					"defaultValue": "2"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						1830,
						1829,
						1831
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/parser/index.ts",
					"line": 10,
					"character": 12
				}
			]
		},
		{
			"id": 455,
			"name": "NetworkStatus",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"shortText": "The current status of a query’s execution in our system."
			},
			"children": [
				{
					"id": 462,
					"name": "error",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "No request is in flight for this query, but one or more errors were detected."
					},
					"sources": [
						{
							"fileName": "src/core/networkStatus.ts",
							"line": 45,
							"character": 2
						}
					],
					"defaultValue": "8"
				},
				{
					"id": 458,
					"name": "fetchMore",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "Indicates that `fetchMore` was called on this query and that the query created is currently in\nflight."
					},
					"sources": [
						{
							"fileName": "src/core/networkStatus.ts",
							"line": 22,
							"character": 2
						}
					],
					"defaultValue": "3"
				},
				{
					"id": 456,
					"name": "loading",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "The query has never been run before and the query is now currently running. A query will still\nhave this network status even if a partial data result was returned from the cache, but a\nquery was dispatched anyway."
					},
					"sources": [
						{
							"fileName": "src/core/networkStatus.ts",
							"line": 10,
							"character": 2
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 460,
					"name": "poll",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "Indicates that a polling query is currently in flight. So for example if you are polling a\nquery every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\na poll request has been sent but not resolved."
					},
					"sources": [
						{
							"fileName": "src/core/networkStatus.ts",
							"line": 35,
							"character": 2
						}
					],
					"defaultValue": "6"
				},
				{
					"id": 461,
					"name": "ready",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "No request is in flight for this query, and no errors happened. Everything is OK."
					},
					"sources": [
						{
							"fileName": "src/core/networkStatus.ts",
							"line": 40,
							"character": 2
						}
					],
					"defaultValue": "7"
				},
				{
					"id": 459,
					"name": "refetch",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "Similar to the `setVariables` network status. It means that `refetch` was called on a query\nand the refetch request is currently in flight."
					},
					"sources": [
						{
							"fileName": "src/core/networkStatus.ts",
							"line": 28,
							"character": 2
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 457,
					"name": "setVariables",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "If `setVariables` was called and a query was fired because of that then the network status\nwill be `setVariables` until the result of that query comes back."
					},
					"sources": [
						{
							"fileName": "src/core/networkStatus.ts",
							"line": 16,
							"character": 2
						}
					],
					"defaultValue": "2"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						462,
						458,
						456,
						460,
						461,
						459,
						457
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/networkStatus.ts",
					"line": 4,
					"character": 12
				}
			]
		},
		{
			"id": 662,
			"name": "ApolloCache",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 663,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 664,
							"name": "new ApolloCache",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 665,
									"name": "TSerialized",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reference",
								"id": 662,
								"typeArguments": [
									{
										"type": "reference",
										"id": 665,
										"name": "TSerialized"
									}
								],
								"name": "ApolloCache"
							}
						}
					]
				},
				{
					"id": 734,
					"name": "getFragmentDoc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 141,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "tuple",
								"elements": [
									{
										"type": "named-tuple-member",
										"name": "document",
										"isOptional": false,
										"element": {
											"type": "reference",
											"id": 1627,
											"name": "DocumentNode"
										}
									},
									{
										"type": "named-tuple-member",
										"name": "fragmentName",
										"isOptional": true,
										"element": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "tuple",
								"elements": [
									{
										"type": "named-tuple-member",
										"name": "document",
										"isOptional": false,
										"element": {
											"type": "reference",
											"id": 1627,
											"name": "DocumentNode"
										}
									},
									{
										"type": "named-tuple-member",
										"name": "fragmentName",
										"isOptional": true,
										"element": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "OptimisticWrapperFunction"
					},
					"defaultValue": "..."
				},
				{
					"id": 702,
					"name": "batch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 67,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 703,
							"name": "batch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 704,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 705,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 574,
										"typeArguments": [
											{
												"type": "reference",
												"id": 662,
												"typeArguments": [
													{
														"type": "reference",
														"id": 665,
														"name": "TSerialized"
													}
												],
												"name": "ApolloCache"
											},
											{
												"type": "reference",
												"id": 704,
												"name": "U"
											}
										],
										"name": "BatchOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 704,
								"name": "U"
							}
						}
					]
				},
				{
					"id": 676,
					"name": "diff",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 23,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 677,
							"name": "diff",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 678,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 679,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 536,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "DiffOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 587,
								"typeArguments": [
									{
										"type": "reference",
										"id": 678,
										"name": "T"
									}
								],
								"name": "DiffResult"
							}
						}
					]
				},
				{
					"id": 690,
					"name": "evict",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 37,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 691,
							"name": "evict",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 692,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 562,
										"name": "EvictOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 696,
					"name": "extract",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 54,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 697,
							"name": "extract",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Exposes the cache's complete state, in a serializable format for later restoration."
							},
							"parameters": [
								{
									"id": 698,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 665,
								"name": "TSerialized"
							}
						}
					]
				},
				{
					"id": 720,
					"name": "gc",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 108,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 721,
							"name": "gc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 717,
					"name": "identify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 104,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 718,
							"name": "identify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 719,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1266,
												"name": "Reference"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "StoreObject"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 722,
					"name": "modify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 112,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 723,
							"name": "modify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 724,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 569,
										"name": "ModifyOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 706,
					"name": "performTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 79,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 707,
							"name": "performTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 708,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 770,
										"typeArguments": [
											{
												"type": "reference",
												"id": 665,
												"name": "TSerialized"
											}
										],
										"name": "Transaction"
									}
								},
								{
									"id": 709,
									"name": "optimisticId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 666,
					"name": "read",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 17,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 667,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 668,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 669,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 670,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 516,
										"typeArguments": [
											{
												"type": "reference",
												"id": 669,
												"name": "TVariables"
											},
											{
												"type": "reference",
												"id": 668,
												"name": "TData"
											}
										],
										"name": "ReadOptions"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 668,
										"name": "TData"
									}
								]
							}
						}
					]
				},
				{
					"id": 735,
					"name": "readFragment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 143,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 736,
							"name": "readFragment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reads a GraphQL fragment from any arbitrary id. If there is more than\none fragment in the provided document then a `fragmentName` must be\nprovided to select the correct fragment."
							},
							"typeParameter": [
								{
									"id": 737,
									"name": "FragmentType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 738,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 739,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 603,
										"typeArguments": [
											{
												"type": "reference",
												"id": 737,
												"name": "FragmentType"
											},
											{
												"type": "reference",
												"id": 738,
												"name": "TVariables"
											}
										],
										"name": "ReadFragmentOptions"
									}
								},
								{
									"id": 740,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "!!options.optimistic"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 737,
										"name": "FragmentType"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 783,
								"name": "DataProxy.readFragment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 782,
						"name": "DataProxy.readFragment"
					}
				},
				{
					"id": 728,
					"name": "readQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 128,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 729,
							"name": "readQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {},
							"typeParameter": [
								{
									"id": 730,
									"name": "QueryType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 731,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 732,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"id": 594,
										"typeArguments": [
											{
												"type": "reference",
												"id": 730,
												"name": "QueryType"
											},
											{
												"type": "reference",
												"id": 731,
												"name": "TVariables"
											}
										],
										"name": "ReadQueryOptions"
									}
								},
								{
									"id": 733,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "!!options.optimistic"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 730,
										"name": "QueryType"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 777,
								"name": "DataProxy.readQuery"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 776,
						"name": "DataProxy.readQuery"
					}
				},
				{
					"id": 710,
					"name": "recordOptimisticTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 91,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 711,
							"name": "recordOptimisticTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 712,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 770,
										"typeArguments": [
											{
												"type": "reference",
												"id": 665,
												"name": "TSerialized"
											}
										],
										"name": "Transaction"
									}
								},
								{
									"id": 713,
									"name": "optimisticId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 699,
					"name": "removeOptimistic",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 58,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 700,
							"name": "removeOptimistic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 701,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 687,
					"name": "reset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 30,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 688,
							"name": "reset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 689,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 567,
										"name": "ResetOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 693,
					"name": "restore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 47,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 694,
							"name": "restore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces existing state in the cache (if any) with the values expressed by\n`serializedState`.",
								"text": "Called when hydrating a cache (server side rendering, or offline storage),\nand also (potentially) during hot reloads.\n"
							},
							"parameters": [
								{
									"id": 695,
									"name": "serializedState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 665,
										"name": "TSerialized"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 662,
								"typeArguments": [
									{
										"type": "reference",
										"id": 665,
										"name": "TSerialized"
									}
								],
								"name": "ApolloCache"
							}
						}
					]
				},
				{
					"id": 714,
					"name": "transformDocument",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 100,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 715,
							"name": "transformDocument",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 716,
									"name": "document",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							}
						}
					]
				},
				{
					"id": 725,
					"name": "transformForLink",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 118,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 726,
							"name": "transformForLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 727,
									"name": "document",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							}
						}
					]
				},
				{
					"id": 760,
					"name": "updateFragment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 195,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 761,
							"name": "updateFragment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 762,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 763,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 764,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 643,
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 763,
												"name": "TVariables"
											}
										],
										"name": "UpdateFragmentOptions"
									}
								},
								{
									"id": 765,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 766,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 767,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 768,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "TData"
																	}
																]
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "reference",
																"id": 762,
																"name": "TData"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 762,
										"name": "TData"
									}
								]
							}
						}
					]
				},
				{
					"id": 751,
					"name": "updateQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 180,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 752,
							"name": "updateQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 753,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 754,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 755,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 632,
										"typeArguments": [
											{
												"type": "reference",
												"id": 753,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 754,
												"name": "TVariables"
											}
										],
										"name": "UpdateQueryOptions"
									}
								},
								{
									"id": 756,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 757,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 758,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 759,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 753,
																		"name": "TData"
																	}
																]
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "reference",
																"id": 753,
																"name": "TData"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 753,
										"name": "TData"
									}
								]
							}
						}
					]
				},
				{
					"id": 680,
					"name": "watch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 24,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 681,
							"name": "watch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 682,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 683,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 684,
									"name": "watch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 547,
										"typeArguments": [
											{
												"type": "reference",
												"id": 682,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 683,
												"name": "TVariables"
											}
										],
										"name": "WatchOptions"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 685,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 686,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 671,
					"name": "write",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 20,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 672,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 673,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 674,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 675,
									"name": "write",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 527,
										"typeArguments": [
											{
												"type": "reference",
												"id": 673,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 674,
												"name": "TVariables"
											}
										],
										"name": "WriteOptions"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1266,
										"name": "Reference"
									}
								]
							}
						}
					]
				},
				{
					"id": 746,
					"name": "writeFragment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 166,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 747,
							"name": "writeFragment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Writes a GraphQL fragment to any arbitrary id. If there is more than\none fragment in the provided document then a `fragmentName` must be\nprovided to select the correct fragment."
							},
							"typeParameter": [
								{
									"id": 748,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 749,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 750,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 622,
										"typeArguments": [
											{
												"type": "reference",
												"id": 748,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 749,
												"name": "TVariables"
											}
										],
										"name": "WriteFragmentOptions"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1266,
										"name": "Reference"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 794,
								"name": "DataProxy.writeFragment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 793,
						"name": "DataProxy.writeFragment"
					}
				},
				{
					"id": 741,
					"name": "writeQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 155,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 742,
							"name": "writeQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Writes a GraphQL query to the root query id."
							},
							"typeParameter": [
								{
									"id": 743,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 744,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 745,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 613,
										"typeArguments": [
											{
												"type": "reference",
												"id": 743,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 744,
												"name": "TVariables"
											}
										],
										"name": "WriteQueryOptions"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1266,
										"name": "Reference"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 789,
								"name": "DataProxy.writeQuery"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 788,
						"name": "DataProxy.writeQuery"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						663
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						734
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						702,
						676,
						690,
						696,
						720,
						717,
						722,
						706,
						666,
						735,
						728,
						710,
						699,
						687,
						693,
						714,
						725,
						760,
						751,
						680,
						671,
						746,
						741
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/core/cache.ts",
					"line": 14,
					"character": 22
				}
			],
			"typeParameter": [
				{
					"id": 769,
					"name": "TSerialized",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 885,
					"name": "InMemoryCache"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 775,
					"name": "DataProxy"
				}
			]
		},
		{
			"id": 1,
			"name": "ApolloClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\nand mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\nreceive results from the server and cache the results in a store. It also delivers updates\nto GraphQL queries through {@link Observable} instances."
			},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 141,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new ApolloClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs an instance of {@link ApolloClient}."
							},
							"typeParameter": [
								{
									"id": 4,
									"name": "TCacheShape",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 5,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 126,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4,
												"name": "TCacheShape"
											}
										],
										"name": "ApolloClientOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4,
										"name": "TCacheShape"
									}
								],
								"name": "ApolloClient"
							}
						}
					]
				},
				{
					"id": 7,
					"name": "cache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 92,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "reference",
								"id": 4,
								"name": "TCacheShape"
							}
						],
						"name": "ApolloCache"
					}
				},
				{
					"id": 18,
					"name": "clearStoreCallbacks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 102,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 19,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"signatures": [
									{
										"id": 20,
										"name": "__type",
										"kind": 4096,
										"kindString": "Call signature",
										"flags": {},
										"type": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Promise"
										}
									}
								]
							}
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 11,
					"name": "defaultOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 96,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 145,
						"name": "DefaultOptions"
					},
					"defaultValue": "{}"
				},
				{
					"id": 14,
					"name": "devToolsHookCb",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 100,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "Function"
					}
				},
				{
					"id": 8,
					"name": "disableNetworkFetches",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 93,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6,
					"name": "link",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 91,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1576,
						"name": "ApolloLink"
					}
				},
				{
					"id": 21,
					"name": "localState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 103,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 4,
								"name": "TCacheShape"
							}
						],
						"name": "LocalState"
					}
				},
				{
					"id": 10,
					"name": "queryDeduplication",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 95,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13,
					"name": "queryManager",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 99,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 4,
								"name": "TCacheShape"
							}
						],
						"name": "QueryManager"
					}
				},
				{
					"id": 15,
					"name": "resetStoreCallbacks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 101,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 16,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"signatures": [
									{
										"id": 17,
										"name": "__type",
										"kind": 4096,
										"kindString": "Call signature",
										"flags": {},
										"type": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Promise"
										}
									}
								]
							}
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 12,
					"name": "typeDefs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 97,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1627,
									"name": "DocumentNode"
								}
							}
						]
					}
				},
				{
					"id": 9,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 94,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 68,
					"name": "__actionHookForDevTools",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 447,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "__actionHookForDevTools",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 70,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 71,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 72,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 73,
					"name": "__requestRaw",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 451,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 74,
							"name": "__requestRaw",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 75,
									"name": "payload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1631,
										"name": "GraphQLRequest"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "ObjMap"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "ObjMap"
											}
										],
										"name": "ExecutionResult"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 111,
					"name": "addResolvers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 614,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 112,
							"name": "addResolvers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add additional local resolvers."
							},
							"parameters": [
								{
									"id": 113,
									"name": "resolvers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1438,
												"name": "Resolvers"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1438,
													"name": "Resolvers"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 78,
					"name": "clearStore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 484,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 79,
							"name": "clearStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove all data from the store. Unlike `resetStore`, `clearStore` will\nnot refetch any active queries."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 105,
					"name": "extract",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 596,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 106,
							"name": "extract",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Exposes the cache's complete state, in a serializable format for later restoration."
							},
							"parameters": [
								{
									"id": 107,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4,
								"name": "TCacheShape"
							}
						}
					]
				},
				{
					"id": 102,
					"name": "getObservableQueries",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 587,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 103,
							"name": "getObservableQueries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get all currently active `ObservableQuery` objects, in a `Map` keyed by\nquery ID strings. An \"active\" query is one that has observers and a\n`fetchPolicy` other than \"standby\" or \"cache-only\". You can include all\n`ObservableQuery` objects (including the inactive ones) by passing \"all\"\ninstead of \"active\", or you can include just a subset of active queries by\npassing an array of query names or DocumentNode objects."
							},
							"parameters": [
								{
									"id": 104,
									"name": "include",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1331,
										"name": "RefetchQueriesInclude"
									},
									"defaultValue": "\"active\""
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 154,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 1388,
												"name": "OperationVariables"
											}
										],
										"name": "ObservableQuery"
									}
								],
								"name": "Map"
							}
						}
					]
				},
				{
					"id": 117,
					"name": "getResolvers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 628,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 118,
							"name": "getResolvers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get all registered local resolvers."
							},
							"type": {
								"type": "reference",
								"id": 1438,
								"name": "Resolvers"
							}
						}
					]
				},
				{
					"id": 34,
					"name": "mutate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 356,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 35,
							"name": "mutate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This resolves a single mutation according to the options specified and returns a\n{@link Promise} which is either resolved with the resulting data or rejected with an\nerror.",
								"text": "It takes options as an object with the following keys and values:\n"
							},
							"typeParameter": [
								{
									"id": 36,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 37,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1388,
										"name": "OperationVariables"
									}
								},
								{
									"id": 38,
									"name": "TContext",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1317,
										"name": "DefaultContext"
									}
								},
								{
									"id": 39,
									"name": "TCache",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 662,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 39,
												"name": "TCache"
											}
										],
										"name": "ApolloCache"
									},
									"default": {
										"type": "reference",
										"id": 662,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ApolloCache"
									}
								}
							],
							"parameters": [
								{
									"id": 40,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 403,
										"typeArguments": [
											{
												"type": "reference",
												"id": 36,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 37,
												"name": "TVariables"
											},
											{
												"type": "reference",
												"id": 38,
												"name": "TContext"
											},
											{
												"type": "reference",
												"id": 662,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ApolloCache"
											}
										],
										"name": "MutationOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1647,
										"typeArguments": [
											{
												"type": "reference",
												"id": 36,
												"name": "TData"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											}
										],
										"name": "FetchResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 87,
					"name": "onClearStore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 509,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 88,
							"name": "onClearStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Allows callbacks to be registered that are executed when the store is\ncleared. `onClearStore` returns an unsubscribe function that can be used\nto remove registered callbacks."
							},
							"parameters": [
								{
									"id": 89,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 90,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 91,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 92,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 93,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Allows callbacks to be registered that are executed when the store is\ncleared. `onClearStore` returns an unsubscribe function that can be used\nto remove registered callbacks."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 80,
					"name": "onResetStore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 497,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "onResetStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Allows callbacks to be registered that are executed when the store is\nreset. `onResetStore` returns an unsubscribe function that can be used\nto remove registered callbacks."
							},
							"parameters": [
								{
									"id": 82,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 83,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 84,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 85,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 86,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Allows callbacks to be registered that are executed when the store is\nreset. `onResetStore` returns an unsubscribe function that can be used\nto remove registered callbacks."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 29,
					"name": "query",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 327,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 30,
							"name": "query",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This resolves a single query according to the options specified and\nreturns a {@link Promise} which is either resolved with the resulting data\nor rejected with an error."
							},
							"typeParameter": [
								{
									"id": 31,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 32,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1388,
										"name": "OperationVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 33,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "An object of type {@link QueryOptions} that allows us to\ndescribe how this query should be treated e.g. whether it should hit the\nserver at all or just resolve from the cache, etc.\n"
									},
									"type": {
										"type": "reference",
										"id": 372,
										"typeArguments": [
											{
												"type": "reference",
												"id": 32,
												"name": "TVariables"
											},
											{
												"type": "reference",
												"id": 31,
												"name": "T"
											}
										],
										"name": "QueryOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 31,
												"name": "T"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 94,
					"name": "reFetchObservableQueries",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 528,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 95,
							"name": "reFetchObservableQueries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Refetches all of your active queries.",
								"text": "`reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n\nIt is important to remember that `reFetchObservableQueries()` *will* refetch any active\nqueries. This means that any components that might be mounted will execute\ntheir queries again using your network interface. If you do not want to\nre-execute any queries then you should make sure to stop watching any\nactive queries.\nTakes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n"
							},
							"parameters": [
								{
									"id": 96,
									"name": "includeStandby",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1389,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "ApolloQueryResult"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 52,
					"name": "readFragment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 410,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "readFragment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Tries to read some data from the store in the shape of the provided\nGraphQL fragment without making a network request. This method will read a\nGraphQL fragment from any arbitrary id that is currently cached, unlike\n`readQuery` which will only read from the root query.",
								"text": "You must pass in a GraphQL document with a single fragment or a document\nwith multiple fragments that represent what you are reading. If you pass\nin a document with multiple fragments then you must also specify a\n`fragmentName`.\n"
							},
							"typeParameter": [
								{
									"id": 54,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 55,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1388,
										"name": "OperationVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 56,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 655,
										"typeArguments": [
											{
												"type": "reference",
												"id": 55,
												"name": "TVariables"
											},
											{
												"type": "reference",
												"id": 54,
												"name": "T"
											}
										],
										"name": "Fragment"
									}
								},
								{
									"id": 57,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Set to `true` to allow `readFragment` to return\noptimistic results. Is `false` by default.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 54,
										"name": "T"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 783,
								"name": "DataProxy.readFragment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 782,
						"name": "DataProxy.readFragment"
					}
				},
				{
					"id": 46,
					"name": "readQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 389,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 47,
							"name": "readQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Tries to read some data from the store in the shape of the provided\nGraphQL query without making a network request. This method will start at\nthe root query. To start at a specific id returned by `dataIdFromObject`\nuse `readFragment`."
							},
							"typeParameter": [
								{
									"id": 48,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 49,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1388,
										"name": "OperationVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 50,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 799,
										"typeArguments": [
											{
												"type": "reference",
												"id": 49,
												"name": "TVariables"
											},
											{
												"type": "reference",
												"id": 48,
												"name": "T"
											}
										],
										"name": "Query"
									}
								},
								{
									"id": 51,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Set to `true` to allow `readQuery` to return\noptimistic results. Is `false` by default.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 48,
										"name": "T"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 777,
								"name": "DataProxy.readQuery"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 776,
						"name": "DataProxy.readQuery"
					}
				},
				{
					"id": 97,
					"name": "refetchQueries",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 545,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 98,
							"name": "refetchQueries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Refetches specified active queries. Similar to \"reFetchObservableQueries()\" but with a specific list of queries.",
								"text": "`refetchQueries()` is useful for use cases to imperatively refresh a selection of queries.\n\nIt is important to remember that `refetchQueries()` *will* refetch specified active\nqueries. This means that any components that might be mounted will execute\ntheir queries again using your network interface. If you do not want to\nre-execute any queries then you should make sure to stop watching any\nactive queries.\n"
							},
							"typeParameter": [
								{
									"id": 99,
									"name": "TCache",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 662,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"id": 99,
												"name": "TCache"
											}
										],
										"name": "ApolloCache"
									},
									"default": {
										"type": "reference",
										"id": 662,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4,
												"name": "TCacheShape"
											}
										],
										"name": "ApolloCache"
									}
								},
								{
									"id": 100,
									"name": "TResult",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1389,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ApolloQueryResult"
											}
										],
										"name": "Promise"
									}
								}
							],
							"parameters": [
								{
									"id": 101,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1333,
										"typeArguments": [
											{
												"type": "reference",
												"id": 99,
												"name": "TCache"
											},
											{
												"type": "reference",
												"id": 100,
												"name": "TResult"
											}
										],
										"name": "RefetchQueriesOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1344,
								"typeArguments": [
									{
										"type": "reference",
										"id": 100,
										"name": "TResult"
									}
								],
								"name": "RefetchQueriesResult"
							}
						}
					]
				},
				{
					"id": 76,
					"name": "resetStore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 471,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "resetStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resets your entire store by clearing out your cache and then re-executing\nall of your active queries. This makes it so that you may guarantee that\nthere is no data left in your store from a time before you called this\nmethod.",
								"text": "`resetStore()` is useful when your user just logged out. You’ve removed the\nuser session, and you now want to make sure that any references to data you\nmight have fetched while the user session was active is gone.\n\nIt is important to remember that `resetStore()` *will* refetch any active\nqueries. This means that any components that might be mounted will execute\ntheir queries again using your network interface. If you do not want to\nre-execute any queries then you should make sure to stop watching any\nactive queries.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1389,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "ApolloQueryResult"
												}
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 108,
					"name": "restore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 607,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 109,
							"name": "restore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces existing state in the cache (if any) with the values expressed by\n`serializedState`.",
								"text": "Called when hydrating a cache (server side rendering, or offline storage),\nand also (potentially) during hot reloads.\n"
							},
							"parameters": [
								{
									"id": 110,
									"name": "serializedState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4,
										"name": "TCacheShape"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 662,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4,
										"name": "TCacheShape"
									}
								],
								"name": "ApolloCache"
							}
						}
					]
				},
				{
					"id": 122,
					"name": "setLink",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 642,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 123,
							"name": "setLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Define a new ApolloLink (or link chain) that Apollo Client will use."
							},
							"parameters": [
								{
									"id": 124,
									"name": "newLink",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1576,
										"name": "ApolloLink"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 119,
					"name": "setLocalStateFragmentMatcher",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 635,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 120,
							"name": "setLocalStateFragmentMatcher",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set a custom local state fragment matcher."
							},
							"parameters": [
								{
									"id": 121,
									"name": "fragmentMatcher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 473,
										"name": "FragmentMatcher"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 114,
					"name": "setResolvers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 621,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 115,
							"name": "setResolvers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set (override existing) local resolvers."
							},
							"parameters": [
								{
									"id": 116,
									"name": "resolvers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1438,
												"name": "Resolvers"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1438,
													"name": "Resolvers"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 22,
					"name": "stop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 276,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 23,
							"name": "stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Call this method to terminate any active client processes, making it safe\nto dispose of this `ApolloClient` instance."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 41,
					"name": "subscribe",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 374,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 42,
							"name": "subscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This subscribes to a graphql subscription according to the options specified and returns an\n{@link Observable} which either emits received data or an error."
							},
							"typeParameter": [
								{
									"id": 43,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 44,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1388,
										"name": "OperationVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 45,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 426,
										"typeArguments": [
											{
												"type": "reference",
												"id": 44,
												"name": "TVariables"
											},
											{
												"type": "reference",
												"id": 43,
												"name": "T"
											}
										],
										"name": "SubscriptionOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1647,
										"typeArguments": [
											{
												"type": "reference",
												"id": 43,
												"name": "T"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											}
										],
										"name": "FetchResult"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "watchQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 299,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "watchQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "This watches the cache store of the query according to the options specified and\nreturns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\nreceive updated results through a GraphQL observer when the cache store changes.\n<p /><p />\nNote that this method is not an implementation of GraphQL subscriptions. Rather,\nit uses Apollo's store in order to reactively deliver updates to your query results.\n<p /><p />\nFor example, suppose you call watchQuery on a GraphQL query that fetches a person's\nfirst and last name and this person has a particular object identifier, provided by\ndataIdFromObject. Later, a different query fetches that same person's\nfirst and last name and the first name has now changed. Then, any observers associated\nwith the results of the first query will be updated with a new result object.\n<p /><p />\nNote that if the cache does not change, the subscriber will *not* be notified.\n<p /><p />\nSee [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\na description of store reactivity."
							},
							"typeParameter": [
								{
									"id": 26,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 27,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1388,
										"name": "OperationVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 28,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 385,
										"typeArguments": [
											{
												"type": "reference",
												"id": 27,
												"name": "TVariables"
											},
											{
												"type": "reference",
												"id": 26,
												"name": "T"
											}
										],
										"name": "WatchQueryOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"typeArguments": [
									{
										"type": "reference",
										"id": 26,
										"name": "T"
									},
									{
										"type": "reference",
										"id": 27,
										"name": "TVariables"
									}
								],
								"name": "ObservableQuery"
							}
						}
					]
				},
				{
					"id": 63,
					"name": "writeFragment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 440,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 64,
							"name": "writeFragment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Writes some data in the shape of the provided GraphQL fragment directly to\nthe store. This method will write to a GraphQL fragment from any arbitrary\nid that is currently cached, unlike `writeQuery` which will only write\nfrom the root query.",
								"text": "You must pass in a GraphQL document with a single fragment or a document\nwith multiple fragments that represent what you are writing. If you pass\nin a document with multiple fragments then you must also specify a\n`fragmentName`.\n"
							},
							"typeParameter": [
								{
									"id": 65,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 66,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1388,
										"name": "OperationVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 67,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 622,
										"typeArguments": [
											{
												"type": "reference",
												"id": 65,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 66,
												"name": "TVariables"
											}
										],
										"name": "WriteFragmentOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 794,
								"name": "DataProxy.writeFragment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 793,
						"name": "DataProxy.writeFragment"
					}
				},
				{
					"id": 58,
					"name": "writeQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 422,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 59,
							"name": "writeQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Writes some data in the shape of the provided GraphQL query directly to\nthe store. This method will start at the root query. To start at a\nspecific id returned by `dataIdFromObject` then use `writeFragment`."
							},
							"typeParameter": [
								{
									"id": 60,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 61,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1388,
										"name": "OperationVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 62,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 613,
										"typeArguments": [
											{
												"type": "reference",
												"id": 60,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 61,
												"name": "TVariables"
											}
										],
										"name": "WriteQueryOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 789,
								"name": "DataProxy.writeQuery"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 788,
						"name": "DataProxy.writeQuery"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						7,
						18,
						11,
						14,
						8,
						6,
						21,
						10,
						13,
						15,
						12,
						9
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						68,
						73,
						111,
						78,
						105,
						102,
						117,
						34,
						87,
						80,
						29,
						94,
						52,
						46,
						97,
						76,
						108,
						122,
						119,
						114,
						22,
						41,
						24,
						63,
						58
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/ApolloClient.ts",
					"line": 90,
					"character": 13
				}
			],
			"typeParameter": [
				{
					"id": 125,
					"name": "TCacheShape",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 775,
					"name": "DataProxy"
				}
			]
		},
		{
			"id": 482,
			"name": "ApolloError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 493,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/errors/index.ts",
							"line": 58,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 494,
							"name": "new ApolloError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 495,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 496,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 498,
													"name": "clientErrors",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/errors/index.ts",
															"line": 66,
															"character": 4
														}
													],
													"type": {
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"name": "Error"
															}
														}
													}
												},
												{
													"id": 500,
													"name": "errorMessage",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/errors/index.ts",
															"line": 68,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 501,
													"name": "extraInfo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/errors/index.ts",
															"line": 69,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 497,
													"name": "graphQLErrors",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/errors/index.ts",
															"line": 65,
															"character": 4
														}
													],
													"type": {
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"name": "GraphQLError"
															}
														}
													}
												},
												{
													"id": 499,
													"name": "networkError",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/errors/index.ts",
															"line": 67,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"name": "Error"
															},
															{
																"type": "reference",
																"id": 1670,
																"name": "ServerParseError"
															},
															{
																"type": "reference",
																"id": 1146,
																"name": "ServerError"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														498,
														500,
														501,
														497,
														499
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 482,
								"name": "ApolloError"
							},
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Error.constructor"
					}
				},
				{
					"id": 504,
					"name": "clientErrors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/errors/index.ts",
							"line": 47,
							"character": 9
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "Error"
							}
						}
					}
				},
				{
					"id": 506,
					"name": "extraInfo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/errors/index.ts",
							"line": 53,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 503,
					"name": "graphQLErrors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/errors/index.ts",
							"line": 46,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "GraphQLErrors"
					}
				},
				{
					"id": 502,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/errors/index.ts",
							"line": 45,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 507,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 973,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 505,
					"name": "networkError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/errors/index.ts",
							"line": 48,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Error"
							},
							{
								"type": "reference",
								"id": 1670,
								"name": "ServerParseError"
							},
							{
								"type": "reference",
								"id": 1146,
								"name": "ServerError"
							}
						]
					}
				},
				{
					"id": 508,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 975,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				},
				{
					"id": 487,
					"name": "prepareStackTrace",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 488,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 489,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Optional override for formatting stack traces",
										"tags": [
											{
												"tag": "see",
												"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces\n"
											}
										]
									},
									"parameters": [
										{
											"id": 490,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 491,
											"name": "stackTraces",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.prepareStackTrace"
					}
				},
				{
					"id": 492,
					"name": "stackTraceLimit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stackTraceLimit"
					}
				},
				{
					"id": 483,
					"name": "captureStackTrace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"signatures": [
						{
							"id": 484,
							"name": "captureStackTrace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Create .stack property on a target object"
							},
							"parameters": [
								{
									"id": 485,
									"name": "targetObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 486,
									"name": "constructorOpt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.captureStackTrace"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						493
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						504,
						506,
						503,
						502,
						507,
						505,
						508,
						487,
						492
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						483
					]
				}
			],
			"sources": [
				{
					"fileName": "src/errors/index.ts",
					"line": 44,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Error"
				}
			]
		},
		{
			"id": 1576,
			"name": "ApolloLink",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1598,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 119,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1599,
							"name": "new ApolloLink",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1600,
									"name": "request",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1659,
										"name": "RequestHandler"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							}
						}
					]
				},
				{
					"id": 1609,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 133,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1610,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1611,
									"name": "next",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							}
						}
					]
				},
				{
					"id": 1616,
					"name": "onError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 144,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1617,
							"name": "onError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1618,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1619,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1249,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1647,
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													}
												],
												"name": "FetchResult"
											}
										],
										"name": "Observer"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				},
				{
					"id": 1612,
					"name": "request",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 137,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1613,
							"name": "request",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1614,
									"name": "operation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1637,
										"name": "Operation"
									}
								},
								{
									"id": 1615,
									"name": "forward",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1655,
										"name": "NextLink"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 1156,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1647,
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													}
												],
												"name": "FetchResult"
											}
										],
										"name": "Observable"
									}
								]
							}
						}
					]
				},
				{
					"id": 1620,
					"name": "setOnError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 162,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1621,
							"name": "setOnError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1622,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1623,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1624,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1625,
															"name": "error",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 1626,
															"name": "observer",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"id": 1249,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1647,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"name": "Record"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"name": "Record"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"name": "Record"
																			}
																		],
																		"name": "FetchResult"
																	}
																],
																"name": "Observer"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": false
															},
															{
																"type": "intrinsic",
																"name": "void"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							}
						}
					]
				},
				{
					"id": 1601,
					"name": "split",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 123,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1602,
							"name": "split",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1603,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1604,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1605,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1606,
															"name": "op",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 1637,
																"name": "Operation"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 1607,
									"name": "left",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								},
								{
									"id": 1608,
									"name": "right",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							}
						}
					]
				},
				{
					"id": 1594,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 84,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1595,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1596,
									"name": "first",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								},
								{
									"id": 1597,
									"name": "second",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							}
						}
					]
				},
				{
					"id": 1577,
					"name": "empty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 38,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1578,
							"name": "empty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							}
						}
					]
				},
				{
					"id": 1590,
					"name": "execute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 70,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1591,
							"name": "execute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1592,
									"name": "link",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1576,
										"name": "ApolloLink"
									}
								},
								{
									"id": 1593,
									"name": "operation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1631,
										"name": "GraphQLRequest"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1647,
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											}
										],
										"name": "FetchResult"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1579,
					"name": "from",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 42,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1580,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1581,
									"name": "links",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 1576,
													"name": "ApolloLink"
												},
												{
													"type": "reference",
													"id": 1659,
													"name": "RequestHandler"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							}
						}
					]
				},
				{
					"id": 1582,
					"name": "split",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 47,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1583,
							"name": "split",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1584,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1585,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1586,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1587,
															"name": "op",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 1637,
																"name": "Operation"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 1588,
									"name": "left",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								},
								{
									"id": 1589,
									"name": "right",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1598
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1609,
						1616,
						1612,
						1620,
						1601,
						1594,
						1577,
						1590,
						1579,
						1582
					]
				}
			],
			"sources": [
				{
					"fileName": "src/link/core/ApolloLink.ts",
					"line": 37,
					"character": 13
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1757,
					"name": "HttpLink"
				}
			]
		},
		{
			"id": 1757,
			"name": "HttpLink",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1779,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/http/HttpLink.ts",
							"line": 7,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1780,
							"name": "new HttpLink",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1781,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1682,
										"name": "HttpOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 1757,
								"name": "HttpLink"
							},
							"overwrites": {
								"type": "reference",
								"id": 1599,
								"name": "ApolloLink.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1598,
						"name": "ApolloLink.constructor"
					}
				},
				{
					"id": 1783,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"type": {
						"type": "reference",
						"id": 1682,
						"name": "HttpOptions"
					},
					"defaultValue": "{}"
				},
				{
					"id": 1782,
					"name": "requester",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/link/http/HttpLink.ts",
							"line": 6,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1659,
						"name": "RequestHandler"
					}
				},
				{
					"id": 1792,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 133,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1793,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1794,
									"name": "next",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1610,
								"name": "ApolloLink.concat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1609,
						"name": "ApolloLink.concat"
					}
				},
				{
					"id": 1799,
					"name": "onError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 144,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1800,
							"name": "onError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1801,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1802,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1249,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1647,
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													}
												],
												"name": "FetchResult"
											}
										],
										"name": "Observer"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1617,
								"name": "ApolloLink.onError"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1616,
						"name": "ApolloLink.onError"
					}
				},
				{
					"id": 1795,
					"name": "request",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 137,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1796,
							"name": "request",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1797,
									"name": "operation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1637,
										"name": "Operation"
									}
								},
								{
									"id": 1798,
									"name": "forward",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1655,
										"name": "NextLink"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 1156,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1647,
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													}
												],
												"name": "FetchResult"
											}
										],
										"name": "Observable"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1613,
								"name": "ApolloLink.request"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1612,
						"name": "ApolloLink.request"
					}
				},
				{
					"id": 1803,
					"name": "setOnError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 162,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1804,
							"name": "setOnError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1805,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1806,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1807,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1808,
															"name": "error",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 1809,
															"name": "observer",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"id": 1249,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1647,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"name": "Record"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"name": "Record"
																			},
																			{
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"name": "Record"
																			}
																		],
																		"name": "FetchResult"
																	}
																],
																"name": "Observer"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": false
															},
															{
																"type": "intrinsic",
																"name": "void"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1757,
								"name": "HttpLink"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1621,
								"name": "ApolloLink.setOnError"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1620,
						"name": "ApolloLink.setOnError"
					}
				},
				{
					"id": 1784,
					"name": "split",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 123,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1785,
							"name": "split",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1786,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1787,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1788,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1789,
															"name": "op",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 1637,
																"name": "Operation"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 1790,
									"name": "left",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								},
								{
									"id": 1791,
									"name": "right",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1602,
								"name": "ApolloLink.split"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1601,
						"name": "ApolloLink.split"
					}
				},
				{
					"id": 1775,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 84,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1776,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1777,
									"name": "first",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								},
								{
									"id": 1778,
									"name": "second",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1595,
								"name": "ApolloLink.concat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1594,
						"name": "ApolloLink.concat"
					}
				},
				{
					"id": 1758,
					"name": "empty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 38,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1759,
							"name": "empty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1578,
								"name": "ApolloLink.empty"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1577,
						"name": "ApolloLink.empty"
					}
				},
				{
					"id": 1771,
					"name": "execute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 70,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1772,
							"name": "execute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1773,
									"name": "link",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1576,
										"name": "ApolloLink"
									}
								},
								{
									"id": 1774,
									"name": "operation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1631,
										"name": "GraphQLRequest"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1647,
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											}
										],
										"name": "FetchResult"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1591,
								"name": "ApolloLink.execute"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1590,
						"name": "ApolloLink.execute"
					}
				},
				{
					"id": 1760,
					"name": "from",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 42,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1761,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1762,
									"name": "links",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 1576,
													"name": "ApolloLink"
												},
												{
													"type": "reference",
													"id": 1659,
													"name": "RequestHandler"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1580,
								"name": "ApolloLink.from"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1579,
						"name": "ApolloLink.from"
					}
				},
				{
					"id": 1763,
					"name": "split",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/link/core/ApolloLink.ts",
							"line": 47,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1764,
							"name": "split",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1765,
									"name": "test",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1766,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1767,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1768,
															"name": "op",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 1637,
																"name": "Operation"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 1769,
									"name": "left",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								},
								{
									"id": 1770,
									"name": "right",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1576,
												"name": "ApolloLink"
											},
											{
												"type": "reference",
												"id": 1659,
												"name": "RequestHandler"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1583,
								"name": "ApolloLink.split"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1582,
						"name": "ApolloLink.split"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1779
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1783,
						1782
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1792,
						1799,
						1795,
						1803,
						1784,
						1775,
						1758,
						1771,
						1760,
						1763
					]
				}
			],
			"sources": [
				{
					"fileName": "src/link/http/HttpLink.ts",
					"line": 5,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1576,
					"name": "ApolloLink"
				}
			]
		},
		{
			"id": 885,
			"name": "InMemoryCache",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 886,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 58,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 887,
							"name": "new InMemoryCache",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 888,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1032,
										"name": "InMemoryCacheConfig"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 885,
								"name": "InMemoryCache"
							},
							"overwrites": {
								"type": "reference",
								"id": 664,
								"name": "ApolloCache.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 663,
						"name": "ApolloCache.constructor"
					}
				},
				{
					"id": 893,
					"name": "addTypename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 40,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 891,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 38,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"id": 1032,
						"name": "InMemoryCacheConfig"
					}
				},
				{
					"id": 889,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 35,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "EntityStore"
					}
				},
				{
					"id": 899,
					"name": "makeVar",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 56,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 900,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 901,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 902,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 903,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 902,
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1055,
										"typeArguments": [
											{
												"type": "reference",
												"id": 902,
												"name": "T"
											}
										],
										"name": "ReactiveVar"
									}
								}
							]
						}
					},
					"defaultValue": "makeVar"
				},
				{
					"id": 897,
					"name": "maybeBroadcastWatch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 46,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"id": 547,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "WatchOptions"
									},
									{
										"type": "optional",
										"elementType": {
											"type": "reference",
											"name": "BroadcastOptions"
										}
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"id": 547,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "WatchOptions"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "OptimisticWrapperFunction"
					}
				},
				{
					"id": 890,
					"name": "optimisticData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 36,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "EntityStore"
					}
				},
				{
					"id": 898,
					"name": "policies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 54,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Policies"
					}
				},
				{
					"id": 895,
					"name": "storeReader",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 43,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "StoreReader"
					}
				},
				{
					"id": 896,
					"name": "storeWriter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 44,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "StoreWriter"
					}
				},
				{
					"id": 963,
					"name": "txCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 388,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 894,
					"name": "typenameDocumentCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 42,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							}
						],
						"name": "Map"
					},
					"defaultValue": "..."
				},
				{
					"id": 892,
					"name": "watches",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 39,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 547,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "WatchOptions"
							}
						],
						"name": "Set"
					},
					"defaultValue": "..."
				},
				{
					"id": 964,
					"name": "batch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 390,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 965,
							"name": "batch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 966,
									"name": "TUpdateResult",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 967,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 574,
										"typeArguments": [
											{
												"type": "reference",
												"id": 885,
												"name": "InMemoryCache"
											},
											{
												"type": "reference",
												"id": 966,
												"name": "TUpdateResult"
											}
										],
										"name": "BatchOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 966,
								"name": "TUpdateResult"
							},
							"overwrites": {
								"type": "reference",
								"id": 703,
								"name": "ApolloCache.batch"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 702,
						"name": "ApolloCache.batch"
					}
				},
				{
					"id": 981,
					"name": "broadcastWatch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 529,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 982,
							"name": "broadcastWatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 983,
									"name": "c",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 547,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "WatchOptions"
									}
								},
								{
									"id": 984,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "BroadcastOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 978,
					"name": "broadcastWatches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 517,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 979,
							"name": "broadcastWatches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 980,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "BroadcastOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 925,
					"name": "diff",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 229,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 926,
							"name": "diff",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 927,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 928,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 929,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 536,
										"typeArguments": [
											{
												"type": "reference",
												"id": 927,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 928,
												"name": "TVariables"
											}
										],
										"name": "DiffOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 587,
								"typeArguments": [
									{
										"type": "reference",
										"id": 927,
										"name": "TData"
									}
								],
								"name": "DiffResult"
							},
							"overwrites": {
								"type": "reference",
								"id": 677,
								"name": "ApolloCache.diff"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 676,
						"name": "ApolloCache.diff"
					}
				},
				{
					"id": 954,
					"name": "evict",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 330,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 955,
							"name": "evict",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 956,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 562,
										"name": "EvictOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 691,
								"name": "ApolloCache.evict"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 690,
						"name": "ApolloCache.evict"
					}
				},
				{
					"id": 912,
					"name": "extract",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 157,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 913,
							"name": "extract",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Exposes the cache's complete state, in a serializable format for later restoration."
							},
							"parameters": [
								{
									"id": 914,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"id": 1517,
								"name": "NormalizedCacheObject"
							},
							"overwrites": {
								"type": "reference",
								"id": 697,
								"name": "ApolloCache.extract"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 696,
						"name": "ApolloCache.extract"
					}
				},
				{
					"id": 937,
					"name": "gc",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 274,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 938,
							"name": "gc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 939,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 940,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 941,
													"name": "resetResultCache",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/cache/inmemory/inMemoryCache.ts",
															"line": 277,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 942,
													"name": "resetResultIdentities",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/cache/inmemory/inMemoryCache.ts",
															"line": 281,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														941,
														942
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 721,
								"name": "ApolloCache.gc"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 720,
						"name": "ApolloCache.gc"
					}
				},
				{
					"id": 951,
					"name": "identify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 321,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 952,
							"name": "identify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 953,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1266,
												"name": "Reference"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "StoreObject"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 718,
								"name": "ApolloCache.identify"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 717,
						"name": "ApolloCache.identify"
					}
				},
				{
					"id": 904,
					"name": "init",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 73,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 905,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 922,
					"name": "modify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 203,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 923,
							"name": "modify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 924,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 569,
										"name": "ModifyOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 723,
								"name": "ApolloCache.modify"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 722,
						"name": "ApolloCache.modify"
					}
				},
				{
					"id": 968,
					"name": "performTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 491,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 969,
							"name": "performTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 970,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 971,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 972,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 973,
															"name": "cache",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 885,
																"name": "InMemoryCache"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								},
								{
									"id": 974,
									"name": "optimisticId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"overwrites": {
								"type": "reference",
								"id": 707,
								"name": "ApolloCache.performTransaction"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 706,
						"name": "ApolloCache.performTransaction"
					}
				},
				{
					"id": 915,
					"name": "read",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 161,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 916,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 917,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 918,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 516,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ReadOptions"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 917,
										"name": "T"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 667,
								"name": "ApolloCache.read"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 666,
						"name": "ApolloCache.read"
					}
				},
				{
					"id": 998,
					"name": "readFragment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 143,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 999,
							"name": "readFragment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reads a GraphQL fragment from any arbitrary id. If there is more than\none fragment in the provided document then a `fragmentName` must be\nprovided to select the correct fragment."
							},
							"typeParameter": [
								{
									"id": 1000,
									"name": "FragmentType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1001,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 1002,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 603,
										"typeArguments": [
											{
												"type": "reference",
												"id": 737,
												"name": "FragmentType"
											},
											{
												"type": "reference",
												"id": 738,
												"name": "TVariables"
											}
										],
										"name": "ReadFragmentOptions"
									}
								},
								{
									"id": 1003,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "!!options.optimistic"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 737,
										"name": "FragmentType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 736,
								"name": "ApolloCache.readFragment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 735,
						"name": "ApolloCache.readFragment"
					}
				},
				{
					"id": 992,
					"name": "readQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 128,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 993,
							"name": "readQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {},
							"typeParameter": [
								{
									"id": 994,
									"name": "QueryType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 995,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 996,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"id": 594,
										"typeArguments": [
											{
												"type": "reference",
												"id": 730,
												"name": "QueryType"
											},
											{
												"type": "reference",
												"id": 731,
												"name": "TVariables"
											}
										],
										"name": "ReadQueryOptions"
									}
								},
								{
									"id": 997,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "!!options.optimistic"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 730,
										"name": "QueryType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 729,
								"name": "ApolloCache.readQuery"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 728,
						"name": "ApolloCache.readQuery"
					}
				},
				{
					"id": 985,
					"name": "recordOptimisticTransaction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 91,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 986,
							"name": "recordOptimisticTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 987,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 770,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1517,
												"name": "NormalizedCacheObject"
											}
										],
										"name": "Transaction"
									}
								},
								{
									"id": 988,
									"name": "optimisticId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 711,
								"name": "ApolloCache.recordOptimisticTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 710,
						"name": "ApolloCache.recordOptimisticTransaction"
					}
				},
				{
					"id": 947,
					"name": "release",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 311,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 948,
							"name": "release",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 949,
									"name": "rootId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 950,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 960,
					"name": "removeOptimistic",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 380,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 961,
							"name": "removeOptimistic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 962,
									"name": "idToRemove",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 700,
								"name": "ApolloCache.removeOptimistic"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 699,
						"name": "ApolloCache.removeOptimistic"
					}
				},
				{
					"id": 957,
					"name": "reset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 356,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 958,
							"name": "reset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 959,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 567,
										"name": "ResetOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"overwrites": {
								"type": "reference",
								"id": 688,
								"name": "ApolloCache.reset"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 687,
						"name": "ApolloCache.reset"
					}
				},
				{
					"id": 906,
					"name": "resetResultCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 92,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 907,
							"name": "resetResultCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 908,
									"name": "resetResultIdentities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 909,
					"name": "restore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 148,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 910,
							"name": "restore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replaces existing state in the cache (if any) with the values expressed by\n`serializedState`.",
								"text": "Called when hydrating a cache (server side rendering, or offline storage),\nand also (potentially) during hot reloads.\n"
							},
							"parameters": [
								{
									"id": 911,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1517,
										"name": "NormalizedCacheObject"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 885,
								"name": "InMemoryCache"
							},
							"overwrites": {
								"type": "reference",
								"id": 694,
								"name": "ApolloCache.restore"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 693,
						"name": "ApolloCache.restore"
					}
				},
				{
					"id": 943,
					"name": "retain",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 302,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 944,
							"name": "retain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 945,
									"name": "rootId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 946,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 975,
					"name": "transformDocument",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 501,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 976,
							"name": "transformDocument",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 977,
									"name": "document",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							"overwrites": {
								"type": "reference",
								"id": 715,
								"name": "ApolloCache.transformDocument"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 714,
						"name": "ApolloCache.transformDocument"
					}
				},
				{
					"id": 989,
					"name": "transformForLink",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 118,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 990,
							"name": "transformForLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 991,
									"name": "document",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 726,
								"name": "ApolloCache.transformForLink"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 725,
						"name": "ApolloCache.transformForLink"
					}
				},
				{
					"id": 1023,
					"name": "updateFragment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 195,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1024,
							"name": "updateFragment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 1025,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1026,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 1027,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 643,
										"typeArguments": [
											{
												"type": "reference",
												"id": 762,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 763,
												"name": "TVariables"
											}
										],
										"name": "UpdateFragmentOptions"
									}
								},
								{
									"id": 1028,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1029,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1030,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1031,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 762,
																		"name": "TData"
																	}
																]
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "reference",
																"id": 762,
																"name": "TData"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 762,
										"name": "TData"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 761,
								"name": "ApolloCache.updateFragment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 760,
						"name": "ApolloCache.updateFragment"
					}
				},
				{
					"id": 1014,
					"name": "updateQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 180,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1015,
							"name": "updateQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 1016,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1017,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 1018,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 632,
										"typeArguments": [
											{
												"type": "reference",
												"id": 753,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 754,
												"name": "TVariables"
											}
										],
										"name": "UpdateQueryOptions"
									}
								},
								{
									"id": 1019,
									"name": "update",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1020,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1021,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1022,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 753,
																		"name": "TData"
																	}
																]
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "reference",
																"id": 753,
																"name": "TData"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 753,
										"name": "TData"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 752,
								"name": "ApolloCache.updateQuery"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 751,
						"name": "ApolloCache.updateQuery"
					}
				},
				{
					"id": 930,
					"name": "watch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 240,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 931,
							"name": "watch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 932,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 933,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 934,
									"name": "watch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 547,
										"typeArguments": [
											{
												"type": "reference",
												"id": 932,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 933,
												"name": "TVariables"
											}
										],
										"name": "WatchOptions"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 935,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 936,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 681,
								"name": "ApolloCache.watch"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 680,
						"name": "ApolloCache.watch"
					}
				},
				{
					"id": 919,
					"name": "write",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/inMemoryCache.ts",
							"line": 192,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 920,
							"name": "write",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 921,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 527,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "WriteOptions"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1266,
										"name": "Reference"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 672,
								"name": "ApolloCache.write"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 671,
						"name": "ApolloCache.write"
					}
				},
				{
					"id": 1009,
					"name": "writeFragment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 166,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1010,
							"name": "writeFragment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Writes a GraphQL fragment to any arbitrary id. If there is more than\none fragment in the provided document then a `fragmentName` must be\nprovided to select the correct fragment."
							},
							"typeParameter": [
								{
									"id": 1011,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1012,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 1013,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 622,
										"typeArguments": [
											{
												"type": "reference",
												"id": 748,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 749,
												"name": "TVariables"
											}
										],
										"name": "WriteFragmentOptions"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1266,
										"name": "Reference"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 747,
								"name": "ApolloCache.writeFragment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 746,
						"name": "ApolloCache.writeFragment"
					}
				},
				{
					"id": 1004,
					"name": "writeQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 155,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1005,
							"name": "writeQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Writes a GraphQL query to the root query id."
							},
							"typeParameter": [
								{
									"id": 1006,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1007,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 1008,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 613,
										"typeArguments": [
											{
												"type": "reference",
												"id": 743,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 744,
												"name": "TVariables"
											}
										],
										"name": "WriteQueryOptions"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1266,
										"name": "Reference"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 742,
								"name": "ApolloCache.writeQuery"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 741,
						"name": "ApolloCache.writeQuery"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						886
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						893,
						891,
						889,
						899,
						897,
						890,
						898,
						895,
						896,
						963,
						894,
						892
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						964,
						981,
						978,
						925,
						954,
						912,
						937,
						951,
						904,
						922,
						968,
						915,
						998,
						992,
						985,
						947,
						960,
						957,
						906,
						909,
						943,
						975,
						989,
						1023,
						1014,
						930,
						919,
						1009,
						1004
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/inmemory/inMemoryCache.ts",
					"line": 34,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 662,
					"typeArguments": [
						{
							"type": "reference",
							"id": 1517,
							"name": "NormalizedCacheObject"
						}
					],
					"name": "ApolloCache"
				}
			]
		},
		{
			"id": 1040,
			"name": "MissingFieldError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1041,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/core/types/common.ts",
							"line": 26,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1042,
							"name": "new MissingFieldError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1043,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1044,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "MissingTree"
											},
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 1045,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									}
								},
								{
									"id": 1046,
									"name": "variables",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1040,
								"name": "MissingFieldError"
							}
						}
					]
				},
				{
					"id": 1047,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1048,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "MissingTree"
							},
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1049,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"id": 1627,
						"name": "DocumentNode"
					}
				},
				{
					"id": 1050,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1041
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1047,
						1048,
						1049,
						1050
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/core/types/common.ts",
					"line": 25,
					"character": 13
				}
			]
		},
		{
			"id": 1156,
			"name": "Observable",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 1175,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 30,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1176,
							"name": "new Observable",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1177,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 1178,
									"name": "subscriber",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1177,
												"name": "T"
											}
										],
										"name": "Subscriber"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1177,
										"name": "T"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1246,
					"name": "[observable]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 45,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1247,
							"name": "[observable]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1177,
										"name": "T"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1242,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 54,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1243,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1244,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 1245,
									"name": "observable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1156,
											"typeArguments": [
												{
													"type": "reference",
													"id": 348,
													"name": "R"
												}
											],
											"name": "Observable"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 348,
										"name": "R"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1207,
					"name": "filter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 49,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1208,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1209,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 1210,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1211,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 1212,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1213,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1177,
																"name": "T"
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"id": 313,
															"name": "S"
														}
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 313,
										"name": "S"
									}
								],
								"name": "Observable"
							}
						},
						{
							"id": 1214,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1215,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1216,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 1217,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1218,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1177,
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1177,
										"name": "T"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1235,
					"name": "flatMap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 53,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1236,
							"name": "flatMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1237,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 1238,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1239,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 1240,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1241,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1177,
																"name": "T"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 341,
																"name": "R"
															}
														],
														"name": "ObservableLike"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 341,
										"name": "R"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1194,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 47,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1195,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1196,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1197,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 1198,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1199,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1177,
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1200,
					"name": "map",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1201,
							"name": "map",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1202,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 1203,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1204,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 1205,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1206,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1177,
																"name": "T"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 306,
														"name": "R"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 306,
										"name": "R"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1219,
					"name": "reduce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 51,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1220,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1221,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1222,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 1223,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1224,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1177,
																"name": "T"
															}
														},
														{
															"id": 1225,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1177,
																"name": "T"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 1177,
														"name": "T"
													}
												}
											]
										}
									}
								},
								{
									"id": 1226,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1177,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1177,
										"name": "T"
									}
								],
								"name": "Observable"
							}
						},
						{
							"id": 1227,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1228,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 1229,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1230,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 1231,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1232,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 332,
																"name": "R"
															}
														},
														{
															"id": 1233,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1177,
																"name": "T"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 332,
														"name": "R"
													}
												}
											]
										}
									}
								},
								{
									"id": 1234,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 332,
										"name": "R"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 332,
										"name": "R"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1179,
					"name": "subscribe",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 38,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1180,
							"name": "subscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1181,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1249,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1177,
												"name": "T"
											}
										],
										"name": "Observer"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1262,
								"name": "Subscription"
							}
						},
						{
							"id": 1182,
							"name": "subscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1183,
									"name": "onNext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1184,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 1185,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1186,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1177,
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 1187,
									"name": "onError",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1188,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 1189,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1190,
															"name": "error",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 1191,
									"name": "onComplete",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1192,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 1193,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1262,
								"name": "Subscription"
							}
						}
					]
				},
				{
					"id": 1162,
					"name": "apply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 36,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1163,
							"name": "apply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1164,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 1165,
									"name": "instance",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1156,
										"typeArguments": [
											{
												"type": "reference",
												"id": 162,
												"name": "R"
											}
										],
										"name": "Observable"
									}
								},
								{
									"id": 1166,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IArguments"
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 162,
																"name": "R"
															}
														],
														"name": "Subscriber"
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					]
				},
				{
					"id": 1157,
					"name": "call",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 35,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1158,
							"name": "call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1159,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 1160,
									"name": "instance",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1156,
										"typeArguments": [
											{
												"type": "reference",
												"id": 157,
												"name": "R"
											}
										],
										"name": "Observable"
									}
								},
								{
									"id": 1161,
									"name": "subscriber",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 157,
												"name": "R"
											}
										],
										"name": "Subscriber"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					]
				},
				{
					"id": 1167,
					"name": "from",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 56,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1168,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1169,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 1170,
									"name": "observable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1156,
												"typeArguments": [
													{
														"type": "reference",
														"id": 167,
														"name": "R"
													}
												],
												"name": "Observable"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 167,
														"name": "R"
													}
												],
												"name": "ObservableLike"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 167,
														"name": "R"
													}
												],
												"name": "ArrayLike"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 167,
										"name": "R"
									}
								],
								"name": "Observable"
							}
						}
					]
				},
				{
					"id": 1171,
					"name": "of",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 57,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1172,
							"name": "of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1173,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 1174,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 171,
											"name": "R"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 171,
										"name": "R"
									}
								],
								"name": "Observable"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1175
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1246,
						1242,
						1207,
						1235,
						1194,
						1200,
						1219,
						1179,
						1162,
						1157,
						1167,
						1171
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/zen-observable-ts/module.d.ts",
					"line": 29,
					"character": 21
				}
			],
			"typeParameter": [
				{
					"id": 1248,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 154,
					"name": "ObservableQuery"
				}
			]
		},
		{
			"id": 154,
			"name": "ObservableQuery",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 173,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 99,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 174,
							"name": "new ObservableQuery",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 175,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 176,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1388,
										"name": "OperationVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 177,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 178,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 181,
													"name": "options",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/ObservableQuery.ts",
															"line": 106,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 385,
														"typeArguments": [
															{
																"type": "reference",
																"id": 176,
																"name": "TVariables"
															},
															{
																"type": "reference",
																"id": 175,
																"name": "TData"
															}
														],
														"name": "WatchQueryOptions"
													}
												},
												{
													"id": 180,
													"name": "queryInfo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/ObservableQuery.ts",
															"line": 105,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"name": "QueryInfo"
													}
												},
												{
													"id": 179,
													"name": "queryManager",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/ObservableQuery.ts",
															"line": 104,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "QueryManager"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														181,
														180,
														179
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"typeArguments": [
									{
										"type": "reference",
										"id": 175,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 176,
										"name": "TVariables"
									}
								],
								"name": "ObservableQuery"
							},
							"overwrites": {
								"type": "reference",
								"id": 1176,
								"name": "Observable.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1175,
						"name": "Observable.constructor"
					}
				},
				{
					"id": 194,
					"name": "concast",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 91,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1389,
								"typeArguments": [
									{
										"type": "reference",
										"id": 175,
										"name": "TData"
									}
								],
								"name": "ApolloQueryResult"
							}
						],
						"name": "Concast"
					}
				},
				{
					"id": 187,
					"name": "initialFetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 78,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 435,
						"name": "WatchQueryFetchPolicy"
					}
				},
				{
					"id": 188,
					"name": "isTornDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 80,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 192,
					"name": "last",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 85,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 175,
								"name": "TData"
							},
							{
								"type": "reference",
								"id": 176,
								"name": "TVariables"
							}
						],
						"name": "Last"
					}
				},
				{
					"id": 195,
					"name": "observer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 92,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 1249,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1389,
								"typeArguments": [
									{
										"type": "reference",
										"id": 175,
										"name": "TData"
									}
								],
								"name": "ApolloQueryResult"
							}
						],
						"name": "Observer"
					}
				},
				{
					"id": 190,
					"name": "observers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 82,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1249,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Observer"
							}
						],
						"name": "Set"
					},
					"defaultValue": "..."
				},
				{
					"id": 182,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 66,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"id": 385,
						"typeArguments": [
							{
								"type": "reference",
								"id": 176,
								"name": "TVariables"
							},
							{
								"type": "reference",
								"id": 175,
								"name": "TData"
							}
						],
						"name": "WatchQueryOptions"
					}
				},
				{
					"id": 196,
					"name": "pollingInfo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 94,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 197,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 198,
									"name": "interval",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/core/ObservableQuery.ts",
											"line": 95,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 199,
									"name": "timeout",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/core/ObservableQuery.ts",
											"line": 96,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"name": "Timeout"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										198,
										199
									]
								}
							]
						}
					}
				},
				{
					"id": 183,
					"name": "queryId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 67,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 193,
					"name": "queryInfo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 87,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "QueryInfo"
					}
				},
				{
					"id": 189,
					"name": "queryManager",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 81,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "QueryManager"
					}
				},
				{
					"id": 184,
					"name": "queryName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 68,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 191,
					"name": "subscriptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 83,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1262,
								"name": "Subscription"
							}
						],
						"name": "Set"
					},
					"defaultValue": "..."
				},
				{
					"id": 185,
					"name": "variables",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 72,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 186,
							"name": "variables",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 176,
										"name": "TVariables"
									}
								]
							}
						}
					]
				},
				{
					"id": 350,
					"name": "[observable]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 45,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 351,
							"name": "[observable]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1247,
								"name": "Observable.[observable]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1246,
						"name": "Observable.[observable]"
					}
				},
				{
					"id": 346,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 54,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 347,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 348,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 349,
									"name": "observable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1156,
											"typeArguments": [
												{
													"type": "reference",
													"id": 348,
													"name": "R"
												}
											],
											"name": "Observable"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 348,
										"name": "R"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "Observable.concat"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1242,
						"name": "Observable.concat"
					}
				},
				{
					"id": 255,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 584,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 256,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 257,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 385,
										"typeArguments": [
											{
												"type": "reference",
												"id": 176,
												"name": "TVariables"
											},
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "WatchQueryOptions"
									}
								},
								{
									"id": 258,
									"name": "newNetworkStatus",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 455,
										"name": "NetworkStatus"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Concast"
							}
						}
					]
				},
				{
					"id": 226,
					"name": "fetchMore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 362,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 227,
							"name": "fetchMore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 228,
									"name": "fetchMoreOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 437,
												"typeArguments": [
													{
														"type": "reference",
														"id": 176,
														"name": "TVariables"
													},
													{
														"type": "reference",
														"id": 175,
														"name": "TData"
													}
												],
												"name": "FetchMoreQueryOptions"
											},
											{
												"type": "reference",
												"id": 354,
												"typeArguments": [
													{
														"type": "reference",
														"id": 175,
														"name": "TData"
													},
													{
														"type": "reference",
														"id": 176,
														"name": "TVariables"
													}
												],
												"name": "FetchMoreOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 311,
					"name": "filter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 49,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 312,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 313,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								}
							],
							"parameters": [
								{
									"id": 314,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 315,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 316,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 317,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1389,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 175,
																		"name": "TData"
																	}
																],
																"name": "ApolloQueryResult"
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"id": 313,
															"name": "S"
														}
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 313,
										"name": "S"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1208,
								"name": "Observable.filter"
							}
						},
						{
							"id": 318,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 319,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 320,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 321,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 322,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1389,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 175,
																		"name": "TData"
																	}
																],
																"name": "ApolloQueryResult"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1214,
								"name": "Observable.filter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1207,
						"name": "Observable.filter"
					}
				},
				{
					"id": 339,
					"name": "flatMap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 53,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 340,
							"name": "flatMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 341,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 342,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 343,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 344,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 345,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1389,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 175,
																		"name": "TData"
																	}
																],
																"name": "ApolloQueryResult"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 341,
																"name": "R"
															}
														],
														"name": "ObservableLike"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 341,
										"name": "R"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1236,
								"name": "Observable.flatMap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1235,
						"name": "Observable.flatMap"
					}
				},
				{
					"id": 298,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 47,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 299,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 300,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 301,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 302,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 303,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1389,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 175,
																		"name": "TData"
																	}
																],
																"name": "ApolloQueryResult"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1195,
								"name": "Observable.forEach"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1194,
						"name": "Observable.forEach"
					}
				},
				{
					"id": 202,
					"name": "getCurrentResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 197,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 203,
							"name": "getCurrentResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 204,
									"name": "saveAsLastResult",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "reference",
								"id": 1389,
								"typeArguments": [
									{
										"type": "reference",
										"id": 175,
										"name": "TData"
									}
								],
								"name": "ApolloQueryResult"
							}
						}
					]
				},
				{
					"id": 208,
					"name": "getLast",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 283,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 209,
							"name": "getLast",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 210,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 175,
													"name": "TData"
												},
												{
													"type": "reference",
													"id": 176,
													"name": "TVariables"
												}
											],
											"name": "Last"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 211,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 210,
										"name": "K"
									}
								},
								{
									"id": 212,
									"name": "variablesMustMatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 210,
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 175,
													"name": "TData"
												},
												{
													"type": "reference",
													"id": 176,
													"name": "TVariables"
												}
											],
											"name": "Last"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 216,
					"name": "getLastError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 299,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 217,
							"name": "getLastError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 218,
									"name": "variablesMustMatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 482,
										"name": "ApolloError"
									}
								]
							}
						}
					]
				},
				{
					"id": 213,
					"name": "getLastResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 295,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 214,
							"name": "getLastResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 215,
									"name": "variablesMustMatch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								]
							}
						}
					]
				},
				{
					"id": 279,
					"name": "hasObservers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 789,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 280,
							"name": "hasObservers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 205,
					"name": "isDifferentFromLastResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 279,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 206,
							"name": "isDifferentFromLastResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 207,
									"name": "newResult",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 304,
					"name": "map",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 305,
							"name": "map",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 306,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 307,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 308,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 309,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 310,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1389,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 175,
																		"name": "TData"
																	}
																],
																"name": "ApolloQueryResult"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 306,
														"name": "R"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 306,
										"name": "R"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1201,
								"name": "Observable.map"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1200,
						"name": "Observable.map"
					}
				},
				{
					"id": 269,
					"name": "observe",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 749,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 270,
							"name": "observe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 323,
					"name": "reduce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 51,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 324,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 325,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 326,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 327,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 328,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1389,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 175,
																		"name": "TData"
																	}
																],
																"name": "ApolloQueryResult"
															}
														},
														{
															"id": 329,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1389,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 175,
																		"name": "TData"
																	}
																],
																"name": "ApolloQueryResult"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 1389,
														"typeArguments": [
															{
																"type": "reference",
																"id": 175,
																"name": "TData"
															}
														],
														"name": "ApolloQueryResult"
													}
												}
											]
										}
									}
								},
								{
									"id": 330,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1220,
								"name": "Observable.reduce"
							}
						},
						{
							"id": 331,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 332,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 333,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 334,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 335,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 336,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 332,
																"name": "R"
															}
														},
														{
															"id": 337,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1389,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 175,
																		"name": "TData"
																	}
																],
																"name": "ApolloQueryResult"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 332,
														"name": "R"
													}
												}
											]
										}
									}
								},
								{
									"id": 338,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 332,
										"name": "R"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 332,
										"name": "R"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1227,
								"name": "Observable.reduce"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1219,
						"name": "Observable.reduce"
					}
				},
				{
					"id": 223,
					"name": "refetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 319,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 224,
							"name": "refetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the variables of this observable query, and fetch the new results.\nThis method should be preferred over `setVariables` in most use cases."
							},
							"parameters": [
								{
									"id": 225,
									"name": "variables",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 176,
												"name": "TVariables"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 265,
					"name": "reobserve",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 671,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 266,
							"name": "reobserve",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 267,
									"name": "newOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 385,
												"typeArguments": [
													{
														"type": "reference",
														"id": 176,
														"name": "TVariables"
													},
													{
														"type": "reference",
														"id": 175,
														"name": "TData"
													}
												],
												"name": "WatchQueryOptions"
											}
										],
										"name": "Partial"
									}
								},
								{
									"id": 268,
									"name": "newNetworkStatus",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 455,
										"name": "NetworkStatus"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 275,
					"name": "reportError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 770,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 276,
							"name": "reportError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 277,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "ApolloError"
									}
								},
								{
									"id": 278,
									"name": "variables",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 176,
												"name": "TVariables"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 271,
					"name": "reportResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 760,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 272,
							"name": "reportResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 273,
									"name": "result",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								},
								{
									"id": 274,
									"name": "variables",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 176,
												"name": "TVariables"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 219,
					"name": "resetLastResults",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 303,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 220,
							"name": "resetLastResults",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 221,
					"name": "resetQueryStoreErrors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 308,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "resetQueryStoreErrors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 200,
					"name": "result",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 163,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 201,
							"name": "result",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 236,
					"name": "setOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 492,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 237,
							"name": "setOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 238,
									"name": "newOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 385,
												"typeArguments": [
													{
														"type": "reference",
														"id": 176,
														"name": "TVariables"
													},
													{
														"type": "reference",
														"id": 175,
														"name": "TData"
													}
												],
												"name": "WatchQueryOptions"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 239,
					"name": "setVariables",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 519,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "setVariables",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"shortText": "This is for *internal* use only. Most users should instead use `refetch`\nin order to be properly notified of results even when they come from cache.",
								"text": "Update the variables of this observable query, and fetch the new results\nif they've changed. If you want to force new results, use `refetch`.\n\nNote: the `next` callback will *not* fire if the variables have not changed\nor if the result is coming from cache.\n\nNote: the promise will return the old results immediately if the variables\nhave not changed.\n\nNote: the promise will return null immediately if the query is not active\n(there are no subscribers).\n"
							},
							"parameters": [
								{
									"id": 241,
									"name": "variables",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 176,
										"name": "TVariables"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"id": 1389,
												"typeArguments": [
													{
														"type": "reference",
														"id": 175,
														"name": "TData"
													}
												],
												"name": "ApolloQueryResult"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 250,
					"name": "startPolling",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 574,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 251,
							"name": "startPolling",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 252,
									"name": "pollInterval",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 253,
					"name": "stopPolling",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 579,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 254,
							"name": "stopPolling",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 283,
					"name": "subscribe",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 38,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 284,
							"name": "subscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 285,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1249,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1389,
												"typeArguments": [
													{
														"type": "reference",
														"id": 175,
														"name": "TData"
													}
												],
												"name": "ApolloQueryResult"
											}
										],
										"name": "Observer"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1262,
								"name": "Subscription"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1180,
								"name": "Observable.subscribe"
							}
						},
						{
							"id": 286,
							"name": "subscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 287,
									"name": "onNext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 288,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 289,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 290,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"id": 1389,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 175,
																		"name": "TData"
																	}
																],
																"name": "ApolloQueryResult"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 291,
									"name": "onError",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 292,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 293,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 294,
															"name": "error",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 295,
									"name": "onComplete",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 296,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 297,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1262,
								"name": "Subscription"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1182,
								"name": "Observable.subscribe"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1179,
						"name": "Observable.subscribe"
					}
				},
				{
					"id": 229,
					"name": "subscribeToMore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 445,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 230,
							"name": "subscribeToMore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 231,
									"name": "TSubscriptionData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 175,
										"name": "TData"
									}
								},
								{
									"id": 232,
									"name": "TSubscriptionVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 176,
										"name": "TVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 233,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 443,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 232,
												"name": "TSubscriptionVariables"
											},
											{
												"type": "reference",
												"id": 231,
												"name": "TSubscriptionData"
											}
										],
										"name": "SubscribeToMoreOptions"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 234,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 235,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 281,
					"name": "tearDownQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 793,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 282,
							"name": "tearDownQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 261,
					"name": "updateLastResult",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 654,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 262,
							"name": "updateLastResult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 263,
									"name": "newResult",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 175,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								},
								{
									"id": 264,
									"name": "variables",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 176,
												"name": "TVariables"
											}
										]
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 175,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 176,
										"name": "TVariables"
									}
								],
								"name": "Last"
							}
						}
					]
				},
				{
					"id": 259,
					"name": "updatePolling",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 597,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 260,
							"name": "updatePolling",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 242,
					"name": "updateQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 545,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "updateQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 244,
									"name": "TVars",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 176,
										"name": "TVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 245,
									"name": "mapFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 246,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 247,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 248,
															"name": "previousQueryResult",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 175,
																"name": "TData"
															}
														},
														{
															"id": 249,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 385,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 244,
																				"name": "TVars"
																			},
																			{
																				"type": "reference",
																				"id": 175,
																				"name": "TData"
																			}
																		],
																		"name": "WatchQueryOptions"
																	},
																	{
																		"type": "literal",
																		"value": "variables"
																	}
																],
																"name": "Pick"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 175,
														"name": "TData"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 160,
					"name": "apply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 36,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 161,
							"name": "apply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 162,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 163,
									"name": "instance",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1156,
										"typeArguments": [
											{
												"type": "reference",
												"id": 162,
												"name": "R"
											}
										],
										"name": "Observable"
									}
								},
								{
									"id": 164,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IArguments"
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 162,
																"name": "R"
															}
														],
														"name": "Subscriber"
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1163,
								"name": "Observable.apply"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1162,
						"name": "Observable.apply"
					}
				},
				{
					"id": 155,
					"name": "call",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 35,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 156,
							"name": "call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 157,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 158,
									"name": "instance",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1156,
										"typeArguments": [
											{
												"type": "reference",
												"id": 157,
												"name": "R"
											}
										],
										"name": "Observable"
									}
								},
								{
									"id": 159,
									"name": "subscriber",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 157,
												"name": "R"
											}
										],
										"name": "Subscriber"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1158,
								"name": "Observable.call"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1157,
						"name": "Observable.call"
					}
				},
				{
					"id": 165,
					"name": "from",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 56,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 166,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 167,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 168,
									"name": "observable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1156,
												"typeArguments": [
													{
														"type": "reference",
														"id": 167,
														"name": "R"
													}
												],
												"name": "Observable"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 167,
														"name": "R"
													}
												],
												"name": "ObservableLike"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 167,
														"name": "R"
													}
												],
												"name": "ArrayLike"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 167,
										"name": "R"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1168,
								"name": "Observable.from"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1167,
						"name": "Observable.from"
					}
				},
				{
					"id": 169,
					"name": "of",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 57,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 170,
							"name": "of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 171,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 172,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 171,
											"name": "R"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 171,
										"name": "R"
									}
								],
								"name": "Observable"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1172,
								"name": "Observable.of"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1171,
						"name": "Observable.of"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						173
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						194,
						187,
						188,
						192,
						195,
						190,
						182,
						196,
						183,
						193,
						189,
						184,
						191
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						185
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						350,
						346,
						255,
						226,
						311,
						339,
						298,
						202,
						208,
						216,
						213,
						279,
						205,
						304,
						269,
						323,
						223,
						265,
						275,
						271,
						219,
						221,
						200,
						236,
						239,
						250,
						253,
						283,
						229,
						281,
						261,
						259,
						242,
						160,
						155,
						165,
						169
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/ObservableQuery.ts",
					"line": 62,
					"character": 13
				}
			],
			"typeParameter": [
				{
					"id": 352,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 353,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1156,
					"typeArguments": [
						{
							"type": "reference",
							"id": 1389,
							"typeArguments": [
								{
									"type": "reference",
									"id": 175,
									"name": "TData"
								}
							],
							"name": "ApolloQueryResult"
						}
					],
					"name": "Observable"
				}
			]
		},
		{
			"id": 1825,
			"name": "ApolloContextValue",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1826,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/context/ApolloContext.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					}
				},
				{
					"id": 1827,
					"name": "renderPromises",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/context/ApolloContext.ts",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "RenderPromises"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1826,
						1827
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/context/ApolloContext.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 2088,
			"name": "BaseMutationOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2113,
					"name": "awaitRefetchQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "By default, `refetchQueries` does not wait for the refetched queries to\nbe completed, before resolving the mutation `Promise`. This ensures that\nquery refetching does not hold up mutation response handling (query\nrefetching is handled asynchronously). Set `awaitRefetchQueries` to\n`true` if you would like to wait for the refetched queries to complete,\nbefore the mutation can be marked as resolved."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 241,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.awaitRefetchQueries"
					}
				},
				{
					"id": 2089,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 130,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					}
				},
				{
					"id": 2101,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The context to be passed to the link execution chain. This context will\nonly be used with this mutation. It will not be used with\n`refetchQueries`. Refetched queries use the context they were\ninitialized with (since the initial context is stored as part of the\n`ObservableQuery` instance). If a specific context is needed when\nrefetching queries, make sure it is configured (via the\n[query `context` option](https://www.apollographql.com/docs/react/api/apollo-client#ApolloClient.query))\nwhen the query is first initialized/run."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 290,
							"character": 3
						}
					],
					"type": {
						"type": "reference",
						"id": 2117,
						"name": "TContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.context"
					}
				},
				{
					"id": 2100,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this operation"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 272,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.errorPolicy"
					}
				},
				{
					"id": 2099,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link MutationFetchPolicy} to be used for this query.\nMutations support only 'network-only' and 'no-cache' fetchPolicy strings.\nIf fetchPolicy is not provided, it defaults to 'network-only'."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 310,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "MutationFetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.fetchPolicy"
					}
				},
				{
					"id": 2097,
					"name": "ignoreResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 134,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2103,
					"name": "keepRootFields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "To avoid retaining sensitive information from mutation root field\narguments, Apollo Client v3.4+ automatically clears any `ROOT_MUTATION`\nfields from the cache after each mutation finishes. If you need this\ninformation to remain in the cache, you can prevent the removal by passing\n`keepRootFields: true` to the mutation. `ROOT_MUTATION` result data are\nalso passed to the mutation `update` function, so we recommend obtaining\nthe results that way, rather than using this option, if possible."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 321,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.keepRootFields"
					}
				},
				{
					"id": 2090,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 131,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2102,
					"name": "onQueryUpdated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function that will be called for each ObservableQuery affected by\nthis mutation, after the mutation has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 267,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1322,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "OnQueryUpdated"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onQueryUpdated"
					}
				},
				{
					"id": 2104,
					"name": "optimisticResponse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that represents the result of this mutation that will be\noptimistically stored before the server has actually returned a result.\nThis is most often used for optimistic UI, where we want to be able to see\nthe result of a mutation immediately, and update the UI later if any errors\nappear."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 211,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2115,
								"name": "TData"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2105,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2106,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2107,
													"name": "vars",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2116,
														"name": "TVariables"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 2115,
												"name": "TData"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.optimisticResponse"
					}
				},
				{
					"id": 2109,
					"name": "refetchQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of query names which will be refetched once this mutation has\nreturned. This is often used if you have a set of queries which may be\naffected by a mutation and will have to update. Rather than writing a\nmutation query reducer (i.e. `updateQueries`) for this, you can simply\nrefetch the queries that will be affected and achieve a consistent store\nonce these queries return."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 229,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1332,
								"name": "InternalRefetchQueriesInclude"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2110,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2111,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2112,
													"name": "result",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1647,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2115,
																"name": "TData"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "FetchResult"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1332,
												"name": "InternalRefetchQueriesInclude"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.refetchQueries"
					}
				},
				{
					"id": 2114,
					"name": "update",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function which provides an {@link ApolloCache} instance, and the result\nof the mutation, to allow the user to update the store based on the\nresults of the mutation.",
						"text": "This function will be called twice over the lifecycle of a mutation. Once\nat the very beginning if an `optimisticResponse` was provided. The writes\ncreated from the optimistic data will be rolled back before the second time\nthis function is called which is when the mutation has successfully\nresolved. At that point `update` will be called with the *actual* mutation\nresult and those writes will not be rolled back.\n\nNote that since this function is intended to be used to update the\nstore, it cannot be used with a `no-cache` fetch policy. If you're\ninterested in performing some action after a mutation has completed,\nand you don't need to update the store, use the Promise returned from\n`client.mutate` instead.\n"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 261,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1425,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2115,
								"name": "TData"
							},
							{
								"type": "reference",
								"id": 2116,
								"name": "TVariables"
							},
							{
								"type": "reference",
								"id": 2117,
								"name": "TContext"
							},
							{
								"type": "reference",
								"id": 2118,
								"name": "TCache"
							}
						],
						"name": "MutationUpdaterFunction"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.update"
					}
				},
				{
					"id": 2108,
					"name": "updateQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A {@link MutationQueryReducersMap}, which is map from query names to\nmutation query reducers. Briefly, this map defines how to incorporate the\nresults of the mutation into the results of queries that are currently\nbeing watched by your application."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1408,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2115,
								"name": "TData"
							}
						],
						"name": "MutationQueryReducersMap"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.updateQueries"
					}
				},
				{
					"id": 2098,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that maps from the name of a variable as used in the mutation\nGraphQL document to that variable's value."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 278,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2116,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.variables"
					}
				},
				{
					"id": 2091,
					"name": "onCompleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 132,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2092,
							"name": "onCompleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2093,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2115,
										"name": "TData"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2094,
					"name": "onError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 133,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2095,
							"name": "onError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2096,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "ApolloError"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2113,
						2089,
						2101,
						2100,
						2099,
						2097,
						2103,
						2090,
						2102,
						2104,
						2109,
						2114,
						2108,
						2098
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2091,
						2094
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 121,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2115,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2116,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				},
				{
					"id": 2117,
					"name": "TContext",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					}
				},
				{
					"id": 2118,
					"name": "TCache",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					},
					"default": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 403,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2115,
									"name": "TData"
								},
								{
									"type": "reference",
									"id": 2116,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 2117,
									"name": "TContext"
								},
								{
									"type": "reference",
									"id": 2118,
									"name": "TCache"
								}
							],
							"name": "MutationOptions"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "mutation"
								}
							]
						}
					],
					"name": "Omit"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 2119,
					"name": "MutationFunctionOptions"
				},
				{
					"type": "reference",
					"id": 2168,
					"name": "MutationHookOptions"
				},
				{
					"type": "reference",
					"id": 2200,
					"name": "MutationDataOptions"
				}
			]
		},
		{
			"id": 1880,
			"name": "BaseQueryOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1895,
					"name": "canonizeResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.canonizeResults"
					}
				},
				{
					"id": 1882,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloClient"
					}
				},
				{
					"id": 1883,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					},
					"overwrites": {
						"type": "reference",
						"name": "Omit.context"
					}
				},
				{
					"id": 1890,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.errorPolicy"
					}
				},
				{
					"id": 1885,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used for this query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 122,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 435,
						"name": "WatchQueryFetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.fetchPolicy"
					}
				},
				{
					"id": 1886,
					"name": "nextFetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used after this query has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 435,
								"name": "WatchQueryFetchPolicy"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1887,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1888,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1889,
													"name": "lastFetchPolicy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 435,
														"name": "WatchQueryFetchPolicy"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 435,
												"name": "WatchQueryFetchPolicy"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.nextFetchPolicy"
					}
				},
				{
					"id": 1892,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not updates to the network status should trigger next on the observer of this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.notifyOnNetworkStatusChange"
					}
				},
				{
					"id": 1894,
					"name": "partialRefetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, perform a query `refetch` if the query result is marked as\nbeing partial, and the returned data is reset to an empty Object by the\nApollo Client `QueryManager` (due to a cache miss)."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.partialRefetch"
					}
				},
				{
					"id": 1891,
					"name": "pollInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The time interval (in milliseconds) on which this query should be\nrefetched from the server."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.pollInterval"
					}
				},
				{
					"id": 1896,
					"name": "refetchWritePolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies whether a {@link NetworkStatus.refetch} operation should merge\nincoming field data with existing data, or overwrite the existing data.\nOverwriting is probably preferable, but merging is currently the default\nbehavior, for backwards compatibility with Apollo Client 3.x."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 136,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "RefetchWritePolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.refetchWritePolicy"
					}
				},
				{
					"id": 1893,
					"name": "returnPartialData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Allow returning incomplete data from the cache when a larger query cannot\nbe fully satisfied by the cache, instead of returning nothing."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 97,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.returnPartialData"
					}
				},
				{
					"id": 1881,
					"name": "ssr",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1884,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1897,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.variables"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1895,
						1882,
						1883,
						1890,
						1885,
						1886,
						1892,
						1894,
						1891,
						1896,
						1893,
						1881,
						1884
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 34,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1897,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 385,
							"typeArguments": [
								{
									"type": "reference",
									"id": 1897,
									"name": "TVariables"
								}
							],
							"name": "WatchQueryOptions"
						},
						{
							"type": "literal",
							"value": "query"
						}
					],
					"name": "Omit"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1898,
					"name": "QueryFunctionOptions"
				}
			]
		},
		{
			"id": 2244,
			"name": "BaseSubscriptionOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2251,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 210,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					}
				},
				{
					"id": 2253,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 212,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					}
				},
				{
					"id": 2246,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 206,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 434,
						"name": "FetchPolicy"
					}
				},
				{
					"id": 2247,
					"name": "shouldResubscribe",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 207,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2248,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2249,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2250,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2244,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2259,
																"name": "TData"
															},
															{
																"type": "reference",
																"id": 2260,
																"name": "TVariables"
															}
														],
														"name": "BaseSubscriptionOptions"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2252,
					"name": "skip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 211,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2245,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 205,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2260,
						"name": "TVariables"
					}
				},
				{
					"id": 2257,
					"name": "onSubscriptionComplete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 214,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2258,
							"name": "onSubscriptionComplete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2254,
					"name": "onSubscriptionData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 213,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2255,
							"name": "onSubscriptionData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2256,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2240,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2259,
												"name": "TData"
											}
										],
										"name": "OnSubscriptionDataOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2251,
						2253,
						2246,
						2247,
						2252,
						2245
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2257,
						2254
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 201,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2259,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2260,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 2268,
					"name": "SubscriptionHookOptions"
				},
				{
					"type": "reference",
					"id": 2286,
					"name": "SubscriptionDataOptions"
				}
			]
		},
		{
			"id": 775,
			"name": "DataProxy",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "A proxy to the normalized data living in our store. This interface allows a\nuser to read and write denormalized data which feels natural to the user\nwhilst in the background this data is being converted into the normalized\nstore format."
			},
			"children": [
				{
					"id": 782,
					"name": "readFragment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 783,
							"name": "readFragment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reads a GraphQL fragment from any arbitrary id. If there is more than\none fragment in the provided document then a `fragmentName` must be\nprovided to select the correct fragment."
							},
							"typeParameter": [
								{
									"id": 784,
									"name": "FragmentType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 785,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 786,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 603,
										"typeArguments": [
											{
												"type": "reference",
												"id": 784,
												"name": "FragmentType"
											},
											{
												"type": "reference",
												"id": 785,
												"name": "TVariables"
											}
										],
										"name": "ReadFragmentOptions"
									}
								},
								{
									"id": 787,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 784,
										"name": "FragmentType"
									}
								]
							}
						}
					]
				},
				{
					"id": 776,
					"name": "readQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 777,
							"name": "readQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reads a GraphQL query from the root query id."
							},
							"typeParameter": [
								{
									"id": 778,
									"name": "QueryType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 779,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 780,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 594,
										"typeArguments": [
											{
												"type": "reference",
												"id": 778,
												"name": "QueryType"
											},
											{
												"type": "reference",
												"id": 779,
												"name": "TVariables"
											}
										],
										"name": "ReadQueryOptions"
									}
								},
								{
									"id": 781,
									"name": "optimistic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 778,
										"name": "QueryType"
									}
								]
							}
						}
					]
				},
				{
					"id": 793,
					"name": "writeFragment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 794,
							"name": "writeFragment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Writes a GraphQL fragment to any arbitrary id. If there is more than\none fragment in the provided document then a `fragmentName` must be\nprovided to select the correct fragment."
							},
							"typeParameter": [
								{
									"id": 795,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 796,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 797,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 622,
										"typeArguments": [
											{
												"type": "reference",
												"id": 795,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 796,
												"name": "TVariables"
											}
										],
										"name": "WriteFragmentOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 788,
					"name": "writeQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 789,
							"name": "writeQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Writes a GraphQL query to the root query id."
							},
							"typeParameter": [
								{
									"id": 790,
									"name": "TData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 791,
									"name": "TVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 792,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 613,
										"typeArguments": [
											{
												"type": "reference",
												"id": 790,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 791,
												"name": "TVariables"
											}
										],
										"name": "WriteQueryOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						782,
						776,
						793,
						788
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/core/types/DataProxy.ts",
					"line": 147,
					"character": 17
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 662,
					"name": "ApolloCache"
				},
				{
					"type": "reference",
					"id": 1,
					"name": "ApolloClient"
				}
			]
		},
		{
			"id": 145,
			"name": "DefaultOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 148,
					"name": "mutate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 41,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 403,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 662,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ApolloCache"
									}
								],
								"name": "MutationOptions"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 147,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 372,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "QueryOptions"
							}
						],
						"name": "Partial"
					}
				},
				{
					"id": 146,
					"name": "watchQuery",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 385,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "WatchQueryOptions"
							}
						],
						"name": "Partial"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						148,
						147,
						146
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/ApolloClient.ts",
					"line": 38,
					"character": 17
				}
			]
		},
		{
			"id": 1627,
			"name": "DocumentNode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"comment": {
				"shortText": "Document"
			},
			"children": [
				{
					"id": 1630,
					"name": "definitions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql/language/ast.d.ts",
							"line": 164,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "DefinitionNode"
							}
						}
					}
				},
				{
					"id": 1628,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql/language/ast.d.ts",
							"line": 162,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "DOCUMENT"
					}
				},
				{
					"id": 1629,
					"name": "loc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql/language/ast.d.ts",
							"line": 163,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "Location"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1630,
						1628,
						1629
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/graphql/language/ast.d.ts",
					"line": 161,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1302,
					"name": "TypedDocumentNode"
				}
			]
		},
		{
			"id": 354,
			"name": "FetchMoreOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 355,
					"name": "updateQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 41,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 356,
							"name": "updateQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 357,
									"name": "previousQueryResult",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 362,
										"name": "TData"
									}
								},
								{
									"id": 358,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 359,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 360,
													"name": "fetchMoreResult",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/core/ObservableQuery.ts",
															"line": 44,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"id": 362,
														"name": "TData"
													}
												},
												{
													"id": 361,
													"name": "variables",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/core/ObservableQuery.ts",
															"line": 45,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"id": 363,
														"name": "TVariables"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														360,
														361
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 362,
								"name": "TData"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						355
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/ObservableQuery.ts",
					"line": 37,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 362,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 363,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			]
		},
		{
			"id": 437,
			"name": "FetchMoreQueryOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 440,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 142,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 438,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 140,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 442,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 441,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 439,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 141,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 441,
								"name": "TVariables"
							}
						],
						"name": "Partial"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						440,
						438,
						439
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/watchQueryOptions.ts",
					"line": 139,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 441,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 442,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1647,
			"name": "FetchResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1650,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1653,
						"name": "TContext"
					}
				},
				{
					"id": 1648,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"id": 1652,
								"name": "TData"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "ExecutionResult.data"
					}
				},
				{
					"id": 1651,
					"name": "errors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql/execution/execute.d.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "GraphQLError"
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ExecutionResult.errors"
					}
				},
				{
					"id": 1649,
					"name": "extensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 29,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1654,
						"name": "TExtensions"
					},
					"overwrites": {
						"type": "reference",
						"name": "ExecutionResult.extensions"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1650,
						1648,
						1651,
						1649
					]
				}
			],
			"sources": [
				{
					"fileName": "src/link/core/types.ts",
					"line": 23,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1652,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 1653,
					"name": "TContext",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 1654,
					"name": "TExtensions",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1652,
							"name": "TData"
						},
						{
							"type": "reference",
							"id": 1654,
							"name": "TExtensions"
						}
					],
					"name": "ExecutionResult"
				}
			]
		},
		{
			"id": 1112,
			"name": "FieldFunctionOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1113,
					"name": "args",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 179,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"id": 1128,
								"name": "TArgs"
							}
						]
					}
				},
				{
					"id": 1124,
					"name": "cache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 206,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 885,
						"name": "InMemoryCache"
					}
				},
				{
					"id": 1126,
					"name": "canRead",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 222,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "CanReadFunction"
					}
				},
				{
					"id": 1116,
					"name": "field",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 193,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "FieldNode"
							}
						]
					}
				},
				{
					"id": 1114,
					"name": "fieldName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 185,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1118,
					"name": "isReference",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 198,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1119,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1120,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1121,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "obj",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 1266,
											"name": "Reference"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 1127,
					"name": "mergeObjects",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 227,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "MergeObjectsFunction"
					}
				},
				{
					"id": 1125,
					"name": "readField",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 217,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadFieldFunction"
					}
				},
				{
					"id": 1123,
					"name": "storage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 204,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "StorageType"
					}
				},
				{
					"id": 1115,
					"name": "storeFieldName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 188,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1122,
					"name": "toReference",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 199,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ToReferenceFunction"
					}
				},
				{
					"id": 1117,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 195,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1129,
						"name": "TVars"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1113,
						1124,
						1126,
						1116,
						1114,
						1118,
						1127,
						1125,
						1123,
						1115,
						1122,
						1117
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/inmemory/policies.ts",
					"line": 175,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1128,
					"name": "TArgs",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 1129,
					"name": "TVars",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				}
			]
		},
		{
			"id": 1631,
			"name": "GraphQLRequest",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1635,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 1636,
					"name": "extensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 1634,
					"name": "operationName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1632,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1627,
						"name": "DocumentNode"
					}
				},
				{
					"id": 1633,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1635,
						1636,
						1634,
						1632,
						1633
					]
				}
			],
			"sources": [
				{
					"fileName": "src/link/core/types.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 1682,
			"name": "HttpOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1691,
					"name": "credentials",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The credentials policy you want to use for the fetch call."
					},
					"sources": [
						{
							"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1685,
					"name": "fetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1686,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1687,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A `fetch`-compatible API to use when making requests."
									},
									"parameters": [
										{
											"id": 1688,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RequestInfo"
											}
										},
										{
											"id": 1689,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "RequestInit"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1692,
					"name": "fetchOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Any overrides of the fetch options argument to pass to the fetch call."
					},
					"sources": [
						{
							"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
							"line": 53,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1690,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object representing values to be sent as headers on the request."
					},
					"sources": [
						{
							"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1684,
					"name": "includeExtensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Passes the extensions field to your graphql server.",
						"text": "Defaults to false.\n"
					},
					"sources": [
						{
							"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
							"line": 33,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1694,
					"name": "includeUnusedVariables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If set to true, the default behavior of stripping unused variables\nfrom the request will be disabled.",
						"text": "Unused variables are likely to trigger server-side validation errors,\nper https://spec.graphql.org/draft/#sec-All-Variables-Used, but this\nincludeUnusedVariables option can be useful if your server deviates\nfrom the GraphQL specification by not strictly enforcing that rule.\n"
					},
					"sources": [
						{
							"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1695,
					"name": "print",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function to substitute for the default query print function. Can be\nused to apply changes to the results of the print function."
					},
					"sources": [
						{
							"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
							"line": 76,
							"character": 3
						}
					],
					"type": {
						"type": "reference",
						"name": "Printer"
					}
				},
				{
					"id": 1683,
					"name": "uri",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The URI to use when fetching operations.",
						"text": "Defaults to '/graphql'.\n"
					},
					"sources": [
						{
							"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
							"line": 26,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 1729,
								"name": "UriFunction"
							}
						]
					}
				},
				{
					"id": 1693,
					"name": "useGETForQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If set to true, use the HTTP GET method for query operations. Mutations\nwill still use the method specified in fetchOptions.method (which defaults\nto POST)."
					},
					"sources": [
						{
							"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1691,
						1685,
						1692,
						1690,
						1684,
						1694,
						1695,
						1683,
						1693
					]
				}
			],
			"sources": [
				{
					"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
					"line": 20,
					"character": 17
				}
			]
		},
		{
			"id": 1832,
			"name": "IDocumentDefinition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1834,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/parser/index.ts",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1833,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/parser/index.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1828,
						"name": "DocumentType"
					}
				},
				{
					"id": 1835,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/parser/index.ts",
							"line": 19,
							"character": 2
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "VariableDefinitionNode"
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1834,
						1833,
						1835
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/parser/index.ts",
					"line": 16,
					"character": 17
				}
			]
		},
		{
			"id": 1445,
			"name": "IdGetterObj",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1446,
					"name": "__typename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1448,
					"name": "_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 29,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1449,
					"name": "constructor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The initial value of Object.prototype.constructor is the standard built-in Object constructor."
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 122,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Function"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Object.constructor"
					}
				},
				{
					"id": 1447,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1456,
					"name": "hasOwnProperty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1457,
							"name": "hasOwnProperty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Determines whether an object has a property with the specified name."
							},
							"parameters": [
								{
									"id": 1458,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A property name.\n"
									},
									"type": {
										"type": "reference",
										"name": "PropertyKey"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Object.hasOwnProperty"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Object.hasOwnProperty"
					}
				},
				{
					"id": 1459,
					"name": "isPrototypeOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1460,
							"name": "isPrototypeOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Determines whether an object exists in another object's prototype chain."
							},
							"parameters": [
								{
									"id": 1461,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Another object whose prototype chain is to be checked.\n"
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Object.isPrototypeOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Object.isPrototypeOf"
					}
				},
				{
					"id": 1462,
					"name": "propertyIsEnumerable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1463,
							"name": "propertyIsEnumerable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Determines whether a specified property is enumerable."
							},
							"parameters": [
								{
									"id": 1464,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A property name.\n"
									},
									"type": {
										"type": "reference",
										"name": "PropertyKey"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Object.propertyIsEnumerable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Object.propertyIsEnumerable"
					}
				},
				{
					"id": 1452,
					"name": "toLocaleString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1453,
							"name": "toLocaleString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a date converted to a string using the current locale."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Object.toLocaleString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Object.toLocaleString"
					}
				},
				{
					"id": 1450,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1451,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a string representation of an object."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Object.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Object.toString"
					}
				},
				{
					"id": 1454,
					"name": "valueOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1455,
							"name": "valueOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the primitive value of the specified object."
							},
							"type": {
								"type": "reference",
								"name": "Object"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Object.valueOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Object.valueOf"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1446,
						1448,
						1449,
						1447
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1456,
						1459,
						1462,
						1452,
						1450,
						1454
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 26,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Object"
				}
			]
		},
		{
			"id": 1032,
			"name": "InMemoryCacheConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1039,
					"name": "addTypename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 124,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ApolloReducerConfig.addTypename"
					}
				},
				{
					"id": 1037,
					"name": "canonizeResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 132,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1038,
					"name": "dataIdFromObject",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 123,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "KeyFieldsFunction"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ApolloReducerConfig.dataIdFromObject"
					}
				},
				{
					"id": 1034,
					"name": "possibleTypes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 129,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1130,
						"name": "PossibleTypesMap"
					}
				},
				{
					"id": 1036,
					"name": "resultCacheMaxSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 131,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1033,
					"name": "resultCaching",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 128,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1035,
					"name": "typePolicies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 130,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1071,
						"name": "TypePolicies"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1039,
						1037,
						1038,
						1034,
						1036,
						1033,
						1035
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 127,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1540,
					"name": "ApolloReducerConfig"
				}
			]
		},
		{
			"id": 1373,
			"name": "InternalRefetchQueriesOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1374,
					"name": "include",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 110,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1332,
						"name": "InternalRefetchQueriesInclude"
					}
				},
				{
					"id": 1380,
					"name": "onQueryUpdated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"id": 1322,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1382,
										"name": "TResult"
									}
								],
								"name": "OnQueryUpdated"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onQueryUpdated"
					}
				},
				{
					"id": 1376,
					"name": "optimistic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.optimistic"
					}
				},
				{
					"id": 1375,
					"name": "removeOptimistic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 113,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1377,
					"name": "updateCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 45,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1378,
							"name": "updateCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1379,
									"name": "cache",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1340,
										"name": "TCache"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.updateCache"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.updateCache"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1374,
						1380,
						1376,
						1375
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1377
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 103,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1381,
					"name": "TCache",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					}
				},
				{
					"id": 1382,
					"name": "TResult",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1333,
							"typeArguments": [
								{
									"type": "reference",
									"id": 1381,
									"name": "TCache"
								},
								{
									"type": "reference",
									"id": 1382,
									"name": "TResult"
								}
							],
							"name": "RefetchQueriesOptions"
						},
						{
							"type": "literal",
							"value": "include"
						}
					],
					"name": "Omit"
				}
			]
		},
		{
			"id": 2044,
			"name": "LazyQueryHookOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2058,
					"name": "canonizeResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.canonizeResults"
					}
				},
				{
					"id": 2062,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.client"
					}
				},
				{
					"id": 2053,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.context"
					}
				},
				{
					"id": 2064,
					"name": "displayName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.displayName"
					}
				},
				{
					"id": 2052,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.errorPolicy"
					}
				},
				{
					"id": 2047,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used for this query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 122,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 435,
						"name": "WatchQueryFetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.fetchPolicy"
					}
				},
				{
					"id": 2048,
					"name": "nextFetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used after this query has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 435,
								"name": "WatchQueryFetchPolicy"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2049,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2050,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2051,
													"name": "lastFetchPolicy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 435,
														"name": "WatchQueryFetchPolicy"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 435,
												"name": "WatchQueryFetchPolicy"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.nextFetchPolicy"
					}
				},
				{
					"id": 2055,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not updates to the network status should trigger next on the observer of this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.notifyOnNetworkStatusChange"
					}
				},
				{
					"id": 2057,
					"name": "partialRefetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, perform a query `refetch` if the query result is marked as\nbeing partial, and the returned data is reset to an empty Object by the\nApollo Client `QueryManager` (due to a cache miss)."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.partialRefetch"
					}
				},
				{
					"id": 2054,
					"name": "pollInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The time interval (in milliseconds) on which this query should be\nrefetched from the server."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.pollInterval"
					}
				},
				{
					"id": 2045,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 99,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2069,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 2070,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 2063,
					"name": "refetchWritePolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies whether a {@link NetworkStatus.refetch} operation should merge\nincoming field data with existing data, or overwrite the existing data.\nOverwriting is probably preferable, but merging is currently the default\nbehavior, for backwards compatibility with Apollo Client 3.x."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 136,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "RefetchWritePolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.refetchWritePolicy"
					}
				},
				{
					"id": 2056,
					"name": "returnPartialData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Allow returning incomplete data from the cache when a larger query cannot\nbe fully satisfied by the cache, instead of returning nothing."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 97,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.returnPartialData"
					}
				},
				{
					"id": 2068,
					"name": "ssr",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.ssr"
					}
				},
				{
					"id": 2046,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2070,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.variables"
					}
				},
				{
					"id": 2065,
					"name": "onCompleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 47,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2066,
							"name": "onCompleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2067,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1923,
										"name": "TData"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onCompleted"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCompleted"
					}
				},
				{
					"id": 2059,
					"name": "onError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2060,
							"name": "onError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2061,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "ApolloError"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onError"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onError"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2058,
						2062,
						2053,
						2064,
						2052,
						2047,
						2048,
						2055,
						2057,
						2054,
						2045,
						2063,
						2056,
						2068,
						2046
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2065,
						2059
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 95,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2069,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2070,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1898,
							"typeArguments": [
								{
									"type": "reference",
									"id": 2069,
									"name": "TData"
								},
								{
									"type": "reference",
									"id": 2070,
									"name": "TVariables"
								}
							],
							"name": "QueryFunctionOptions"
						},
						{
							"type": "literal",
							"value": "skip"
						}
					],
					"name": "Omit"
				}
			]
		},
		{
			"id": 1544,
			"name": "MergeInfo",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1545,
					"name": "field",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 136,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "FieldNode"
					}
				},
				{
					"id": 1547,
					"name": "merge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 138,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1103,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"id": 1112,
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								],
								"name": "FieldFunctionOptions"
							}
						],
						"name": "FieldMergeFunction"
					}
				},
				{
					"id": 1546,
					"name": "typename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 137,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1545,
						1547,
						1546
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 135,
					"character": 17
				}
			]
		},
		{
			"id": 1548,
			"name": "MergeTree",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1549,
					"name": "info",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 142,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1544,
						"name": "MergeInfo"
					}
				},
				{
					"id": 1550,
					"name": "map",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 143,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "reference",
								"id": 1548,
								"name": "MergeTree"
							}
						],
						"name": "Map"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1549,
						1550
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 141,
					"character": 17
				}
			]
		},
		{
			"id": 2200,
			"name": "MutationDataOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2226,
					"name": "awaitRefetchQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "By default, `refetchQueries` does not wait for the refetched queries to\nbe completed, before resolving the mutation `Promise`. This ensures that\nquery refetching does not hold up mutation response handling (query\nrefetching is handled asynchronously). Set `awaitRefetchQueries` to\n`true` if you would like to wait for the refetched queries to complete,\nbefore the mutation can be marked as resolved."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 241,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2113,
						"name": "BaseMutationOptions.awaitRefetchQueries"
					}
				},
				{
					"id": 2202,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 130,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2089,
						"name": "BaseMutationOptions.client"
					}
				},
				{
					"id": 2214,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The context to be passed to the link execution chain. This context will\nonly be used with this mutation. It will not be used with\n`refetchQueries`. Refetched queries use the context they were\ninitialized with (since the initial context is stored as part of the\n`ObservableQuery` instance). If a specific context is needed when\nrefetching queries, make sure it is configured (via the\n[query `context` option](https://www.apollographql.com/docs/react/api/apollo-client#ApolloClient.query))\nwhen the query is first initialized/run."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 290,
							"character": 3
						}
					],
					"type": {
						"type": "reference",
						"id": 2230,
						"name": "TContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2101,
						"name": "BaseMutationOptions.context"
					}
				},
				{
					"id": 2213,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this operation"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 272,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2100,
						"name": "BaseMutationOptions.errorPolicy"
					}
				},
				{
					"id": 2212,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link MutationFetchPolicy} to be used for this query.\nMutations support only 'network-only' and 'no-cache' fetchPolicy strings.\nIf fetchPolicy is not provided, it defaults to 'network-only'."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 310,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "MutationFetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2099,
						"name": "BaseMutationOptions.fetchPolicy"
					}
				},
				{
					"id": 2210,
					"name": "ignoreResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 134,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2097,
						"name": "BaseMutationOptions.ignoreResults"
					}
				},
				{
					"id": 2216,
					"name": "keepRootFields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "To avoid retaining sensitive information from mutation root field\narguments, Apollo Client v3.4+ automatically clears any `ROOT_MUTATION`\nfields from the cache after each mutation finishes. If you need this\ninformation to remain in the cache, you can prevent the removal by passing\n`keepRootFields: true` to the mutation. `ROOT_MUTATION` result data are\nalso passed to the mutation `update` function, so we recommend obtaining\nthe results that way, rather than using this option, if possible."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 321,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2103,
						"name": "BaseMutationOptions.keepRootFields"
					}
				},
				{
					"id": 2201,
					"name": "mutation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 179,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2228,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 2229,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 2203,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 131,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2090,
						"name": "BaseMutationOptions.notifyOnNetworkStatusChange"
					}
				},
				{
					"id": 2215,
					"name": "onQueryUpdated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function that will be called for each ObservableQuery affected by\nthis mutation, after the mutation has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 267,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1322,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "OnQueryUpdated"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2102,
						"name": "BaseMutationOptions.onQueryUpdated"
					}
				},
				{
					"id": 2217,
					"name": "optimisticResponse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that represents the result of this mutation that will be\noptimistically stored before the server has actually returned a result.\nThis is most often used for optimistic UI, where we want to be able to see\nthe result of a mutation immediately, and update the UI later if any errors\nappear."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 211,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2228,
								"name": "TData"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2218,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2219,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2220,
													"name": "vars",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2229,
														"name": "TVariables"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 2228,
												"name": "TData"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2104,
						"name": "BaseMutationOptions.optimisticResponse"
					}
				},
				{
					"id": 2222,
					"name": "refetchQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of query names which will be refetched once this mutation has\nreturned. This is often used if you have a set of queries which may be\naffected by a mutation and will have to update. Rather than writing a\nmutation query reducer (i.e. `updateQueries`) for this, you can simply\nrefetch the queries that will be affected and achieve a consistent store\nonce these queries return."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 229,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1332,
								"name": "InternalRefetchQueriesInclude"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2223,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2224,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2225,
													"name": "result",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1647,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2228,
																"name": "TData"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "FetchResult"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1332,
												"name": "InternalRefetchQueriesInclude"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2109,
						"name": "BaseMutationOptions.refetchQueries"
					}
				},
				{
					"id": 2227,
					"name": "update",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function which provides an {@link ApolloCache} instance, and the result\nof the mutation, to allow the user to update the store based on the\nresults of the mutation.",
						"text": "This function will be called twice over the lifecycle of a mutation. Once\nat the very beginning if an `optimisticResponse` was provided. The writes\ncreated from the optimistic data will be rolled back before the second time\nthis function is called which is when the mutation has successfully\nresolved. At that point `update` will be called with the *actual* mutation\nresult and those writes will not be rolled back.\n\nNote that since this function is intended to be used to update the\nstore, it cannot be used with a `no-cache` fetch policy. If you're\ninterested in performing some action after a mutation has completed,\nand you don't need to update the store, use the Promise returned from\n`client.mutate` instead.\n"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 261,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1425,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2228,
								"name": "TData"
							},
							{
								"type": "reference",
								"id": 2229,
								"name": "TVariables"
							},
							{
								"type": "reference",
								"id": 2230,
								"name": "TContext"
							},
							{
								"type": "reference",
								"id": 2231,
								"name": "TCache"
							}
						],
						"name": "MutationUpdaterFunction"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2114,
						"name": "BaseMutationOptions.update"
					}
				},
				{
					"id": 2221,
					"name": "updateQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A {@link MutationQueryReducersMap}, which is map from query names to\nmutation query reducers. Briefly, this map defines how to incorporate the\nresults of the mutation into the results of queries that are currently\nbeing watched by your application."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1408,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2228,
								"name": "TData"
							}
						],
						"name": "MutationQueryReducersMap"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2108,
						"name": "BaseMutationOptions.updateQueries"
					}
				},
				{
					"id": 2211,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that maps from the name of a variable as used in the mutation\nGraphQL document to that variable's value."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 278,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2229,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2098,
						"name": "BaseMutationOptions.variables"
					}
				},
				{
					"id": 2204,
					"name": "onCompleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 132,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2205,
							"name": "onCompleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2206,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2115,
										"name": "TData"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2092,
								"name": "BaseMutationOptions.onCompleted"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2091,
						"name": "BaseMutationOptions.onCompleted"
					}
				},
				{
					"id": 2207,
					"name": "onError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 133,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2208,
							"name": "onError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2209,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "ApolloError"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2095,
								"name": "BaseMutationOptions.onError"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2094,
						"name": "BaseMutationOptions.onError"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2226,
						2202,
						2214,
						2213,
						2212,
						2210,
						2216,
						2201,
						2203,
						2215,
						2217,
						2222,
						2227,
						2221,
						2211
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2204,
						2207
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 173,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2228,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2229,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				},
				{
					"id": 2230,
					"name": "TContext",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					}
				},
				{
					"id": 2231,
					"name": "TCache",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					},
					"default": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2088,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2228,
							"name": "TData"
						},
						{
							"type": "reference",
							"id": 2229,
							"name": "TVariables"
						},
						{
							"type": "reference",
							"id": 2230,
							"name": "TContext"
						},
						{
							"type": "reference",
							"id": 2231,
							"name": "TCache"
						}
					],
					"name": "BaseMutationOptions"
				}
			]
		},
		{
			"id": 2119,
			"name": "MutationFunctionOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2145,
					"name": "awaitRefetchQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "By default, `refetchQueries` does not wait for the refetched queries to\nbe completed, before resolving the mutation `Promise`. This ensures that\nquery refetching does not hold up mutation response handling (query\nrefetching is handled asynchronously). Set `awaitRefetchQueries` to\n`true` if you would like to wait for the refetched queries to complete,\nbefore the mutation can be marked as resolved."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 241,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2113,
						"name": "BaseMutationOptions.awaitRefetchQueries"
					}
				},
				{
					"id": 2121,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 130,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2089,
						"name": "BaseMutationOptions.client"
					}
				},
				{
					"id": 2133,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The context to be passed to the link execution chain. This context will\nonly be used with this mutation. It will not be used with\n`refetchQueries`. Refetched queries use the context they were\ninitialized with (since the initial context is stored as part of the\n`ObservableQuery` instance). If a specific context is needed when\nrefetching queries, make sure it is configured (via the\n[query `context` option](https://www.apollographql.com/docs/react/api/apollo-client#ApolloClient.query))\nwhen the query is first initialized/run."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 290,
							"character": 3
						}
					],
					"type": {
						"type": "reference",
						"id": 2149,
						"name": "TContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2101,
						"name": "BaseMutationOptions.context"
					}
				},
				{
					"id": 2132,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this operation"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 272,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2100,
						"name": "BaseMutationOptions.errorPolicy"
					}
				},
				{
					"id": 2131,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link MutationFetchPolicy} to be used for this query.\nMutations support only 'network-only' and 'no-cache' fetchPolicy strings.\nIf fetchPolicy is not provided, it defaults to 'network-only'."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 310,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "MutationFetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2099,
						"name": "BaseMutationOptions.fetchPolicy"
					}
				},
				{
					"id": 2129,
					"name": "ignoreResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 134,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2097,
						"name": "BaseMutationOptions.ignoreResults"
					}
				},
				{
					"id": 2135,
					"name": "keepRootFields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "To avoid retaining sensitive information from mutation root field\narguments, Apollo Client v3.4+ automatically clears any `ROOT_MUTATION`\nfields from the cache after each mutation finishes. If you need this\ninformation to remain in the cache, you can prevent the removal by passing\n`keepRootFields: true` to the mutation. `ROOT_MUTATION` result data are\nalso passed to the mutation `update` function, so we recommend obtaining\nthe results that way, rather than using this option, if possible."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 321,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2103,
						"name": "BaseMutationOptions.keepRootFields"
					}
				},
				{
					"id": 2120,
					"name": "mutation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 143,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2147,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 2148,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 2122,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 131,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2090,
						"name": "BaseMutationOptions.notifyOnNetworkStatusChange"
					}
				},
				{
					"id": 2134,
					"name": "onQueryUpdated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function that will be called for each ObservableQuery affected by\nthis mutation, after the mutation has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 267,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1322,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "OnQueryUpdated"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2102,
						"name": "BaseMutationOptions.onQueryUpdated"
					}
				},
				{
					"id": 2136,
					"name": "optimisticResponse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that represents the result of this mutation that will be\noptimistically stored before the server has actually returned a result.\nThis is most often used for optimistic UI, where we want to be able to see\nthe result of a mutation immediately, and update the UI later if any errors\nappear."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 211,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2147,
								"name": "TData"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2137,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2138,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2139,
													"name": "vars",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2148,
														"name": "TVariables"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 2147,
												"name": "TData"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2104,
						"name": "BaseMutationOptions.optimisticResponse"
					}
				},
				{
					"id": 2141,
					"name": "refetchQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of query names which will be refetched once this mutation has\nreturned. This is often used if you have a set of queries which may be\naffected by a mutation and will have to update. Rather than writing a\nmutation query reducer (i.e. `updateQueries`) for this, you can simply\nrefetch the queries that will be affected and achieve a consistent store\nonce these queries return."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 229,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1332,
								"name": "InternalRefetchQueriesInclude"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2142,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2143,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2144,
													"name": "result",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1647,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2147,
																"name": "TData"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "FetchResult"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1332,
												"name": "InternalRefetchQueriesInclude"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2109,
						"name": "BaseMutationOptions.refetchQueries"
					}
				},
				{
					"id": 2146,
					"name": "update",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function which provides an {@link ApolloCache} instance, and the result\nof the mutation, to allow the user to update the store based on the\nresults of the mutation.",
						"text": "This function will be called twice over the lifecycle of a mutation. Once\nat the very beginning if an `optimisticResponse` was provided. The writes\ncreated from the optimistic data will be rolled back before the second time\nthis function is called which is when the mutation has successfully\nresolved. At that point `update` will be called with the *actual* mutation\nresult and those writes will not be rolled back.\n\nNote that since this function is intended to be used to update the\nstore, it cannot be used with a `no-cache` fetch policy. If you're\ninterested in performing some action after a mutation has completed,\nand you don't need to update the store, use the Promise returned from\n`client.mutate` instead.\n"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 261,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1425,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2147,
								"name": "TData"
							},
							{
								"type": "reference",
								"id": 2148,
								"name": "TVariables"
							},
							{
								"type": "reference",
								"id": 2149,
								"name": "TContext"
							},
							{
								"type": "reference",
								"id": 2150,
								"name": "TCache"
							}
						],
						"name": "MutationUpdaterFunction"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2114,
						"name": "BaseMutationOptions.update"
					}
				},
				{
					"id": 2140,
					"name": "updateQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A {@link MutationQueryReducersMap}, which is map from query names to\nmutation query reducers. Briefly, this map defines how to incorporate the\nresults of the mutation into the results of queries that are currently\nbeing watched by your application."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1408,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2147,
								"name": "TData"
							}
						],
						"name": "MutationQueryReducersMap"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2108,
						"name": "BaseMutationOptions.updateQueries"
					}
				},
				{
					"id": 2130,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that maps from the name of a variable as used in the mutation\nGraphQL document to that variable's value."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 278,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2148,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2098,
						"name": "BaseMutationOptions.variables"
					}
				},
				{
					"id": 2123,
					"name": "onCompleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 132,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2124,
							"name": "onCompleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2125,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2115,
										"name": "TData"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2092,
								"name": "BaseMutationOptions.onCompleted"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2091,
						"name": "BaseMutationOptions.onCompleted"
					}
				},
				{
					"id": 2126,
					"name": "onError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 133,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2127,
							"name": "onError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2128,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "ApolloError"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2095,
								"name": "BaseMutationOptions.onError"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2094,
						"name": "BaseMutationOptions.onError"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2145,
						2121,
						2133,
						2132,
						2131,
						2129,
						2135,
						2120,
						2122,
						2134,
						2136,
						2141,
						2146,
						2140,
						2130
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2123,
						2126
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 137,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2147,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2148,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				},
				{
					"id": 2149,
					"name": "TContext",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					}
				},
				{
					"id": 2150,
					"name": "TCache",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					},
					"default": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2088,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2147,
							"name": "TData"
						},
						{
							"type": "reference",
							"id": 2148,
							"name": "TVariables"
						},
						{
							"type": "reference",
							"id": 2149,
							"name": "TContext"
						},
						{
							"type": "reference",
							"id": 2150,
							"name": "TCache"
						}
					],
					"name": "BaseMutationOptions"
				}
			]
		},
		{
			"id": 2168,
			"name": "MutationHookOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2194,
					"name": "awaitRefetchQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "By default, `refetchQueries` does not wait for the refetched queries to\nbe completed, before resolving the mutation `Promise`. This ensures that\nquery refetching does not hold up mutation response handling (query\nrefetching is handled asynchronously). Set `awaitRefetchQueries` to\n`true` if you would like to wait for the refetched queries to complete,\nbefore the mutation can be marked as resolved."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 241,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2113,
						"name": "BaseMutationOptions.awaitRefetchQueries"
					}
				},
				{
					"id": 2170,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 130,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2089,
						"name": "BaseMutationOptions.client"
					}
				},
				{
					"id": 2182,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The context to be passed to the link execution chain. This context will\nonly be used with this mutation. It will not be used with\n`refetchQueries`. Refetched queries use the context they were\ninitialized with (since the initial context is stored as part of the\n`ObservableQuery` instance). If a specific context is needed when\nrefetching queries, make sure it is configured (via the\n[query `context` option](https://www.apollographql.com/docs/react/api/apollo-client#ApolloClient.query))\nwhen the query is first initialized/run."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 290,
							"character": 3
						}
					],
					"type": {
						"type": "reference",
						"id": 2198,
						"name": "TContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2101,
						"name": "BaseMutationOptions.context"
					}
				},
				{
					"id": 2181,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this operation"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 272,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2100,
						"name": "BaseMutationOptions.errorPolicy"
					}
				},
				{
					"id": 2180,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link MutationFetchPolicy} to be used for this query.\nMutations support only 'network-only' and 'no-cache' fetchPolicy strings.\nIf fetchPolicy is not provided, it defaults to 'network-only'."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 310,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "MutationFetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2099,
						"name": "BaseMutationOptions.fetchPolicy"
					}
				},
				{
					"id": 2178,
					"name": "ignoreResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 134,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2097,
						"name": "BaseMutationOptions.ignoreResults"
					}
				},
				{
					"id": 2184,
					"name": "keepRootFields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "To avoid retaining sensitive information from mutation root field\narguments, Apollo Client v3.4+ automatically clears any `ROOT_MUTATION`\nfields from the cache after each mutation finishes. If you need this\ninformation to remain in the cache, you can prevent the removal by passing\n`keepRootFields: true` to the mutation. `ROOT_MUTATION` result data are\nalso passed to the mutation `update` function, so we recommend obtaining\nthe results that way, rather than using this option, if possible."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 321,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2103,
						"name": "BaseMutationOptions.keepRootFields"
					}
				},
				{
					"id": 2169,
					"name": "mutation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 170,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2196,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 2197,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 2171,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 131,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2090,
						"name": "BaseMutationOptions.notifyOnNetworkStatusChange"
					}
				},
				{
					"id": 2183,
					"name": "onQueryUpdated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function that will be called for each ObservableQuery affected by\nthis mutation, after the mutation has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 267,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1322,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "OnQueryUpdated"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2102,
						"name": "BaseMutationOptions.onQueryUpdated"
					}
				},
				{
					"id": 2185,
					"name": "optimisticResponse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that represents the result of this mutation that will be\noptimistically stored before the server has actually returned a result.\nThis is most often used for optimistic UI, where we want to be able to see\nthe result of a mutation immediately, and update the UI later if any errors\nappear."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 211,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2196,
								"name": "TData"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2186,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2187,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2188,
													"name": "vars",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2197,
														"name": "TVariables"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 2196,
												"name": "TData"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2104,
						"name": "BaseMutationOptions.optimisticResponse"
					}
				},
				{
					"id": 2190,
					"name": "refetchQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of query names which will be refetched once this mutation has\nreturned. This is often used if you have a set of queries which may be\naffected by a mutation and will have to update. Rather than writing a\nmutation query reducer (i.e. `updateQueries`) for this, you can simply\nrefetch the queries that will be affected and achieve a consistent store\nonce these queries return."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 229,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1332,
								"name": "InternalRefetchQueriesInclude"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2191,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2192,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2193,
													"name": "result",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1647,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2196,
																"name": "TData"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "FetchResult"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1332,
												"name": "InternalRefetchQueriesInclude"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2109,
						"name": "BaseMutationOptions.refetchQueries"
					}
				},
				{
					"id": 2195,
					"name": "update",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function which provides an {@link ApolloCache} instance, and the result\nof the mutation, to allow the user to update the store based on the\nresults of the mutation.",
						"text": "This function will be called twice over the lifecycle of a mutation. Once\nat the very beginning if an `optimisticResponse` was provided. The writes\ncreated from the optimistic data will be rolled back before the second time\nthis function is called which is when the mutation has successfully\nresolved. At that point `update` will be called with the *actual* mutation\nresult and those writes will not be rolled back.\n\nNote that since this function is intended to be used to update the\nstore, it cannot be used with a `no-cache` fetch policy. If you're\ninterested in performing some action after a mutation has completed,\nand you don't need to update the store, use the Promise returned from\n`client.mutate` instead.\n"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 261,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1425,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2196,
								"name": "TData"
							},
							{
								"type": "reference",
								"id": 2197,
								"name": "TVariables"
							},
							{
								"type": "reference",
								"id": 2198,
								"name": "TContext"
							},
							{
								"type": "reference",
								"id": 2199,
								"name": "TCache"
							}
						],
						"name": "MutationUpdaterFunction"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2114,
						"name": "BaseMutationOptions.update"
					}
				},
				{
					"id": 2189,
					"name": "updateQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A {@link MutationQueryReducersMap}, which is map from query names to\nmutation query reducers. Briefly, this map defines how to incorporate the\nresults of the mutation into the results of queries that are currently\nbeing watched by your application."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1408,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2196,
								"name": "TData"
							}
						],
						"name": "MutationQueryReducersMap"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2108,
						"name": "BaseMutationOptions.updateQueries"
					}
				},
				{
					"id": 2179,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that maps from the name of a variable as used in the mutation\nGraphQL document to that variable's value."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 278,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2197,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2098,
						"name": "BaseMutationOptions.variables"
					}
				},
				{
					"id": 2172,
					"name": "onCompleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 132,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2173,
							"name": "onCompleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2174,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2115,
										"name": "TData"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2092,
								"name": "BaseMutationOptions.onCompleted"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2091,
						"name": "BaseMutationOptions.onCompleted"
					}
				},
				{
					"id": 2175,
					"name": "onError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 133,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2176,
							"name": "onError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2177,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "ApolloError"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2095,
								"name": "BaseMutationOptions.onError"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2094,
						"name": "BaseMutationOptions.onError"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2194,
						2170,
						2182,
						2181,
						2180,
						2178,
						2184,
						2169,
						2171,
						2183,
						2185,
						2190,
						2195,
						2189,
						2179
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2172,
						2175
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 164,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2196,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2197,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				},
				{
					"id": 2198,
					"name": "TContext",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					}
				},
				{
					"id": 2199,
					"name": "TCache",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					},
					"default": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2088,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2196,
							"name": "TData"
						},
						{
							"type": "reference",
							"id": 2197,
							"name": "TVariables"
						},
						{
							"type": "reference",
							"id": 2198,
							"name": "TContext"
						},
						{
							"type": "reference",
							"id": 2199,
							"name": "TCache"
						}
					],
					"name": "BaseMutationOptions"
				}
			]
		},
		{
			"id": 403,
			"name": "MutationOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 416,
					"name": "awaitRefetchQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "By default, `refetchQueries` does not wait for the refetched queries to\nbe completed, before resolving the mutation `Promise`. This ensures that\nquery refetching does not hold up mutation response handling (query\nrefetching is handled asynchronously). Set `awaitRefetchQueries` to\n`true` if you would like to wait for the refetched queries to complete,\nbefore the mutation can be marked as resolved."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 241,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "MutationBaseOptions.awaitRefetchQueries"
					}
				},
				{
					"id": 421,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The context to be passed to the link execution chain. This context will\nonly be used with this mutation. It will not be used with\n`refetchQueries`. Refetched queries use the context they were\ninitialized with (since the initial context is stored as part of the\n`ObservableQuery` instance). If a specific context is needed when\nrefetching queries, make sure it is configured (via the\n[query `context` option](https://www.apollographql.com/docs/react/api/apollo-client#ApolloClient.query))\nwhen the query is first initialized/run."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 290,
							"character": 3
						}
					],
					"type": {
						"type": "reference",
						"id": 424,
						"name": "TContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "MutationBaseOptions.context"
					}
				},
				{
					"id": 419,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this operation"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 272,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "MutationBaseOptions.errorPolicy"
					}
				},
				{
					"id": 405,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link MutationFetchPolicy} to be used for this query.\nMutations support only 'network-only' and 'no-cache' fetchPolicy strings.\nIf fetchPolicy is not provided, it defaults to 'network-only'."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 310,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "MutationFetchPolicy"
					}
				},
				{
					"id": 406,
					"name": "keepRootFields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "To avoid retaining sensitive information from mutation root field\narguments, Apollo Client v3.4+ automatically clears any `ROOT_MUTATION`\nfields from the cache after each mutation finishes. If you need this\ninformation to remain in the cache, you can prevent the removal by passing\n`keepRootFields: true` to the mutation. `ROOT_MUTATION` result data are\nalso passed to the mutation `update` function, so we recommend obtaining\nthe results that way, rather than using this option, if possible."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 321,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 404,
					"name": "mutation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A GraphQL document, often created with `gql` from the `graphql-tag`\npackage, that contains a single mutation inside of it."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 303,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 422,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 423,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 418,
					"name": "onQueryUpdated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function that will be called for each ObservableQuery affected by\nthis mutation, after the mutation has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 267,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1322,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "OnQueryUpdated"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "MutationBaseOptions.onQueryUpdated"
					}
				},
				{
					"id": 407,
					"name": "optimisticResponse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that represents the result of this mutation that will be\noptimistically stored before the server has actually returned a result.\nThis is most often used for optimistic UI, where we want to be able to see\nthe result of a mutation immediately, and update the UI later if any errors\nappear."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 211,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 422,
								"name": "TData"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 408,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 409,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 410,
													"name": "vars",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 423,
														"name": "TVariables"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 422,
												"name": "TData"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "MutationBaseOptions.optimisticResponse"
					}
				},
				{
					"id": 412,
					"name": "refetchQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of query names which will be refetched once this mutation has\nreturned. This is often used if you have a set of queries which may be\naffected by a mutation and will have to update. Rather than writing a\nmutation query reducer (i.e. `updateQueries`) for this, you can simply\nrefetch the queries that will be affected and achieve a consistent store\nonce these queries return."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 229,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1332,
								"name": "InternalRefetchQueriesInclude"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 413,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 414,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 415,
													"name": "result",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1647,
														"typeArguments": [
															{
																"type": "reference",
																"id": 422,
																"name": "TData"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															}
														],
														"name": "FetchResult"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1332,
												"name": "InternalRefetchQueriesInclude"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "MutationBaseOptions.refetchQueries"
					}
				},
				{
					"id": 417,
					"name": "update",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A function which provides an {@link ApolloCache} instance, and the result\nof the mutation, to allow the user to update the store based on the\nresults of the mutation.",
						"text": "This function will be called twice over the lifecycle of a mutation. Once\nat the very beginning if an `optimisticResponse` was provided. The writes\ncreated from the optimistic data will be rolled back before the second time\nthis function is called which is when the mutation has successfully\nresolved. At that point `update` will be called with the *actual* mutation\nresult and those writes will not be rolled back.\n\nNote that since this function is intended to be used to update the\nstore, it cannot be used with a `no-cache` fetch policy. If you're\ninterested in performing some action after a mutation has completed,\nand you don't need to update the store, use the Promise returned from\n`client.mutate` instead.\n"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 261,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1425,
						"typeArguments": [
							{
								"type": "reference",
								"id": 422,
								"name": "TData"
							},
							{
								"type": "reference",
								"id": 423,
								"name": "TVariables"
							},
							{
								"type": "reference",
								"id": 424,
								"name": "TContext"
							},
							{
								"type": "reference",
								"id": 425,
								"name": "TCache"
							}
						],
						"name": "MutationUpdaterFunction"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "MutationBaseOptions.update"
					}
				},
				{
					"id": 411,
					"name": "updateQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A {@link MutationQueryReducersMap}, which is map from query names to\nmutation query reducers. Briefly, this map defines how to incorporate the\nresults of the mutation into the results of queries that are currently\nbeing watched by your application."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1408,
						"typeArguments": [
							{
								"type": "reference",
								"id": 422,
								"name": "TData"
							}
						],
						"name": "MutationQueryReducersMap"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "MutationBaseOptions.updateQueries"
					}
				},
				{
					"id": 420,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that maps from the name of a variable as used in the mutation\nGraphQL document to that variable's value."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 278,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 423,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "MutationBaseOptions.variables"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						416,
						421,
						419,
						405,
						406,
						404,
						418,
						407,
						412,
						417,
						411,
						420
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/watchQueryOptions.ts",
					"line": 293,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 422,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 423,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				},
				{
					"id": 424,
					"name": "TContext",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					}
				},
				{
					"id": 425,
					"name": "TCache",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					},
					"default": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 422,
							"name": "TData"
						},
						{
							"type": "reference",
							"id": 423,
							"name": "TVariables"
						},
						{
							"type": "reference",
							"id": 424,
							"name": "TContext"
						},
						{
							"type": "reference",
							"id": 425,
							"name": "TCache"
						}
					],
					"name": "MutationBaseOptions"
				}
			]
		},
		{
			"id": 2151,
			"name": "MutationResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2155,
					"name": "called",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 150,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2156,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 151,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					}
				},
				{
					"id": 2152,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 147,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"id": 2159,
								"name": "TData"
							}
						]
					}
				},
				{
					"id": 2153,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 148,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 482,
						"name": "ApolloError"
					}
				},
				{
					"id": 2154,
					"name": "loading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 149,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2157,
					"name": "reset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 2158,
							"name": "reset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2155,
						2156,
						2152,
						2153,
						2154
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2157
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 146,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2159,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1469,
			"name": "NormalizedCache",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "This is an interface used to access, set and remove\nStoreObjects from the cache"
			},
			"children": [
				{
					"id": 1512,
					"name": "canRead",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 77,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "CanReadFunction"
					}
				},
				{
					"id": 1505,
					"name": "getFieldValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1506,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1507,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1508,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 1444,
												"name": "StoreValue"
											}
										}
									],
									"parameters": [
										{
											"id": 1509,
											"name": "objectOrReference",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 1266,
														"name": "Reference"
													},
													{
														"type": "reference",
														"id": 1272,
														"name": "StoreObject"
													}
												]
											}
										},
										{
											"id": 1510,
											"name": "storeFieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1508,
												"name": "T"
											}
										],
										"name": "SafeReadonly"
									}
								}
							]
						}
					}
				},
				{
					"id": 1511,
					"name": "toReference",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 76,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ToReferenceFunction"
					}
				},
				{
					"id": 1492,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1493,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1488,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1489,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1490,
									"name": "dataId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1491,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1473,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1474,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1475,
									"name": "dataId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1476,
									"name": "fieldName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1444,
								"name": "StoreValue"
							}
						}
					]
				},
				{
					"id": 1513,
					"name": "getStorage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1514,
							"name": "getStorage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1515,
									"name": "idOrObj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "StoreObject"
											}
										]
									}
								},
								{
									"id": 1516,
									"name": "storeFieldNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "StorageType"
							}
						}
					]
				},
				{
					"id": 1470,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1471,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1472,
									"name": "dataId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1477,
					"name": "merge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1478,
							"name": "merge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1479,
									"name": "olderId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1480,
									"name": "newerObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1272,
										"name": "StoreObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 1481,
							"name": "merge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1482,
									"name": "olderObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1272,
										"name": "StoreObject"
									}
								},
								{
									"id": 1483,
									"name": "newerId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1484,
					"name": "modify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1485,
							"name": "modify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1486,
									"name": "dataId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1487,
									"name": "fields",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Modifiers"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Modifier"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1502,
					"name": "release",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1503,
							"name": "release",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1504,
									"name": "rootId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1496,
					"name": "replace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1497,
							"name": "replace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "replace the state of the store"
							},
							"parameters": [
								{
									"id": 1498,
									"name": "newData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1517,
										"name": "NormalizedCacheObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1499,
					"name": "retain",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1500,
							"name": "retain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retain (or release) a given root ID to protect (or expose) it and its\ntransitive child entities from (or to) garbage collection. The current\nretainment count is returned by both methods. Note that releasing a root\nID does not cause that entity to be garbage collected, but merely removes\nit from the set of root IDs that will be considered during the next\nmark-and-sweep collection."
							},
							"parameters": [
								{
									"id": 1501,
									"name": "rootId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1494,
					"name": "toObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1495,
							"name": "toObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "returns an Object with key-value pairs matching the contents of the store"
							},
							"type": {
								"type": "reference",
								"id": 1517,
								"name": "NormalizedCacheObject"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1512,
						1505,
						1511
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1492,
						1488,
						1473,
						1513,
						1470,
						1477,
						1484,
						1502,
						1496,
						1499,
						1494
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 40,
					"character": 17
				}
			]
		},
		{
			"id": 1517,
			"name": "NormalizedCacheObject",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "This is a normalized representation of the Apollo query result cache. It consists of\na flattened representation of query result trees."
			},
			"children": [
				{
					"id": 1518,
					"name": "__META",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1519,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1520,
									"name": "extraRootIds",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/cache/inmemory/types.ts",
											"line": 97,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1520
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1518
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 89,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 1521,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 1522,
						"name": "dataId",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 1272,
							"name": "StoreObject"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				}
			}
		},
		{
			"id": 1262,
			"name": "ObservableSubscription",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 1263,
					"name": "closed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/zen-observable-ts/module.d.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1264,
					"name": "unsubscribe",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1265,
							"name": "unsubscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1263
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1264
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/zen-observable-ts/module.d.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 1249,
			"name": "Observer",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 1259,
					"name": "complete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 1260,
							"name": "complete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1256,
					"name": "error",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 1257,
							"name": "error",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1258,
									"name": "errorValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1253,
					"name": "next",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 1254,
							"name": "next",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1255,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1261,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1250,
					"name": "start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 1251,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1252,
									"name": "subscription",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1262,
										"name": "Subscription"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1259,
						1256,
						1253,
						1250
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/zen-observable-ts/module.d.ts",
					"line": 13,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1261,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					}
				}
			]
		},
		{
			"id": 2240,
			"name": "OnSubscriptionDataOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2241,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 197,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					}
				},
				{
					"id": 2242,
					"name": "subscriptionData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 198,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2261,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2243,
								"name": "TData"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "SubscriptionResult"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2241,
						2242
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 196,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2243,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1637,
			"name": "Operation",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1641,
					"name": "extensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 1640,
					"name": "operationName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1638,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1627,
						"name": "DocumentNode"
					}
				},
				{
					"id": 1639,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 1645,
					"name": "getContext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 20,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1646,
							"name": "getContext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							}
						}
					]
				},
				{
					"id": 1642,
					"name": "setContext",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 19,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1643,
							"name": "setContext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1644,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1641,
						1640,
						1638,
						1639
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1645,
						1642
					]
				}
			],
			"sources": [
				{
					"fileName": "src/link/core/types.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 1985,
			"name": "QueryDataOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2012,
					"name": "canonizeResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1921,
						"name": "QueryFunctionOptions.canonizeResults"
					}
				},
				{
					"id": 1999,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1908,
						"name": "QueryFunctionOptions.client"
					}
				},
				{
					"id": 2000,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1909,
						"name": "QueryFunctionOptions.context"
					}
				},
				{
					"id": 1990,
					"name": "displayName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1899,
						"name": "QueryFunctionOptions.displayName"
					}
				},
				{
					"id": 2007,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1916,
						"name": "QueryFunctionOptions.errorPolicy"
					}
				},
				{
					"id": 2002,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used for this query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 122,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 435,
						"name": "WatchQueryFetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1911,
						"name": "QueryFunctionOptions.fetchPolicy"
					}
				},
				{
					"id": 2003,
					"name": "nextFetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used after this query has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 435,
								"name": "WatchQueryFetchPolicy"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2004,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2005,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2006,
													"name": "lastFetchPolicy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 435,
														"name": "WatchQueryFetchPolicy"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 435,
												"name": "WatchQueryFetchPolicy"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1912,
						"name": "QueryFunctionOptions.nextFetchPolicy"
					}
				},
				{
					"id": 2009,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not updates to the network status should trigger next on the observer of this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1918,
						"name": "QueryFunctionOptions.notifyOnNetworkStatusChange"
					}
				},
				{
					"id": 2011,
					"name": "partialRefetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, perform a query `refetch` if the query result is marked as\nbeing partial, and the returned data is reset to an empty Object by the\nApollo Client `QueryManager` (due to a cache miss)."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1920,
						"name": "QueryFunctionOptions.partialRefetch"
					}
				},
				{
					"id": 2008,
					"name": "pollInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The time interval (in milliseconds) on which this query should be\nrefetched from the server."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1917,
						"name": "QueryFunctionOptions.pollInterval"
					}
				},
				{
					"id": 1989,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2014,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 2015,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 2013,
					"name": "refetchWritePolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies whether a {@link NetworkStatus.refetch} operation should merge\nincoming field data with existing data, or overwrite the existing data.\nOverwriting is probably preferable, but merging is currently the default\nbehavior, for backwards compatibility with Apollo Client 3.x."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 136,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "RefetchWritePolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1922,
						"name": "QueryFunctionOptions.refetchWritePolicy"
					}
				},
				{
					"id": 2010,
					"name": "returnPartialData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Allow returning incomplete data from the cache when a larger query cannot\nbe fully satisfied by the cache, instead of returning nothing."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 97,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1919,
						"name": "QueryFunctionOptions.returnPartialData"
					}
				},
				{
					"id": 1991,
					"name": "skip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 46,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1900,
						"name": "QueryFunctionOptions.skip"
					}
				},
				{
					"id": 1998,
					"name": "ssr",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1907,
						"name": "QueryFunctionOptions.ssr"
					}
				},
				{
					"id": 2001,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2015,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1910,
						"name": "QueryFunctionOptions.variables"
					}
				},
				{
					"id": 1986,
					"name": "children",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 86,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1987,
							"name": "children",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1988,
									"name": "result",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1940,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2014,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 2015,
												"name": "TVariables"
											}
										],
										"name": "QueryResult"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNode"
							}
						}
					]
				},
				{
					"id": 1992,
					"name": "onCompleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 47,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1993,
							"name": "onCompleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1994,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1923,
										"name": "TData"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "QueryFunctionOptions.onCompleted"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1901,
						"name": "QueryFunctionOptions.onCompleted"
					}
				},
				{
					"id": 1995,
					"name": "onError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1996,
							"name": "onError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1997,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "ApolloError"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "QueryFunctionOptions.onError"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1904,
						"name": "QueryFunctionOptions.onError"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2012,
						1999,
						2000,
						1990,
						2007,
						2002,
						2003,
						2009,
						2011,
						2008,
						1989,
						2013,
						2010,
						1991,
						1998,
						2001
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1986,
						1992,
						1995
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 84,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2014,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2015,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1898,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2014,
							"name": "TData"
						},
						{
							"type": "reference",
							"id": 2015,
							"name": "TVariables"
						}
					],
					"name": "QueryFunctionOptions"
				}
			]
		},
		{
			"id": 1898,
			"name": "QueryFunctionOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1921,
					"name": "canonizeResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1895,
						"name": "BaseQueryOptions.canonizeResults"
					}
				},
				{
					"id": 1908,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1882,
						"name": "BaseQueryOptions.client"
					}
				},
				{
					"id": 1909,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1883,
						"name": "BaseQueryOptions.context"
					}
				},
				{
					"id": 1899,
					"name": "displayName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1916,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1890,
						"name": "BaseQueryOptions.errorPolicy"
					}
				},
				{
					"id": 1911,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used for this query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 122,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 435,
						"name": "WatchQueryFetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1885,
						"name": "BaseQueryOptions.fetchPolicy"
					}
				},
				{
					"id": 1912,
					"name": "nextFetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used after this query has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 435,
								"name": "WatchQueryFetchPolicy"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1913,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1914,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1915,
													"name": "lastFetchPolicy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 435,
														"name": "WatchQueryFetchPolicy"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 435,
												"name": "WatchQueryFetchPolicy"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1886,
						"name": "BaseQueryOptions.nextFetchPolicy"
					}
				},
				{
					"id": 1918,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not updates to the network status should trigger next on the observer of this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1892,
						"name": "BaseQueryOptions.notifyOnNetworkStatusChange"
					}
				},
				{
					"id": 1920,
					"name": "partialRefetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, perform a query `refetch` if the query result is marked as\nbeing partial, and the returned data is reset to an empty Object by the\nApollo Client `QueryManager` (due to a cache miss)."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1894,
						"name": "BaseQueryOptions.partialRefetch"
					}
				},
				{
					"id": 1917,
					"name": "pollInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The time interval (in milliseconds) on which this query should be\nrefetched from the server."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1891,
						"name": "BaseQueryOptions.pollInterval"
					}
				},
				{
					"id": 1922,
					"name": "refetchWritePolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies whether a {@link NetworkStatus.refetch} operation should merge\nincoming field data with existing data, or overwrite the existing data.\nOverwriting is probably preferable, but merging is currently the default\nbehavior, for backwards compatibility with Apollo Client 3.x."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 136,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "RefetchWritePolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1896,
						"name": "BaseQueryOptions.refetchWritePolicy"
					}
				},
				{
					"id": 1919,
					"name": "returnPartialData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Allow returning incomplete data from the cache when a larger query cannot\nbe fully satisfied by the cache, instead of returning nothing."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 97,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1893,
						"name": "BaseQueryOptions.returnPartialData"
					}
				},
				{
					"id": 1900,
					"name": "skip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 46,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1907,
					"name": "ssr",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1881,
						"name": "BaseQueryOptions.ssr"
					}
				},
				{
					"id": 1910,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1924,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1884,
						"name": "BaseQueryOptions.variables"
					}
				},
				{
					"id": 1901,
					"name": "onCompleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 47,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1902,
							"name": "onCompleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1903,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1923,
										"name": "TData"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1904,
					"name": "onError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1905,
							"name": "onError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1906,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "ApolloError"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1921,
						1908,
						1909,
						1899,
						1916,
						1911,
						1912,
						1918,
						1920,
						1917,
						1922,
						1919,
						1900,
						1907,
						1910
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1901,
						1904
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 41,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1923,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1924,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1880,
					"typeArguments": [
						{
							"type": "reference",
							"id": 1924,
							"name": "TVariables"
						}
					],
					"name": "BaseQueryOptions"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1985,
					"name": "QueryDataOptions"
				},
				{
					"type": "reference",
					"id": 2016,
					"name": "QueryHookOptions"
				}
			]
		},
		{
			"id": 2016,
			"name": "QueryHookOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2040,
					"name": "canonizeResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1921,
						"name": "QueryFunctionOptions.canonizeResults"
					}
				},
				{
					"id": 2027,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1908,
						"name": "QueryFunctionOptions.client"
					}
				},
				{
					"id": 2028,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1909,
						"name": "QueryFunctionOptions.context"
					}
				},
				{
					"id": 2018,
					"name": "displayName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1899,
						"name": "QueryFunctionOptions.displayName"
					}
				},
				{
					"id": 2035,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1916,
						"name": "QueryFunctionOptions.errorPolicy"
					}
				},
				{
					"id": 2030,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used for this query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 122,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 435,
						"name": "WatchQueryFetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1911,
						"name": "QueryFunctionOptions.fetchPolicy"
					}
				},
				{
					"id": 2031,
					"name": "nextFetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used after this query has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 435,
								"name": "WatchQueryFetchPolicy"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2032,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2033,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2034,
													"name": "lastFetchPolicy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 435,
														"name": "WatchQueryFetchPolicy"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 435,
												"name": "WatchQueryFetchPolicy"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1912,
						"name": "QueryFunctionOptions.nextFetchPolicy"
					}
				},
				{
					"id": 2037,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not updates to the network status should trigger next on the observer of this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1918,
						"name": "QueryFunctionOptions.notifyOnNetworkStatusChange"
					}
				},
				{
					"id": 2039,
					"name": "partialRefetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, perform a query `refetch` if the query result is marked as\nbeing partial, and the returned data is reset to an empty Object by the\nApollo Client `QueryManager` (due to a cache miss)."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1920,
						"name": "QueryFunctionOptions.partialRefetch"
					}
				},
				{
					"id": 2036,
					"name": "pollInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The time interval (in milliseconds) on which this query should be\nrefetched from the server."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1917,
						"name": "QueryFunctionOptions.pollInterval"
					}
				},
				{
					"id": 2017,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 92,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2042,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 2043,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 2041,
					"name": "refetchWritePolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies whether a {@link NetworkStatus.refetch} operation should merge\nincoming field data with existing data, or overwrite the existing data.\nOverwriting is probably preferable, but merging is currently the default\nbehavior, for backwards compatibility with Apollo Client 3.x."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 136,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "RefetchWritePolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1922,
						"name": "QueryFunctionOptions.refetchWritePolicy"
					}
				},
				{
					"id": 2038,
					"name": "returnPartialData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Allow returning incomplete data from the cache when a larger query cannot\nbe fully satisfied by the cache, instead of returning nothing."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 97,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1919,
						"name": "QueryFunctionOptions.returnPartialData"
					}
				},
				{
					"id": 2019,
					"name": "skip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 46,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1900,
						"name": "QueryFunctionOptions.skip"
					}
				},
				{
					"id": 2026,
					"name": "ssr",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1907,
						"name": "QueryFunctionOptions.ssr"
					}
				},
				{
					"id": 2029,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2043,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1910,
						"name": "QueryFunctionOptions.variables"
					}
				},
				{
					"id": 2020,
					"name": "onCompleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 47,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2021,
							"name": "onCompleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2022,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1923,
										"name": "TData"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1902,
								"name": "QueryFunctionOptions.onCompleted"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1901,
						"name": "QueryFunctionOptions.onCompleted"
					}
				},
				{
					"id": 2023,
					"name": "onError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2024,
							"name": "onError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2025,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 482,
										"name": "ApolloError"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1905,
								"name": "QueryFunctionOptions.onError"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1904,
						"name": "QueryFunctionOptions.onError"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2040,
						2027,
						2028,
						2018,
						2035,
						2030,
						2031,
						2037,
						2039,
						2036,
						2017,
						2041,
						2038,
						2019,
						2026,
						2029
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2020,
						2023
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 90,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2042,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2043,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1898,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2042,
							"name": "TData"
						},
						{
							"type": "reference",
							"id": 2043,
							"name": "TVariables"
						}
					],
					"name": "QueryFunctionOptions"
				}
			]
		},
		{
			"id": 2071,
			"name": "QueryLazyOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2073,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					}
				},
				{
					"id": 2072,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 103,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2074,
						"name": "TVariables"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2073,
						2072
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 102,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2074,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 372,
			"name": "QueryOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Query options."
			},
			"children": [
				{
					"id": 382,
					"name": "canonizeResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 376,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Context to be passed to link execution chain"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 375,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					}
				},
				{
					"id": 377,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used for this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 434,
						"name": "FetchPolicy"
					}
				},
				{
					"id": 379,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not updates to the network status should trigger next on the observer of this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 381,
					"name": "partialRefetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, perform a query `refetch` if the query result is marked as\nbeing partial, and the returned data is reset to an empty Object by the\nApollo Client `QueryManager` (due to a cache miss)."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 378,
					"name": "pollInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The time interval (in milliseconds) on which this query should be\nrefetched from the server."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 373,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A GraphQL document that consists of a single query to be sent down to the\nserver."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 59,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 384,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 383,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 380,
					"name": "returnPartialData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Allow returning incomplete data from the cache when a larger query cannot\nbe fully satisfied by the cache, instead of returning nothing."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 97,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 374,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 383,
						"name": "TVariables"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						382,
						376,
						375,
						377,
						379,
						381,
						378,
						373,
						380,
						374
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/watchQueryOptions.ts",
					"line": 52,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 383,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				},
				{
					"id": 384,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1940,
			"name": "QueryResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1947,
					"name": "called",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": true
					}
				},
				{
					"id": 1941,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloClient"
					}
				},
				{
					"id": 1942,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 76,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1983,
								"name": "TData"
							}
						]
					}
				},
				{
					"id": 1944,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 78,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 482,
						"name": "ApolloError"
					}
				},
				{
					"id": 1972,
					"name": "fetchMore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1973,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1974,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1975,
													"name": "fetchMoreOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 437,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1984,
																		"name": "TVariables"
																	},
																	{
																		"type": "reference",
																		"id": 1983,
																		"name": "TData"
																	}
																],
																"name": "FetchMoreQueryOptions"
															},
															{
																"type": "reference",
																"id": 354,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1983,
																		"name": "TData"
																	},
																	{
																		"type": "reference",
																		"id": 1984,
																		"name": "TVariables"
																	}
																],
																"name": "FetchMoreOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1389,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1983,
																"name": "TData"
															}
														],
														"name": "ApolloQueryResult"
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1976,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1977,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"typeParameter": [
												{
													"id": 1978,
													"name": "TData2",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {}
												},
												{
													"id": 1979,
													"name": "TVariables2",
													"kind": 131072,
													"kindString": "Type parameter",
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 1980,
													"name": "fetchMoreOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 1981,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 1982,
																			"name": "query",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/react/types/types.ts",
																					"line": 65,
																					"character": 26
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"id": 1627,
																						"name": "DocumentNode"
																					},
																					{
																						"type": "reference",
																						"id": 1302,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"id": 1983,
																								"name": "TData"
																							},
																							{
																								"type": "reference",
																								"id": 1984,
																								"name": "TVariables"
																							}
																						],
																						"name": "TypedDocumentNode"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				1982
																			]
																		}
																	]
																}
															},
															{
																"type": "reference",
																"id": 437,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1937,
																		"name": "TVariables2"
																	},
																	{
																		"type": "reference",
																		"id": 1983,
																		"name": "TData"
																	}
																],
																"name": "FetchMoreQueryOptions"
															},
															{
																"type": "reference",
																"id": 354,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1936,
																		"name": "TData2"
																	},
																	{
																		"type": "reference",
																		"id": 1937,
																		"name": "TVariables2"
																	}
																],
																"name": "FetchMoreOptions"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1389,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1936,
																"name": "TData2"
															}
														],
														"name": "ApolloQueryResult"
													}
												],
												"name": "Promise"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ObservableQueryFields.fetchMore"
					}
				},
				{
					"id": 1945,
					"name": "loading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1946,
					"name": "networkStatus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 455,
						"name": "NetworkStatus"
					}
				},
				{
					"id": 1943,
					"name": "previousData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 77,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1983,
						"name": "TData"
					}
				},
				{
					"id": 1948,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1984,
								"name": "TVariables"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ObservableQueryFields.variables"
					}
				},
				{
					"id": 1969,
					"name": "refetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 319,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1970,
							"name": "refetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Update the variables of this observable query, and fetch the new results.\nThis method should be preferred over `setVariables` in most use cases."
							},
							"parameters": [
								{
									"id": 1971,
									"name": "variables",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1984,
												"name": "TVariables"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1389,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1983,
												"name": "TData"
											}
										],
										"name": "ApolloQueryResult"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ObservableQueryFields.refetch"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ObservableQueryFields.refetch"
					}
				},
				{
					"id": 1949,
					"name": "startPolling",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 574,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1950,
							"name": "startPolling",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1951,
									"name": "pollInterval",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ObservableQueryFields.startPolling"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ObservableQueryFields.startPolling"
					}
				},
				{
					"id": 1952,
					"name": "stopPolling",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 579,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1953,
							"name": "stopPolling",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ObservableQueryFields.stopPolling"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ObservableQueryFields.stopPolling"
					}
				},
				{
					"id": 1954,
					"name": "subscribeToMore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 445,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1955,
							"name": "subscribeToMore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 1956,
									"name": "TSubscriptionData",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1983,
										"name": "TData"
									}
								},
								{
									"id": 1957,
									"name": "TSubscriptionVariables",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1984,
										"name": "TVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 1958,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 443,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1983,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 232,
												"name": "TSubscriptionVariables"
											},
											{
												"type": "reference",
												"id": 231,
												"name": "TSubscriptionData"
											}
										],
										"name": "SubscribeToMoreOptions"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1959,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1960,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ObservableQueryFields.subscribeToMore"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ObservableQueryFields.subscribeToMore"
					}
				},
				{
					"id": 1961,
					"name": "updateQuery",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 545,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1962,
							"name": "updateQuery",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 1963,
									"name": "TVars",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 1984,
										"name": "TVariables"
									}
								}
							],
							"parameters": [
								{
									"id": 1964,
									"name": "mapFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1965,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1966,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1967,
															"name": "previousQueryResult",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 1983,
																"name": "TData"
															}
														},
														{
															"id": 1968,
															"name": "options",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 385,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 244,
																				"name": "TVars"
																			},
																			{
																				"type": "reference",
																				"id": 1983,
																				"name": "TData"
																			}
																		],
																		"name": "WatchQueryOptions"
																	},
																	{
																		"type": "literal",
																		"value": "variables"
																	}
																],
																"name": "Pick"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 1983,
														"name": "TData"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ObservableQueryFields.updateQuery"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ObservableQueryFields.updateQuery"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1947,
						1941,
						1942,
						1944,
						1972,
						1945,
						1946,
						1943,
						1948
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1969,
						1949,
						1952,
						1954,
						1961
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 73,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1983,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1984,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1925,
					"typeArguments": [
						{
							"type": "reference",
							"id": 1983,
							"name": "TData"
						},
						{
							"type": "reference",
							"id": 1984,
							"name": "TVariables"
						}
					],
					"name": "ObservableQueryFields"
				}
			]
		},
		{
			"id": 1055,
			"name": "ReactiveVar",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1061,
					"name": "attachCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1062,
							"name": "attachCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1063,
									"name": "cache",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 662,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ApolloCache"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1055,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1067,
										"name": "T"
									}
								],
								"name": "ReactiveVar"
							}
						}
					]
				},
				{
					"id": 1064,
					"name": "forgetCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1065,
							"name": "forgetCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1066,
									"name": "cache",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 662,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ApolloCache"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1056,
					"name": "onNextChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 1057,
							"name": "onNextChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1058,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1067,
												"name": "T"
											}
										],
										"name": "ReactiveListener"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1059,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1060,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1061,
						1064,
						1056
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/inmemory/reactiveVars.ts",
					"line": 6,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1067,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"signatures": [
				{
					"id": 1068,
					"name": "ReactiveVar",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1069,
							"name": "newValue",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 1067,
								"name": "T"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1067,
						"name": "T"
					}
				}
			]
		},
		{
			"id": 1551,
			"name": "ReadMergeModifyContext",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1552,
					"name": "store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 147,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1469,
						"name": "NormalizedCache"
					}
				},
				{
					"id": 1554,
					"name": "varString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 150,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1553,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 148,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1552,
						1554,
						1553
					]
				}
			],
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 146,
					"character": 17
				}
			]
		},
		{
			"id": 1266,
			"name": "Reference",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1267,
					"name": "__ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/utilities/graphql/storeUtils.ts",
							"line": 27,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1267
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utilities/graphql/storeUtils.ts",
					"line": 26,
					"character": 17
				}
			]
		},
		{
			"id": 1333,
			"name": "RefetchQueriesOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1337,
					"name": "include",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1331,
						"name": "RefetchQueriesInclude"
					}
				},
				{
					"id": 1339,
					"name": "onQueryUpdated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"id": 1322,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1341,
										"name": "TResult"
									}
								],
								"name": "OnQueryUpdated"
							}
						]
					}
				},
				{
					"id": 1338,
					"name": "optimistic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1334,
					"name": "updateCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 45,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1335,
							"name": "updateCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1336,
									"name": "cache",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1340,
										"name": "TCache"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1337,
						1339,
						1338
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1334
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 41,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1340,
					"name": "TCache",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					}
				},
				{
					"id": 1341,
					"name": "TResult",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 1344,
			"name": "RefetchQueriesResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1371,
					"name": "[toStringTag]",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 174,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Promise.__@toStringTag@3200"
					}
				},
				{
					"id": 1345,
					"name": "queries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 154,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "reference",
									"id": 1388,
									"name": "OperationVariables"
								}
							],
							"name": "ObservableQuery"
						}
					}
				},
				{
					"id": 1346,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 99,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 1383,
							"typeArguments": [
								{
									"type": "reference",
									"id": 1372,
									"name": "TResult"
								}
							],
							"name": "InternalRefetchQueriesResult"
						}
					}
				},
				{
					"id": 1359,
					"name": "catch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1360,
							"name": "catch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attaches a callback for only the rejection of the Promise.",
								"returns": "A Promise for the completion of the callback.\n"
							},
							"typeParameter": [
								{
									"id": 1361,
									"name": "TResult",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 1362,
									"name": "onrejected",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "The callback to execute when the Promise is rejected."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1363,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 1364,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 1365,
																	"name": "reason",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 1361,
																		"name": "TResult"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1361,
																				"name": "TResult"
																			}
																		],
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1342,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1372,
														"name": "TResult"
													}
												],
												"name": "RefetchQueriesPromiseResults"
											},
											{
												"type": "reference",
												"id": 1361,
												"name": "TResult"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Promise.catch"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Promise.catch"
					}
				},
				{
					"id": 1366,
					"name": "finally",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1367,
							"name": "finally",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\nresolved value cannot be modified from the callback.",
								"returns": "A Promise for the completion of the callback.\n"
							},
							"parameters": [
								{
									"id": 1368,
									"name": "onfinally",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "The callback to execute when the Promise is settled (fulfilled or rejected)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1369,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 1370,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1342,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1372,
												"name": "TResult"
											}
										],
										"name": "RefetchQueriesPromiseResults"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Promise.finally"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Promise.finally"
					}
				},
				{
					"id": 1347,
					"name": "then",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1348,
							"name": "then",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attaches callbacks for the resolution and/or rejection of the Promise.",
								"returns": "A Promise for the completion of which ever callback is executed.\n"
							},
							"typeParameter": [
								{
									"id": 1349,
									"name": "TResult1",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reference",
										"id": 1342,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1372,
												"name": "TResult"
											}
										],
										"name": "RefetchQueriesPromiseResults"
									}
								},
								{
									"id": 1350,
									"name": "TResult2",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 1351,
									"name": "onfulfilled",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "The callback to execute when the Promise is resolved."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1352,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 1353,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 1354,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 1342,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1372,
																				"name": "TResult"
																			}
																		],
																		"name": "RefetchQueriesPromiseResults"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 1349,
																		"name": "TResult1"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1349,
																				"name": "TResult1"
																			}
																		],
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 1355,
									"name": "onrejected",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "The callback to execute when the Promise is rejected."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1356,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 1357,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 1358,
																	"name": "reason",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 1350,
																		"name": "TResult2"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1350,
																				"name": "TResult2"
																			}
																		],
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1349,
												"name": "TResult1"
											},
											{
												"type": "reference",
												"id": 1350,
												"name": "TResult2"
											}
										]
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Promise.then"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Promise.then"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1371,
						1345,
						1346
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1359,
						1366,
						1347
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 91,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1372,
					"name": "TResult",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1342,
							"typeArguments": [
								{
									"type": "reference",
									"id": 1372,
									"name": "TResult"
								}
							],
							"name": "RefetchQueriesPromiseResults"
						}
					],
					"name": "Promise"
				}
			]
		},
		{
			"id": 1438,
			"name": "Resolvers",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 183,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 1439,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 1440,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 1441,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {},
						"sources": [
							{
								"fileName": "src/core/types.ts",
								"line": 184,
								"character": 17
							}
						],
						"indexSignature": {
							"id": 1442,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 1443,
									"name": "field",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 463,
								"name": "Resolver"
							}
						}
					}
				}
			}
		},
		{
			"id": 1272,
			"name": "StoreObject",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1273,
					"name": "__typename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utilities/graphql/storeUtils.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1273
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utilities/graphql/storeUtils.ts",
					"line": 49,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 1274,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 1275,
						"name": "storeFieldName",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reference",
					"id": 1444,
					"name": "StoreValue"
				}
			}
		},
		{
			"id": 2308,
			"name": "SubscriptionCurrentObservable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2309,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 242,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1156,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Observable"
					}
				},
				{
					"id": 2310,
					"name": "subscription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 243,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1262,
						"name": "Subscription"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2309,
						2310
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 241,
					"character": 17
				}
			]
		},
		{
			"id": 2286,
			"name": "SubscriptionDataOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2288,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 238,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2289,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2290,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2291,
													"name": "result",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2261,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2306,
																"name": "TData"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "SubscriptionResult"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"name": "Element"
													}
												]
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2298,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 210,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2251,
						"name": "BaseSubscriptionOptions.client"
					}
				},
				{
					"id": 2300,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 212,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2253,
						"name": "BaseSubscriptionOptions.context"
					}
				},
				{
					"id": 2293,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 206,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 434,
						"name": "FetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2246,
						"name": "BaseSubscriptionOptions.fetchPolicy"
					}
				},
				{
					"id": 2294,
					"name": "shouldResubscribe",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 207,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2295,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2296,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2297,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2244,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2306,
																"name": "TData"
															},
															{
																"type": "reference",
																"id": 2307,
																"name": "TVariables"
															}
														],
														"name": "BaseSubscriptionOptions"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2247,
						"name": "BaseSubscriptionOptions.shouldResubscribe"
					}
				},
				{
					"id": 2299,
					"name": "skip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 211,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2252,
						"name": "BaseSubscriptionOptions.skip"
					}
				},
				{
					"id": 2287,
					"name": "subscription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 237,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2306,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 2307,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 2292,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 205,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2307,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2245,
						"name": "BaseSubscriptionOptions.variables"
					}
				},
				{
					"id": 2304,
					"name": "onSubscriptionComplete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 214,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2305,
							"name": "onSubscriptionComplete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2258,
								"name": "BaseSubscriptionOptions.onSubscriptionComplete"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2257,
						"name": "BaseSubscriptionOptions.onSubscriptionComplete"
					}
				},
				{
					"id": 2301,
					"name": "onSubscriptionData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 213,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2302,
							"name": "onSubscriptionData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2303,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2240,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2259,
												"name": "TData"
											}
										],
										"name": "OnSubscriptionDataOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2255,
								"name": "BaseSubscriptionOptions.onSubscriptionData"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2254,
						"name": "BaseSubscriptionOptions.onSubscriptionData"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2288,
						2298,
						2300,
						2293,
						2294,
						2299,
						2287,
						2292
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2304,
						2301
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 233,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2306,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2307,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2244,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2306,
							"name": "TData"
						},
						{
							"type": "reference",
							"id": 2307,
							"name": "TVariables"
						}
					],
					"name": "BaseSubscriptionOptions"
				}
			]
		},
		{
			"id": 2268,
			"name": "SubscriptionHookOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2276,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 210,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2251,
						"name": "BaseSubscriptionOptions.client"
					}
				},
				{
					"id": 2278,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 212,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2253,
						"name": "BaseSubscriptionOptions.context"
					}
				},
				{
					"id": 2271,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 206,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 434,
						"name": "FetchPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2246,
						"name": "BaseSubscriptionOptions.fetchPolicy"
					}
				},
				{
					"id": 2272,
					"name": "shouldResubscribe",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 207,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2273,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2274,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2275,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 2244,
														"typeArguments": [
															{
																"type": "reference",
																"id": 2284,
																"name": "TData"
															},
															{
																"type": "reference",
																"id": 2285,
																"name": "TVariables"
															}
														],
														"name": "BaseSubscriptionOptions"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2247,
						"name": "BaseSubscriptionOptions.shouldResubscribe"
					}
				},
				{
					"id": 2277,
					"name": "skip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 211,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2252,
						"name": "BaseSubscriptionOptions.skip"
					}
				},
				{
					"id": 2269,
					"name": "subscription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 230,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2284,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 2285,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 2270,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 205,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2285,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2245,
						"name": "BaseSubscriptionOptions.variables"
					}
				},
				{
					"id": 2282,
					"name": "onSubscriptionComplete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 214,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2283,
							"name": "onSubscriptionComplete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2258,
								"name": "BaseSubscriptionOptions.onSubscriptionComplete"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2257,
						"name": "BaseSubscriptionOptions.onSubscriptionComplete"
					}
				},
				{
					"id": 2279,
					"name": "onSubscriptionData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 213,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 2280,
							"name": "onSubscriptionData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2281,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2240,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2259,
												"name": "TData"
											}
										],
										"name": "OnSubscriptionDataOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2255,
								"name": "BaseSubscriptionOptions.onSubscriptionData"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2254,
						"name": "BaseSubscriptionOptions.onSubscriptionData"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2276,
						2278,
						2271,
						2272,
						2277,
						2269,
						2270
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2282,
						2279
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 226,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2284,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2285,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2244,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2284,
							"name": "TData"
						},
						{
							"type": "reference",
							"id": 2285,
							"name": "TVariables"
						}
					],
					"name": "BaseSubscriptionOptions"
				}
			]
		},
		{
			"id": 426,
			"name": "SubscriptionOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 431,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Context object to be passed through the link execution chain."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 195,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					}
				},
				{
					"id": 430,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this operation"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 190,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					}
				},
				{
					"id": 429,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used for this subscription."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 185,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 434,
						"name": "FetchPolicy"
					}
				},
				{
					"id": 427,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A GraphQL document, often created with `gql` from the `graphql-tag`\npackage, that contains a single subscription inside of it."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 174,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 433,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 432,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					}
				},
				{
					"id": 428,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An object that maps from the name of a variable as used in the subscription\nGraphQL document to that variable's value."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 180,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 432,
						"name": "TVariables"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						431,
						430,
						429,
						427,
						428
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/watchQueryOptions.ts",
					"line": 169,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 432,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				},
				{
					"id": 433,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 2261,
			"name": "SubscriptionResult",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2263,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2266,
						"name": "TData"
					}
				},
				{
					"id": 2264,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 220,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 482,
						"name": "ApolloError"
					}
				},
				{
					"id": 2262,
					"name": "loading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 218,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2265,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 223,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 2267,
						"name": "TVariables"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2263,
						2264,
						2262,
						2265
					]
				}
			],
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 217,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 2266,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2267,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1302,
			"name": "TypedDocumentNode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 1308,
					"name": "definitions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql/language/ast.d.ts",
							"line": 164,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "DefinitionNode"
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1630,
						"name": "DocumentNode.definitions"
					}
				},
				{
					"id": 1306,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql/language/ast.d.ts",
							"line": 162,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "DOCUMENT"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1628,
						"name": "DocumentNode.kind"
					}
				},
				{
					"id": 1307,
					"name": "loc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/graphql/language/ast.d.ts",
							"line": 163,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "Location"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1629,
						"name": "DocumentNode.loc"
					}
				},
				{
					"id": 1303,
					"name": "__apiType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@graphql-typed-document-node/core/dist/index.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1304,
							"name": "__apiType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "This type is used to ensure that the variables you pass in to the query are assignable to Variables\nand that the Result is assignable to whatever you pass your result to. The method is never actually\nimplemented, but the type is valid because we list it as optional"
							},
							"parameters": [
								{
									"id": 1305,
									"name": "variables",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1316,
										"name": "Variables"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1312,
								"name": "Result"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1308,
						1306,
						1307
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1303
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@graphql-typed-document-node/core/dist/index.d.ts",
					"line": 2,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 1312,
					"name": "Result",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					},
					"default": {
						"type": "reflection",
						"declaration": {
							"id": 1309,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@graphql-typed-document-node/core/dist/index.d.ts",
									"line": 2,
									"character": 44
								}
							],
							"indexSignature": {
								"id": 1310,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {
									"isExternal": true
								},
								"parameters": [
									{
										"id": 1311,
										"name": "key",
										"kind": 32768,
										"flags": {
											"isExternal": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				},
				{
					"id": 1316,
					"name": "Variables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					},
					"default": {
						"type": "reflection",
						"declaration": {
							"id": 1313,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@graphql-typed-document-node/core/dist/index.d.ts",
									"line": 4,
									"character": 15
								}
							],
							"indexSignature": {
								"id": 1314,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {
									"isExternal": true
								},
								"parameters": [
									{
										"id": 1315,
										"name": "key",
										"kind": 32768,
										"flags": {
											"isExternal": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1627,
					"name": "DocumentNode"
				}
			]
		},
		{
			"id": 364,
			"name": "UpdateQueryOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 365,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/ObservableQuery.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 366,
						"name": "TVariables"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						365
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/ObservableQuery.ts",
					"line": 50,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 366,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 1729,
			"name": "UriFunction",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
					"line": 9,
					"character": 17
				}
			],
			"signatures": [
				{
					"id": 1730,
					"name": "UriFunction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1731,
							"name": "operation",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1637,
								"name": "Operation"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 385,
			"name": "WatchQueryOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Watched query options."
			},
			"children": [
				{
					"id": 400,
					"name": "canonizeResults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether to canonize cache results before returning them. Canonization\ntakes some extra time, but it speeds up future deep equality comparisons.\nDefaults to false."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.canonizeResults"
					}
				},
				{
					"id": 395,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Context to be passed to link execution chain"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.context"
					}
				},
				{
					"id": 394,
					"name": "errorPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link ErrorPolicy} to be used for this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 436,
						"name": "ErrorPolicy"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.errorPolicy"
					}
				},
				{
					"id": 386,
					"name": "fetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used for this query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 122,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 435,
						"name": "WatchQueryFetchPolicy"
					}
				},
				{
					"id": 387,
					"name": "nextFetchPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the {@link FetchPolicy} to be used after this query has completed."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 435,
								"name": "WatchQueryFetchPolicy"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 388,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 389,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 390,
													"name": "lastFetchPolicy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 435,
														"name": "WatchQueryFetchPolicy"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 435,
												"name": "WatchQueryFetchPolicy"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 397,
					"name": "notifyOnNetworkStatusChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not updates to the network status should trigger next on the observer of this query"
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.notifyOnNetworkStatusChange"
					}
				},
				{
					"id": 399,
					"name": "partialRefetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, perform a query `refetch` if the query result is marked as\nbeing partial, and the returned data is reset to an empty Object by the\nApollo Client `QueryManager` (due to a cache miss)."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.partialRefetch"
					}
				},
				{
					"id": 396,
					"name": "pollInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The time interval (in milliseconds) on which this query should be\nrefetched from the server."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.pollInterval"
					}
				},
				{
					"id": 393,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A GraphQL document that consists of a single query to be sent down to the\nserver."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 59,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							},
							{
								"type": "reference",
								"id": 1302,
								"typeArguments": [
									{
										"type": "reference",
										"id": 402,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 401,
										"name": "TVariables"
									}
								],
								"name": "TypedDocumentNode"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.query"
					}
				},
				{
					"id": 391,
					"name": "refetchWritePolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies whether a {@link NetworkStatus.refetch} operation should merge\nincoming field data with existing data, or overwrite the existing data.\nOverwriting is probably preferable, but merging is currently the default\nbehavior, for backwards compatibility with Apollo Client 3.x."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 136,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "RefetchWritePolicy"
					}
				},
				{
					"id": 398,
					"name": "returnPartialData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Allow returning incomplete data from the cache when a larger query cannot\nbe fully satisfied by the cache, instead of returning nothing."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 97,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.returnPartialData"
					}
				},
				{
					"id": 392,
					"name": "variables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."
					},
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 401,
						"name": "TVariables"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.variables"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						400,
						395,
						394,
						386,
						387,
						397,
						399,
						396,
						393,
						391,
						398,
						392
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/watchQueryOptions.ts",
					"line": 117,
					"character": 17
				}
			],
			"typeParameter": [
				{
					"id": 401,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				},
				{
					"id": 402,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 372,
							"typeArguments": [
								{
									"type": "reference",
									"id": 401,
									"name": "TVariables"
								},
								{
									"type": "reference",
									"id": 402,
									"name": "TData"
								}
							],
							"name": "QueryOptions"
						},
						{
							"type": "literal",
							"value": "fetchPolicy"
						}
					],
					"name": "Omit"
				}
			]
		},
		{
			"id": 126,
			"name": "ApolloClientOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/ApolloClient.ts",
					"line": 46,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 144,
					"name": "TCacheShape",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 127,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 138,
							"name": "assumeImmutableResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 132,
							"name": "cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 662,
								"typeArguments": [
									{
										"type": "reference",
										"id": 144,
										"name": "TCacheShape"
									}
								],
								"name": "ApolloCache"
							}
						},
						{
							"id": 135,
							"name": "connectToDevTools",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 54,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 129,
							"name": "credentials",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 137,
							"name": "defaultOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 145,
								"name": "DefaultOptions"
							}
						},
						{
							"id": 141,
							"name": "fragmentMatcher",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 473,
								"name": "FragmentMatcher"
							}
						},
						{
							"id": 130,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 49,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record"
							}
						},
						{
							"id": 131,
							"name": "link",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 50,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							}
						},
						{
							"id": 142,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 136,
							"name": "queryDeduplication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 139,
							"name": "resolvers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 58,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1438,
										"name": "Resolvers"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1438,
											"name": "Resolvers"
										}
									}
								]
							}
						},
						{
							"id": 133,
							"name": "ssrForceFetchDelay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 52,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 134,
							"name": "ssrMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 140,
							"name": "typeDefs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1627,
											"name": "DocumentNode"
										}
									}
								]
							}
						},
						{
							"id": 128,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 1729,
										"name": "UriFunction"
									}
								]
							}
						},
						{
							"id": 143,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/ApolloClient.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								138,
								132,
								135,
								129,
								137,
								141,
								130,
								131,
								142,
								136,
								139,
								133,
								134,
								140,
								128,
								143
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/ApolloClient.ts",
							"line": 46,
							"character": 47
						}
					]
				}
			}
		},
		{
			"id": 1389,
			"name": "ApolloQueryResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 135,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1397,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1390,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1391,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/types.ts",
									"line": 136,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1397,
								"name": "T"
							}
						},
						{
							"id": 1393,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/types.ts",
									"line": 138,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 482,
								"name": "ApolloError"
							}
						},
						{
							"id": 1392,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/types.ts",
									"line": 137,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "GraphQLError"
									}
								],
								"name": "ReadonlyArray"
							}
						},
						{
							"id": 1394,
							"name": "loading",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/types.ts",
									"line": 139,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1395,
							"name": "networkStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/types.ts",
									"line": 140,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 455,
								"name": "NetworkStatus"
							}
						},
						{
							"id": 1396,
							"name": "partial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/types.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1391,
								1393,
								1392,
								1394,
								1395,
								1396
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 135,
							"character": 35
						}
					]
				}
			}
		},
		{
			"id": 1540,
			"name": "ApolloReducerConfig",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 122,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1541,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1543,
							"name": "addTypename",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 124,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1542,
							"name": "dataIdFromObject",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 123,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "KeyFieldsFunction"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1543,
								1542
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 122,
							"character": 34
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"id": 1032,
					"name": "InMemoryCacheConfig"
				}
			]
		},
		{
			"id": 1679,
			"name": "ClientParseError",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/http/serializeFetchParameter.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "InvariantError"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1680,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1681,
									"name": "parseError",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/link/http/serializeFetchParameter.ts",
											"line": 4,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"name": "Error"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1681
									]
								}
							],
							"sources": [
								{
									"fileName": "src/link/http/serializeFetchParameter.ts",
									"line": 3,
									"character": 48
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1876,
			"name": "CommonOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 28,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1879,
					"name": "TOptions",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 1879,
						"name": "TOptions"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1877,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1878,
									"name": "client",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/react/types/types.ts",
											"line": 29,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"id": 1,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "object"
											}
										],
										"name": "ApolloClient"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1878
									]
								}
							],
							"sources": [
								{
									"fileName": "src/react/types/types.ts",
									"line": 28,
									"character": 49
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1317,
			"name": "DefaultContext",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 16,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "any"
					}
				],
				"name": "Record"
			}
		},
		{
			"id": 1537,
			"name": "DiffQueryAgainstStoreOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 118,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 1528,
						"name": "ReadQueryOptions"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1538,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1539,
									"name": "returnPartialData",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/cache/inmemory/types.ts",
											"line": 119,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1539
									]
								}
							],
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 118,
									"character": 62
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 436,
			"name": "ErrorPolicy",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "errorPolicy determines the level of events for errors in the execution result. The options are:\n- none (default): any errors from the request are treated like runtime errors and the observable is stopped (XXX this is default to lower breaking changes going from AC 1.0 => 2.0)\n- ignore: errors from the request do not stop the observable, but also don't call `next`\n- all: errors are treated like data and will notify observables"
			},
			"sources": [
				{
					"fileName": "src/core/watchQueryOptions.ts",
					"line": 47,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "none"
					},
					{
						"type": "literal",
						"value": "ignore"
					},
					{
						"type": "literal",
						"value": "all"
					}
				]
			}
		},
		{
			"id": 434,
			"name": "FetchPolicy",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "fetchPolicy determines where the client may return a result from. The options are:\n- cache-first (default): return result from cache. Only fetch from network if cached result is not available.\n- cache-and-network: return result from cache first (if it exists), then return network result once it's available.\n- cache-only: return result from cache if available, fail otherwise.\n- no-cache: return result from network, fail if network call doesn't succeed, don't save to cache\n- network-only: return result from network, fail if network call doesn't succeed, save to cache\n- standby: only for queries that aren't actively watched, but should be available for refetch and updateQueries."
			},
			"sources": [
				{
					"fileName": "src/core/watchQueryOptions.ts",
					"line": 24,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "cache-first"
					},
					{
						"type": "literal",
						"value": "network-only"
					},
					{
						"type": "literal",
						"value": "cache-only"
					},
					{
						"type": "literal",
						"value": "no-cache"
					},
					{
						"type": "literal",
						"value": "standby"
					}
				]
			}
		},
		{
			"id": 1103,
			"name": "FieldMergeFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/policies.ts",
					"line": 252,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1109,
					"name": "TExisting",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1110,
					"name": "TIncoming",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1109,
						"name": "TExisting"
					}
				},
				{
					"id": 1111,
					"name": "TOptions",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 1112,
						"name": "FieldFunctionOptions"
					},
					"default": {
						"type": "reference",
						"id": 1112,
						"name": "FieldFunctionOptions"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1104,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 258,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1105,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1106,
									"name": "existing",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1109,
														"name": "TExisting"
													}
												],
												"name": "SafeReadonly"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 1107,
									"name": "incoming",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1110,
												"name": "TIncoming"
											}
										],
										"name": "SafeReadonly"
									}
								},
								{
									"id": 1108,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1111,
										"name": "TOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1109,
										"name": "TExisting"
									}
								],
								"name": "SafeReadonly"
							}
						}
					]
				}
			}
		},
		{
			"id": 1086,
			"name": "FieldPolicy",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/policies.ts",
					"line": 146,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1091,
					"name": "TExisting",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1092,
					"name": "TIncoming",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1091,
						"name": "TExisting"
					}
				},
				{
					"id": 1093,
					"name": "TReadResult",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1092,
						"name": "TIncoming"
					}
				},
				{
					"id": 1094,
					"name": "TOptions",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 1112,
						"name": "FieldFunctionOptions"
					},
					"default": {
						"type": "reference",
						"id": 1112,
						"name": "FieldFunctionOptions"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1087,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1088,
							"name": "keyArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/policies.ts",
									"line": 163,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "KeySpecifier"
									},
									{
										"type": "reference",
										"name": "KeyArgsFunction"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 1090,
							"name": "merge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/policies.ts",
									"line": 165,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1103,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1091,
												"name": "TExisting"
											},
											{
												"type": "reference",
												"id": 1092,
												"name": "TIncoming"
											},
											{
												"type": "reference",
												"id": 1094,
												"name": "TOptions"
											}
										],
										"name": "FieldMergeFunction"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1089,
							"name": "read",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/policies.ts",
									"line": 164,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1095,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1091,
										"name": "TExisting"
									},
									{
										"type": "reference",
										"id": 1093,
										"name": "TReadResult"
									},
									{
										"type": "reference",
										"id": 1094,
										"name": "TOptions"
									}
								],
								"name": "FieldReadFunction"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1088,
								1090,
								1089
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 162,
							"character": 4
						}
					]
				}
			}
		},
		{
			"id": 1095,
			"name": "FieldReadFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/policies.ts",
					"line": 235,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1100,
					"name": "TExisting",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1101,
					"name": "TReadResult",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1100,
						"name": "TExisting"
					}
				},
				{
					"id": 1102,
					"name": "TOptions",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 1112,
						"name": "FieldFunctionOptions"
					},
					"default": {
						"type": "reference",
						"id": 1112,
						"name": "FieldFunctionOptions"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1096,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 239,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1097,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1098,
									"name": "existing",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1100,
														"name": "TExisting"
													}
												],
												"name": "SafeReadonly"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 1099,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1102,
										"name": "TOptions"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1101,
										"name": "TReadResult"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 473,
			"name": "FragmentMatcher",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/LocalState.ts",
					"line": 51,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 474,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/LocalState.ts",
							"line": 51,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 475,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 476,
									"name": "rootValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 477,
									"name": "typeCondition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 478,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 1465,
			"name": "IdGetter",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 32,
					"character": 20
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1466,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 32,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 1467,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1468,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1445,
										"name": "IdGetterObj"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 1332,
			"name": "InternalRefetchQueriesInclude",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 35,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 1330,
							"name": "InternalRefetchQueryDescriptor"
						}
					},
					{
						"type": "reference",
						"name": "RefetchQueriesIncludeShorthand"
					}
				]
			}
		},
		{
			"id": 1385,
			"name": "InternalRefetchQueriesMap",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 126,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1386,
					"name": "TResult",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 154,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ObservableQuery"
					},
					{
						"type": "reference",
						"id": 1383,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1386,
								"name": "TResult"
							}
						],
						"name": "InternalRefetchQueriesResult"
					}
				],
				"name": "Map"
			}
		},
		{
			"id": 1383,
			"name": "InternalRefetchQueriesResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 116,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1384,
					"name": "TResult",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"id": 1384,
					"name": "TResult"
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"trueType": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1389,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "ApolloQueryResult"
						}
					],
					"name": "Promise"
				},
				"falseType": {
					"type": "reference",
					"id": 1384,
					"name": "TResult"
				}
			}
		},
		{
			"id": 1330,
			"name": "InternalRefetchQueryDescriptor",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 27,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 1329,
						"name": "RefetchQueryDescriptor"
					},
					{
						"type": "reference",
						"id": 372,
						"name": "QueryOptions"
					}
				]
			}
		},
		{
			"id": 2075,
			"name": "LazyQueryResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 108,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 2076,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 2077,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"id": 1940,
				"typeArguments": [
					{
						"type": "reference",
						"id": 2076,
						"name": "TData"
					},
					{
						"type": "reference",
						"id": 2077,
						"name": "TVariables"
					}
				],
				"name": "QueryResult"
			}
		},
		{
			"id": 2160,
			"name": "MutationFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 155,
					"character": 20
				}
			],
			"typeParameter": [
				{
					"id": 2164,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2165,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				},
				{
					"id": 2166,
					"name": "TContext",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					}
				},
				{
					"id": 2167,
					"name": "TCache",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					},
					"default": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2161,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 160,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2162,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2163,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 2119,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2164,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 2165,
												"name": "TVariables"
											},
											{
												"type": "reference",
												"id": 2166,
												"name": "TContext"
											},
											{
												"type": "reference",
												"id": 2167,
												"name": "TCache"
											}
										],
										"name": "MutationFunctionOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1647,
										"typeArguments": [
											{
												"type": "reference",
												"id": 2164,
												"name": "TData"
											}
										],
										"name": "FetchResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			}
		},
		{
			"id": 1398,
			"name": "MutationQueryReducer",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 148,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1407,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1399,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 148,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 1400,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1401,
									"name": "previousResult",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								},
								{
									"id": 1402,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1403,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1404,
													"name": "mutationResult",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/types.ts",
															"line": 151,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 1647,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1407,
																"name": "T"
															}
														],
														"name": "FetchResult"
													}
												},
												{
													"id": 1405,
													"name": "queryName",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/types.ts",
															"line": 152,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 1406,
													"name": "queryVariables",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/types.ts",
															"line": 153,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1404,
														1405,
														1406
													]
												}
											],
											"sources": [
												{
													"fileName": "src/core/types.ts",
													"line": 150,
													"character": 11
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							}
						}
					]
				}
			}
		},
		{
			"id": 1408,
			"name": "MutationQueryReducersMap",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 157,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1415,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reflection",
						"declaration": {
							"id": 1412,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/types.ts",
									"line": 157,
									"character": 41
								}
							],
							"indexSignature": {
								"id": 1413,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1414,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1409,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 157,
							"character": 67
						}
					],
					"indexSignature": {
						"id": 1410,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1411,
								"name": "queryName",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reference",
							"id": 1398,
							"typeArguments": [
								{
									"type": "reference",
									"id": 1415,
									"name": "T"
								}
							],
							"name": "MutationQueryReducer"
						}
					}
				}
			}
		},
		{
			"id": 2232,
			"name": "MutationTuple",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 182,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 2236,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 2237,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 2238,
					"name": "TContext",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1317,
						"name": "DefaultContext"
					}
				},
				{
					"id": 2239,
					"name": "TCache",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					},
					"default": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					}
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "reflection",
						"declaration": {
							"id": 2233,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/react/types/types.ts",
									"line": 188,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 2234,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2235,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 2119,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2236,
														"name": "TData"
													},
													{
														"type": "reference",
														"id": 2237,
														"name": "TVariables"
													},
													{
														"type": "reference",
														"id": 2238,
														"name": "TContext"
													},
													{
														"type": "reference",
														"id": 2239,
														"name": "TCache"
													}
												],
												"name": "MutationFunctionOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1647,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2236,
														"name": "TData"
													}
												],
												"name": "FetchResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					},
					{
						"type": "reference",
						"id": 2151,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2236,
								"name": "TData"
							}
						],
						"name": "MutationResult"
					}
				]
			}
		},
		{
			"id": 1416,
			"name": "MutationUpdaterFn",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 162,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1424,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reflection",
						"declaration": {
							"id": 1421,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/types.ts",
									"line": 162,
									"character": 34
								}
							],
							"indexSignature": {
								"id": 1422,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1423,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1417,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 162,
							"character": 60
						}
					],
					"signatures": [
						{
							"id": 1418,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1419,
									"name": "cache",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 662,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1424,
												"name": "T"
											}
										],
										"name": "ApolloCache"
									}
								},
								{
									"id": 1420,
									"name": "mutationResult",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1647,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1424,
												"name": "T"
											}
										],
										"name": "FetchResult"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1425,
			"name": "MutationUpdaterFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 170,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1434,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1435,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1436,
					"name": "TContext",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1437,
					"name": "TCache",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 662,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloCache"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1426,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 175,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1427,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1428,
									"name": "cache",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1437,
										"name": "TCache"
									}
								},
								{
									"id": 1429,
									"name": "result",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1647,
												"typeArguments": [
													{
														"type": "reference",
														"id": 1434,
														"name": "TData"
													}
												],
												"name": "FetchResult"
											},
											{
												"type": "literal",
												"value": "context"
											}
										],
										"name": "Omit"
									}
								},
								{
									"id": 1430,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1431,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1432,
													"name": "context",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/core/types.ts",
															"line": 179,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 1436,
														"name": "TContext"
													}
												},
												{
													"id": 1433,
													"name": "variables",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/core/types.ts",
															"line": 180,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"id": 1435,
														"name": "TVariables"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1432,
														1433
													]
												}
											],
											"sources": [
												{
													"fileName": "src/core/types.ts",
													"line": 178,
													"character": 11
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1655,
			"name": "NextLink",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/core/types.ts",
					"line": 33,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1656,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 33,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 1657,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1658,
									"name": "operation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1637,
										"name": "Operation"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1647,
										"name": "FetchResult"
									}
								],
								"name": "Observable"
							}
						}
					]
				}
			}
		},
		{
			"id": 1925,
			"name": "ObservableQueryFields",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 51,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1938,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1939,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 154,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1938,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 1939,
										"name": "TVariables"
									}
								],
								"name": "ObservableQuery"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "startPolling"
									},
									{
										"type": "literal",
										"value": "stopPolling"
									},
									{
										"type": "literal",
										"value": "subscribeToMore"
									},
									{
										"type": "literal",
										"value": "updateQuery"
									},
									{
										"type": "literal",
										"value": "refetch"
									},
									{
										"type": "literal",
										"value": "variables"
									}
								]
							}
						],
						"name": "Pick"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1926,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1927,
									"name": "fetchMore",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/react/types/types.ts",
											"line": 60,
											"character": 2
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1928,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/react/types/types.ts",
															"line": 60,
															"character": 14
														}
													],
													"signatures": [
														{
															"id": 1929,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1930,
																	"name": "fetchMoreOptions",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"id": 437,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 1939,
																						"name": "TVariables"
																					},
																					{
																						"type": "reference",
																						"id": 1938,
																						"name": "TData"
																					}
																				],
																				"name": "FetchMoreQueryOptions"
																			},
																			{
																				"type": "reference",
																				"id": 354,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 1938,
																						"name": "TData"
																					},
																					{
																						"type": "reference",
																						"id": 1939,
																						"name": "TVariables"
																					}
																				],
																				"name": "FetchMoreOptions"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1389,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1938,
																				"name": "TData"
																			}
																		],
																		"name": "ApolloQueryResult"
																	}
																],
																"name": "Promise"
															}
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1931,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/react/types/types.ts",
															"line": 64,
															"character": 5
														}
													],
													"signatures": [
														{
															"id": 1932,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"typeParameter": [
																{
																	"id": 1936,
																	"name": "TData2",
																	"kind": 131072,
																	"kindString": "Type parameter",
																	"flags": {}
																},
																{
																	"id": 1937,
																	"name": "TVariables2",
																	"kind": 131072,
																	"kindString": "Type parameter",
																	"flags": {}
																}
															],
															"parameters": [
																{
																	"id": 1933,
																	"name": "fetchMoreOptions",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1934,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 1935,
																							"name": "query",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {
																								"isOptional": true
																							},
																							"sources": [
																								{
																									"fileName": "src/react/types/types.ts",
																									"line": 65,
																									"character": 26
																								}
																							],
																							"type": {
																								"type": "union",
																								"types": [
																									{
																										"type": "reference",
																										"id": 1627,
																										"name": "DocumentNode"
																									},
																									{
																										"type": "reference",
																										"id": 1302,
																										"typeArguments": [
																											{
																												"type": "reference",
																												"id": 1938,
																												"name": "TData"
																											},
																											{
																												"type": "reference",
																												"id": 1939,
																												"name": "TVariables"
																											}
																										],
																										"name": "TypedDocumentNode"
																									}
																								]
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								1935
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "src/react/types/types.ts",
																							"line": 65,
																							"character": 24
																						}
																					]
																				}
																			},
																			{
																				"type": "reference",
																				"id": 437,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 1937,
																						"name": "TVariables2"
																					},
																					{
																						"type": "reference",
																						"id": 1938,
																						"name": "TData"
																					}
																				],
																				"name": "FetchMoreQueryOptions"
																			},
																			{
																				"type": "reference",
																				"id": 354,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"id": 1936,
																						"name": "TData2"
																					},
																					{
																						"type": "reference",
																						"id": 1937,
																						"name": "TVariables2"
																					}
																				],
																				"name": "FetchMoreOptions"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 1389,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 1936,
																				"name": "TData2"
																			}
																		],
																		"name": "ApolloQueryResult"
																	}
																],
																"name": "Promise"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1927
									]
								}
							],
							"sources": [
								{
									"fileName": "src/react/types/types.ts",
									"line": 59,
									"character": 4
								}
							]
						}
					}
				]
			},
			"extendedBy": [
				{
					"type": "reference",
					"id": 1940,
					"name": "QueryResult"
				}
			]
		},
		{
			"id": 1322,
			"name": "OnQueryUpdated",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 20,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1328,
					"name": "TResult",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1323,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 20,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 1324,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1325,
									"name": "observableQuery",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 154,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ObservableQuery"
									}
								},
								{
									"id": 1326,
									"name": "diff",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 587,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Cache.DiffResult"
									}
								},
								{
									"id": 1327,
									"name": "lastDiff",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 587,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Cache.DiffResult"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 1328,
										"name": "TResult"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 1388,
			"name": "OperationVariables",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 133,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "any"
					}
				],
				"name": "Record"
			}
		},
		{
			"id": 1523,
			"name": "OptimisticStoreItem",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 102,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1524,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1526,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 104,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1517,
								"name": "NormalizedCacheObject"
							}
						},
						{
							"id": 1525,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 103,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1527,
							"name": "transaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 770,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1517,
										"name": "NormalizedCacheObject"
									}
								],
								"name": "Transaction"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1526,
								1525,
								1527
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 102,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 1130,
			"name": "PossibleTypesMap",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/policies.ts",
					"line": 275,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1131,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 275,
							"character": 31
						}
					],
					"indexSignature": {
						"id": 1132,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1133,
								"name": "supertype",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					}
				}
			}
		},
		{
			"id": 1318,
			"name": "QueryListener",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 18,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1319,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/types.ts",
							"line": 18,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 1320,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1321,
									"name": "queryInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "QueryInfo"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 2078,
			"name": "QueryTuple",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 110,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 2082,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 2083,
					"name": "TVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "reflection",
						"declaration": {
							"id": 2079,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/react/types/types.ts",
									"line": 111,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 2080,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2081,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 2071,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2083,
														"name": "TVariables"
													}
												],
												"name": "QueryLazyOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2075,
												"typeArguments": [
													{
														"type": "reference",
														"id": 2082,
														"name": "TData"
													},
													{
														"type": "reference",
														"id": 2083,
														"name": "TVariables"
													}
												],
												"name": "LazyQueryResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					},
					{
						"type": "reference",
						"id": 2075,
						"typeArguments": [
							{
								"type": "reference",
								"id": 2082,
								"name": "TData"
							},
							{
								"type": "reference",
								"id": 2083,
								"name": "TVariables"
							}
						],
						"name": "LazyQueryResult"
					}
				]
			}
		},
		{
			"id": 1528,
			"name": "ReadQueryOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/types.ts",
					"line": 108,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1529,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1534,
							"name": "canonizeResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1536,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1540,
								"name": "ApolloReducerConfig"
							}
						},
						{
							"id": 1533,
							"name": "previousResult",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 112,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1531,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 110,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							}
						},
						{
							"id": 1535,
							"name": "rootId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 114,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1530,
							"name": "store",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 109,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1469,
								"name": "NormalizedCache"
							}
						},
						{
							"id": 1532,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/types.ts",
									"line": 111,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1534,
								1536,
								1533,
								1531,
								1535,
								1530,
								1532
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/inmemory/types.ts",
							"line": 108,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 2084,
			"name": "RefetchQueriesFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/types/types.ts",
					"line": 117,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2085,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/react/types/types.ts",
							"line": 117,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 2086,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2087,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1332,
								"name": "InternalRefetchQueriesInclude"
							}
						}
					]
				}
			}
		},
		{
			"id": 1331,
			"name": "RefetchQueriesInclude",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 31,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 1329,
							"name": "RefetchQueryDescriptor"
						}
					},
					{
						"type": "reference",
						"name": "RefetchQueriesIncludeShorthand"
					}
				]
			}
		},
		{
			"id": 1342,
			"name": "RefetchQueriesPromiseResults",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 65,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 1343,
					"name": "TResult",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1343,
							"name": "TResult"
						}
					],
					"name": "IsStrictlyAny"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"id": 1343,
						"name": "TResult"
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"trueType": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 1389,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "ApolloQueryResult"
						}
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"id": 1343,
							"name": "TResult"
						},
						"extendsType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "inferred",
									"name": "U"
								}
							],
							"name": "PromiseLike"
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "U"
							}
						},
						"falseType": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"id": 1343,
								"name": "TResult"
							}
						}
					}
				}
			}
		},
		{
			"id": 1329,
			"name": "RefetchQueryDescriptor",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/types.ts",
					"line": 26,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"id": 1627,
						"name": "DocumentNode"
					}
				]
			}
		},
		{
			"id": 1659,
			"name": "RequestHandler",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/core/types.ts",
					"line": 35,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1660,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/link/core/types.ts",
							"line": 35,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 1661,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1662,
									"name": "operation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1637,
										"name": "Operation"
									}
								},
								{
									"id": 1663,
									"name": "forward",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1655,
										"name": "NextLink"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1156,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1647,
												"name": "FetchResult"
											}
										],
										"name": "Observable"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 463,
			"name": "Resolver",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/LocalState.ts",
					"line": 39,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 464,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/LocalState.ts",
							"line": 39,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 465,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 466,
									"name": "rootValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 467,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 468,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 469,
									"name": "info",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 470,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 471,
													"name": "field",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/LocalState.ts",
															"line": 44,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"name": "FieldNode"
													}
												},
												{
													"id": 472,
													"name": "fragmentMap",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/LocalState.ts",
															"line": 45,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"name": "FragmentMap"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														471,
														472
													]
												}
											],
											"sources": [
												{
													"fileName": "src/core/LocalState.ts",
													"line": 43,
													"character": 9
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			}
		},
		{
			"id": 1146,
			"name": "ServerError",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/utils/throwServerError.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "Error"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1147,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1148,
									"name": "response",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/link/utils/throwServerError.ts",
											"line": 2,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"name": "Response"
									}
								},
								{
									"id": 1149,
									"name": "result",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/link/utils/throwServerError.ts",
											"line": 3,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								},
								{
									"id": 1150,
									"name": "statusCode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/link/utils/throwServerError.ts",
											"line": 4,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1148,
										1149,
										1150
									]
								}
							],
							"sources": [
								{
									"fileName": "src/link/utils/throwServerError.ts",
									"line": 1,
									"character": 34
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1670,
			"name": "ServerParseError",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/http/parseAndCheckHttpResponse.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "Error"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1671,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1674,
									"name": "bodyText",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/link/http/parseAndCheckHttpResponse.ts",
											"line": 9,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1672,
									"name": "response",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/link/http/parseAndCheckHttpResponse.ts",
											"line": 7,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"name": "Response"
									}
								},
								{
									"id": 1673,
									"name": "statusCode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/link/http/parseAndCheckHttpResponse.ts",
											"line": 8,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1674,
										1672,
										1673
									]
								}
							],
							"sources": [
								{
									"fileName": "src/link/http/parseAndCheckHttpResponse.ts",
									"line": 6,
									"character": 39
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1444,
			"name": "StoreValue",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utilities/graphql/storeUtils.ts",
					"line": 38,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					{
						"type": "reference",
						"id": 1266,
						"name": "Reference"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 1266,
							"name": "Reference"
						}
					},
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					},
					{
						"type": "intrinsic",
						"name": "void"
					},
					{
						"type": "reference",
						"name": "Object"
					}
				]
			}
		},
		{
			"id": 443,
			"name": "SubscribeToMoreOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/watchQueryOptions.ts",
					"line": 157,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 452,
					"name": "TData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 453,
					"name": "TSubscriptionVariables",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 1388,
						"name": "OperationVariables"
					}
				},
				{
					"id": 454,
					"name": "TSubscriptionData",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "reference",
						"id": 452,
						"name": "TData"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 444,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 451,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/watchQueryOptions.ts",
									"line": 166,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 1317,
								"name": "DefaultContext"
							}
						},
						{
							"id": 445,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/watchQueryOptions.ts",
									"line": 162,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 454,
												"name": "TSubscriptionData"
											},
											{
												"type": "reference",
												"id": 453,
												"name": "TSubscriptionVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							}
						},
						{
							"id": 447,
							"name": "updateQuery",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/watchQueryOptions.ts",
									"line": 164,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 452,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 453,
										"name": "TSubscriptionVariables"
									},
									{
										"type": "reference",
										"id": 454,
										"name": "TSubscriptionData"
									}
								],
								"name": "UpdateQueryFn"
							}
						},
						{
							"id": 446,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/watchQueryOptions.ts",
									"line": 163,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 453,
								"name": "TSubscriptionVariables"
							}
						},
						{
							"id": 448,
							"name": "onError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/watchQueryOptions.ts",
									"line": 165,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 449,
									"name": "onError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 450,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								451,
								445,
								447,
								446
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								448
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/watchQueryOptions.ts",
							"line": 161,
							"character": 4
						}
					]
				}
			}
		},
		{
			"id": 770,
			"name": "Transaction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/core/cache.ts",
					"line": 12,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 774,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 771,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/core/cache.ts",
							"line": 12,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 772,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 773,
									"name": "c",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 662,
										"typeArguments": [
											{
												"type": "reference",
												"id": 774,
												"name": "T"
											}
										],
										"name": "ApolloCache"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1071,
			"name": "TypePolicies",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/policies.ts",
					"line": 56,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1072,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 56,
							"character": 27
						}
					],
					"indexSignature": {
						"id": 1073,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1074,
								"name": "__typename",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reference",
							"id": 1075,
							"name": "TypePolicy"
						}
					}
				}
			}
		},
		{
			"id": 1075,
			"name": "TypePolicy",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/policies.ts",
					"line": 108,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1076,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1082,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/policies.ts",
									"line": 129,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1083,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/cache/inmemory/policies.ts",
											"line": 129,
											"character": 11
										}
									],
									"indexSignature": {
										"id": 1084,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1085,
												"name": "fieldName",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 1086,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "FieldPolicy"
												},
												{
													"type": "reference",
													"id": 1095,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "FieldReadFunction"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 1077,
							"name": "keyFields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/policies.ts",
									"line": 111,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "KeySpecifier"
									},
									{
										"type": "reference",
										"name": "KeyFieldsFunction"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 1078,
							"name": "merge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/policies.ts",
									"line": 120,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1103,
										"name": "FieldMergeFunction"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1080,
							"name": "mutationType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/policies.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 1079,
							"name": "queryType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/policies.ts",
									"line": 125,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 1081,
							"name": "subscriptionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/cache/inmemory/policies.ts",
									"line": 127,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1082,
								1077,
								1078,
								1080,
								1079,
								1081
							]
						}
					],
					"sources": [
						{
							"fileName": "src/cache/inmemory/policies.ts",
							"line": 108,
							"character": 25
						}
					]
				}
			}
		},
		{
			"id": 435,
			"name": "WatchQueryFetchPolicy",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/watchQueryOptions.ts",
					"line": 31,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 434,
						"name": "FetchPolicy"
					},
					{
						"type": "literal",
						"value": "cache-and-network"
					}
				]
			}
		},
		{
			"id": 1821,
			"name": "ApolloConsumer",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/context/ApolloConsumer.tsx",
					"line": 12,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"name": "ApolloConsumerProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "..."
		},
		{
			"id": 1820,
			"name": "ApolloProvider",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/context/ApolloProvider.tsx",
					"line": 13,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ApolloProviderProps"
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "..."
		},
		{
			"id": 1696,
			"name": "fallbackHttpConfig",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
					"line": 106,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1697,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1699,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1700,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1701,
											"name": "accept",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'*/*'"
										},
										{
											"id": 1702,
											"name": "content-type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'application/json'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1701,
												1702
											]
										}
									]
								}
							},
							"defaultValue": "defaultHeaders"
						},
						{
							"id": 1698,
							"name": "http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "HttpQueryOptions"
							},
							"defaultValue": "defaultHttpOptions"
						},
						{
							"id": 1703,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1704,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1705,
											"name": "method",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'POST'"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1705
											]
										}
									]
								}
							},
							"defaultValue": "defaultOptions"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1699,
								1698,
								1703
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 367,
			"name": "applyNextFetchPolicy",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/ObservableQuery.ts",
					"line": 833,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 368,
					"name": "applyNextFetchPolicy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 369,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 370,
							"name": "TVars",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 371,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 385,
										"typeArguments": [
											{
												"type": "reference",
												"id": 370,
												"name": "TVars"
											},
											{
												"type": "reference",
												"id": 369,
												"name": "TData"
											}
										],
										"name": "WatchQueryOptions"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "fetchPolicy"
											},
											{
												"type": "literal",
												"value": "nextFetchPolicy"
											}
										]
									}
								],
								"name": "Pick"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1732,
			"name": "checkFetcher",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/http/checkFetcher.ts",
					"line": 3,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1733,
					"name": "checkFetcher",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1734,
							"name": "fetcher",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1735,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1736,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1737,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "RequestInfo"
															}
														},
														{
															"id": 1738,
															"name": "init",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"name": "RequestInit"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Response"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1568,
			"name": "concat",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/core/concat.ts",
					"line": 3,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1569,
					"name": "concat",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1570,
							"name": "first",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1576,
										"name": "ApolloLink"
									},
									{
										"type": "reference",
										"id": 1659,
										"name": "RequestHandler"
									}
								]
							}
						},
						{
							"id": 1571,
							"name": "second",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1576,
										"name": "ApolloLink"
									},
									{
										"type": "reference",
										"id": 1659,
										"name": "RequestHandler"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1576,
						"name": "ApolloLink"
					}
				}
			]
		},
		{
			"id": 1754,
			"name": "createHttpLink",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/http/createHttpLink.ts",
					"line": 24,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1755,
					"name": "createHttpLink",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1756,
							"name": "linkOptions",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1682,
								"name": "HttpOptions"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"id": 1576,
						"name": "ApolloLink"
					}
				}
			]
		},
		{
			"id": 1739,
			"name": "createSignalIfSupported",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/http/createSignalIfSupported.ts",
					"line": 1,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1740,
					"name": "createSignalIfSupported",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1741,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1742,
											"name": "controller",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										},
										{
											"id": 1743,
											"name": "signal",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1742,
												1743
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1744,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1745,
											"name": "controller",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AbortController"
											}
										},
										{
											"id": 1746,
											"name": "signal",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AbortSignal"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1745,
												1746
											]
										}
									]
								}
							}
						]
					}
				}
			]
		},
		{
			"id": 1051,
			"name": "defaultDataIdFromObject",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/cache/inmemory/helpers.ts",
					"line": 27,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1052,
					"name": "defaultDataIdFromObject",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1053,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1272,
										"name": "StoreObject"
									}
								],
								"name": "Readonly"
							}
						},
						{
							"id": 1054,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "KeyFieldsContext"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 1706,
			"name": "defaultPrinter",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
					"line": 112,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1707,
					"name": "defaultPrinter",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1708,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ASTNode"
							}
						},
						{
							"id": 1709,
							"name": "originalPrint",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1710,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1711,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Converts an AST into a string, using one set of reasonable\nformatting rules."
											},
											"parameters": [
												{
													"id": 1712,
													"name": "ast",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "ASTNode"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1300,
			"name": "disableExperimentalFragmentVariables",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/graphql-tag/lib/index.d.ts",
					"line": 10,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1301,
					"name": "disableExperimentalFragmentVariables",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1296,
			"name": "disableFragmentWarnings",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/graphql-tag/lib/index.d.ts",
					"line": 8,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1297,
					"name": "disableFragmentWarnings",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1555,
			"name": "empty",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/core/empty.ts",
					"line": 3,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1556,
					"name": "empty",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 1576,
						"name": "ApolloLink"
					}
				}
			]
		},
		{
			"id": 1298,
			"name": "enableExperimentalFragmentVariables",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/graphql-tag/lib/index.d.ts",
					"line": 9,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1299,
					"name": "enableExperimentalFragmentVariables",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1572,
			"name": "execute",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/core/execute.ts",
					"line": 3,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1573,
					"name": "execute",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1574,
							"name": "link",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1576,
								"name": "ApolloLink"
							}
						},
						{
							"id": 1575,
							"name": "operation",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1631,
								"name": "GraphQLRequest"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1156,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1647,
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								],
								"name": "FetchResult"
							}
						],
						"name": "Observable"
					}
				}
			]
		},
		{
			"id": 1557,
			"name": "from",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/core/from.ts",
					"line": 3,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1558,
					"name": "from",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1559,
							"name": "links",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 1576,
											"name": "ApolloLink"
										},
										{
											"type": "reference",
											"id": 1659,
											"name": "RequestHandler"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1576,
						"name": "ApolloLink"
					}
				}
			]
		},
		{
			"id": 1134,
			"name": "fromError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/utils/fromError.ts",
					"line": 3,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1135,
					"name": "fromError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1136,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1137,
							"name": "errorValue",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1156,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1136,
								"name": "T"
							}
						],
						"name": "Observable"
					}
				}
			]
		},
		{
			"id": 1142,
			"name": "fromPromise",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/utils/fromPromise.ts",
					"line": 3,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1143,
					"name": "fromPromise",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1144,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1145,
							"name": "promise",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1144,
										"name": "T"
									}
								],
								"name": "Promise"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1156,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1144,
								"name": "T"
							}
						],
						"name": "Observable"
					}
				}
			]
		},
		{
			"id": 1822,
			"name": "getApolloContext",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/context/ApolloContext.ts",
					"line": 19,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1823,
					"name": "getApolloContext",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1825,
								"name": "ApolloContextValue"
							}
						],
						"name": "React.Context"
					}
				}
			]
		},
		{
			"id": 1279,
			"name": "gql",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/graphql-tag/lib/index.d.ts",
					"line": 2,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1280,
					"name": "gql",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"parameters": [
						{
							"id": 1281,
							"name": "literals",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								]
							}
						},
						{
							"id": 1282,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true,
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1627,
						"name": "DocumentNode"
					}
				}
			]
		},
		{
			"id": 479,
			"name": "isApolloError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/errors/index.ts",
					"line": 9,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 480,
					"name": "isApolloError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 481,
							"name": "err",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Error"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "err",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 482,
							"name": "ApolloError"
						}
					}
				}
			]
		},
		{
			"id": 1269,
			"name": "makeReference",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utilities/graphql/storeUtils.ts",
					"line": 30,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1270,
					"name": "makeReference",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1271,
							"name": "id",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1266,
						"name": "Reference"
					}
				}
			]
		},
		{
			"id": 149,
			"name": "mergeOptions",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/ApolloClient.ts",
					"line": 70,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 150,
					"name": "mergeOptions",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 151,
							"name": "TOptions",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "OptionsUnion"
							}
						}
					],
					"parameters": [
						{
							"id": 152,
							"name": "defaults",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 151,
										"name": "TOptions"
									}
								],
								"name": "Partial"
							}
						},
						{
							"id": 153,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 151,
								"name": "TOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 151,
						"name": "TOptions"
					}
				}
			]
		},
		{
			"id": 1836,
			"name": "operationName",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/parser/index.ts",
					"line": 24,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1837,
					"name": "operationName",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1838,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1828,
								"name": "DocumentType"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1664,
			"name": "parseAndCheckHttpResponse",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/http/parseAndCheckHttpResponse.ts",
					"line": 12,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1665,
					"name": "parseAndCheckHttpResponse",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1666,
							"name": "operations",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1637,
										"name": "Operation"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1637,
											"name": "Operation"
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1667,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1668,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1669,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Response"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1839,
			"name": "parser",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/parser/index.ts",
					"line": 41,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1840,
					"name": "parser",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1841,
							"name": "document",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1627,
								"name": "DocumentNode"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1832,
						"name": "IDocumentDefinition"
					}
				}
			]
		},
		{
			"id": 1294,
			"name": "resetCaches",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/graphql-tag/lib/index.d.ts",
					"line": 7,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1295,
					"name": "resetCaches",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1810,
			"name": "rewriteURIForGET",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/http/rewriteURIForGET.ts",
					"line": 6,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1811,
					"name": "rewriteURIForGET",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1812,
							"name": "chosenURI",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1813,
							"name": "body",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Body"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1814,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1816,
											"name": "newURI",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 1815,
											"name": "parseError",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1816,
												1815
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1817,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1818,
											"name": "newURI",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1819,
											"name": "parseError",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1818,
												1819
											]
										}
									]
								}
							}
						]
					}
				}
			]
		},
		{
			"id": 1713,
			"name": "selectHttpOptionsAndBody",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
					"line": 114,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1714,
					"name": "selectHttpOptionsAndBody",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1715,
							"name": "operation",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1637,
								"name": "Operation"
							}
						},
						{
							"id": 1716,
							"name": "fallbackConfig",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "HttpConfig"
							}
						},
						{
							"id": 1717,
							"name": "configs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "HttpConfig"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1718,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1720,
									"name": "body",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Body"
									}
								},
								{
									"id": 1719,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "HttpConfig"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1720,
										1719
									]
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1721,
			"name": "selectHttpOptionsAndBodyInternal",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/http/selectHttpOptionsAndBody.ts",
					"line": 127,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1722,
					"name": "selectHttpOptionsAndBodyInternal",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1723,
							"name": "operation",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1637,
								"name": "Operation"
							}
						},
						{
							"id": 1724,
							"name": "printer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Printer"
							}
						},
						{
							"id": 1725,
							"name": "configs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "HttpConfig"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1726,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1728,
									"name": "body",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Body"
									}
								},
								{
									"id": 1727,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "HttpConfig"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1728,
										1727
									]
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1747,
			"name": "selectURI",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/http/selectURI.ts",
					"line": 3,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1748,
					"name": "selectURI",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1749,
							"name": "operation",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1637,
								"name": "Operation"
							}
						},
						{
							"id": 1750,
							"name": "fallbackURI",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1751,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1752,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1753,
															"name": "operation",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 1637,
																"name": "Operation"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1675,
			"name": "serializeFetchParameter",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/http/serializeFetchParameter.ts",
					"line": 7,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1676,
					"name": "serializeFetchParameter",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1677,
							"name": "p",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1678,
							"name": "label",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1276,
			"name": "setLogVerbosity",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/ts-invariant/lib/invariant.d.ts",
					"line": 28,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 1277,
					"name": "setLogVerbosity",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"parameters": [
						{
							"id": 1278,
							"name": "level",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "error"
									},
									{
										"type": "literal",
										"value": "debug"
									},
									{
										"type": "literal",
										"value": "log"
									},
									{
										"type": "literal",
										"value": "warn"
									},
									{
										"type": "literal",
										"value": "silent"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "VerbosityLevel"
					}
				}
			]
		},
		{
			"id": 1560,
			"name": "split",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/core/split.ts",
					"line": 3,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1561,
					"name": "split",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1562,
							"name": "test",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1563,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1564,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1565,
													"name": "op",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 1637,
														"name": "Operation"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 1566,
							"name": "left",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1576,
										"name": "ApolloLink"
									},
									{
										"type": "reference",
										"id": 1659,
										"name": "RequestHandler"
									}
								]
							}
						},
						{
							"id": 1567,
							"name": "right",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1576,
										"name": "ApolloLink"
									},
									{
										"type": "reference",
										"id": 1659,
										"name": "RequestHandler"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1576,
						"name": "ApolloLink"
					}
				}
			]
		},
		{
			"id": 1151,
			"name": "throwServerError",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/link/utils/throwServerError.ts",
					"line": 7,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 1152,
					"name": "throwServerError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1153,
							"name": "response",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Response"
							}
						},
						{
							"id": 1154,
							"name": "result",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1155,
							"name": "message",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			]
		},
		{
			"id": 1138,
			"name": "toPromise",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/link/utils/toPromise.ts",
					"line": 4,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1139,
					"name": "toPromise",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1140,
							"name": "R",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1141,
							"name": "observable",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1156,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1140,
										"name": "R"
									}
								],
								"name": "Observable"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1140,
								"name": "R"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 1842,
			"name": "useApolloClient",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/hooks/useApolloClient.ts",
					"line": 6,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1843,
					"name": "useApolloClient",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1844,
							"name": "override",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 1,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "ApolloClient"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "object"
							}
						],
						"name": "ApolloClient"
					}
				}
			]
		},
		{
			"id": 1845,
			"name": "useLazyQuery",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/hooks/useLazyQuery.ts",
					"line": 24,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1846,
					"name": "useLazyQuery",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1847,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1848,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1388,
								"name": "OperationVariables"
							}
						}
					],
					"parameters": [
						{
							"id": 1849,
							"name": "query",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1847,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 1848,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							}
						},
						{
							"id": 1850,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 2044,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1847,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 1848,
										"name": "TVariables"
									}
								],
								"name": "LazyQueryHookOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 2078,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1847,
								"name": "TData"
							},
							{
								"type": "reference",
								"id": 1848,
								"name": "TVariables"
							}
						],
						"name": "QueryTuple"
					}
				}
			]
		},
		{
			"id": 1851,
			"name": "useMutation",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/hooks/useMutation.ts",
					"line": 22,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1852,
					"name": "useMutation",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1853,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1854,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1388,
								"name": "OperationVariables"
							}
						},
						{
							"id": 1855,
							"name": "TContext",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1317,
								"name": "DefaultContext"
							}
						},
						{
							"id": 1856,
							"name": "TCache",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 662,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"id": 1856,
										"name": "TCache"
									}
								],
								"name": "ApolloCache"
							},
							"default": {
								"type": "reference",
								"id": 662,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ApolloCache"
							}
						}
					],
					"parameters": [
						{
							"id": 1857,
							"name": "mutation",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1853,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 1854,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							}
						},
						{
							"id": 1858,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 2168,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1853,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 1854,
										"name": "TVariables"
									},
									{
										"type": "reference",
										"id": 1855,
										"name": "TContext"
									},
									{
										"type": "reference",
										"id": 662,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ApolloCache"
									}
								],
								"name": "MutationHookOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 2232,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1853,
								"name": "TData"
							},
							{
								"type": "reference",
								"id": 1854,
								"name": "TVariables"
							},
							{
								"type": "reference",
								"id": 1855,
								"name": "TContext"
							},
							{
								"type": "reference",
								"id": 1856,
								"name": "TCache"
							}
						],
						"name": "MutationTuple"
					}
				}
			]
		},
		{
			"id": 1859,
			"name": "useQuery",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/hooks/useQuery.ts",
					"line": 22,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1860,
					"name": "useQuery",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1861,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1862,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1388,
								"name": "OperationVariables"
							}
						}
					],
					"parameters": [
						{
							"id": 1863,
							"name": "query",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1861,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 1862,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							}
						},
						{
							"id": 1864,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 2016,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1861,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 1862,
										"name": "TVariables"
									}
								],
								"name": "QueryHookOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1940,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1861,
								"name": "TData"
							},
							{
								"type": "reference",
								"id": 1862,
								"name": "TVariables"
							}
						],
						"name": "QueryResult"
					}
				}
			]
		},
		{
			"id": 1871,
			"name": "useReactiveVar",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/hooks/useReactiveVar.ts",
					"line": 4,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1872,
					"name": "useReactiveVar",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1873,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1874,
							"name": "rv",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1055,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1873,
										"name": "T"
									}
								],
								"name": "ReactiveVar"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1873,
						"name": "T"
					}
				}
			]
		},
		{
			"id": 1865,
			"name": "useSubscription",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/react/hooks/useSubscription.ts",
					"line": 15,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1866,
					"name": "useSubscription",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1867,
							"name": "TData",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1868,
							"name": "TVariables",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "reference",
								"id": 1388,
								"name": "OperationVariables"
							}
						}
					],
					"parameters": [
						{
							"id": 1869,
							"name": "subscription",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1627,
										"name": "DocumentNode"
									},
									{
										"type": "reference",
										"id": 1302,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1867,
												"name": "TData"
											},
											{
												"type": "reference",
												"id": 1868,
												"name": "TVariables"
											}
										],
										"name": "TypedDocumentNode"
									}
								]
							}
						},
						{
							"id": 1870,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 2268,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1867,
										"name": "TData"
									},
									{
										"type": "reference",
										"id": 1868,
										"name": "TVariables"
									}
								],
								"name": "SubscriptionHookOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 2261,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1867,
								"name": "TData"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "SubscriptionResult"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "References",
			"kind": 16777216,
			"children": [
				1875,
				1387,
				1268,
				1070,
				1824
			]
		},
		{
			"title": "Namespaces",
			"kind": 4,
			"children": [
				509,
				798,
				1283
			]
		},
		{
			"title": "Enumerations",
			"kind": 8,
			"children": [
				1828,
				455
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				662,
				1,
				482,
				1576,
				1757,
				885,
				1040,
				1156,
				154
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				1825,
				2088,
				1880,
				2244,
				775,
				145,
				1627,
				354,
				437,
				1647,
				1112,
				1631,
				1682,
				1832,
				1445,
				1032,
				1373,
				2044,
				1544,
				1548,
				2200,
				2119,
				2168,
				403,
				2151,
				1469,
				1517,
				1262,
				1249,
				2240,
				1637,
				1985,
				1898,
				2016,
				2071,
				372,
				1940,
				1055,
				1551,
				1266,
				1333,
				1344,
				1438,
				1272,
				2308,
				2286,
				2268,
				426,
				2261,
				1302,
				364,
				1729,
				385
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				126,
				1389,
				1540,
				1679,
				1876,
				1317,
				1537,
				436,
				434,
				1103,
				1086,
				1095,
				473,
				1465,
				1332,
				1385,
				1383,
				1330,
				2075,
				2160,
				1398,
				1408,
				2232,
				1416,
				1425,
				1655,
				1925,
				1322,
				1388,
				1523,
				1130,
				1318,
				2078,
				1528,
				2084,
				1331,
				1342,
				1329,
				1659,
				463,
				1146,
				1670,
				1444,
				443,
				770,
				1071,
				1075,
				435
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1821,
				1820,
				1696
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				367,
				1732,
				1568,
				1754,
				1739,
				1051,
				1706,
				1300,
				1296,
				1555,
				1298,
				1572,
				1557,
				1134,
				1142,
				1822,
				1279,
				479,
				1269,
				149,
				1836,
				1664,
				1839,
				1294,
				1810,
				1713,
				1721,
				1747,
				1675,
				1276,
				1560,
				1151,
				1138,
				1842,
				1845,
				1851,
				1859,
				1871,
				1865
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}